import {
  FocusTrap_default,
  MenuUnstyledContext_default,
  ModalManager,
  PopperUnstyled_default,
  Portal_default,
  SelectUnstyledContext,
  TabsContext_default,
  TextareaAutosize_default,
  flattenOptionGroups,
  getOptionsFromChildren,
  init_ButtonUnstyled,
  init_FocusTrap,
  init_InputUnstyled,
  init_MenuItemUnstyled,
  init_MenuUnstyled,
  init_ModalUnstyled,
  init_PopperUnstyled,
  init_Portal,
  init_SelectUnstyled,
  init_SliderUnstyled,
  init_SwitchUnstyled,
  init_TabPanelUnstyled,
  init_TabUnstyled,
  init_TabsListUnstyled,
  init_TabsUnstyled,
  init_TextareaAutosize,
  init_base,
  init_composeClasses,
  init_utils,
  useButton,
  useInput,
  useMenu,
  useMenuItem,
  useSelect_default,
  useSlider,
  useSlotProps,
  useSwitch,
  useTabContext,
  useTabPanel_default,
  useTab_default,
  useTabsList_default,
  useTabs_default
} from "./chunk-6LMXLH2I.js";
import "./chunk-ZRYTYW4C.js";
import {
  ClassNameGenerator_default,
  GlobalStyles,
  HTMLElementType,
  StyledEngineProvider,
  ThemeProvider_default,
  border,
  borderBottom,
  borderBottomColor,
  borderColor,
  borderLeft,
  borderLeftColor,
  borderRight,
  borderRightColor,
  borderTop,
  borderTopColor,
  capitalize,
  colorChannel,
  composeClasses,
  compose_default,
  createBox,
  createBreakpoints,
  createContainer,
  createCssVarsProvider,
  createGetCssVar,
  createGrid,
  createSpacing,
  createStack,
  createStyled,
  css,
  cssGrid_default,
  deepmerge,
  display_default,
  elementAcceptingRef_default,
  extendSxProp,
  flexbox_default,
  generateUtilityClass,
  generateUtilityClasses,
  init_Unstable_Grid,
  init_esm,
  init_esm2,
  isMuiElement,
  keyframes,
  ownerDocument,
  palette_default,
  positions_default,
  refType_default,
  sizing_default,
  spacing_default,
  style_default,
  typographyVariant,
  unstable_createStyleFunctionSx,
  useControlled,
  useEventCallback,
  useForkRef,
  useId,
  useIsFocusVisible,
  usePreviousProps_default,
  useThemeProps,
  useTheme_default
} from "./chunk-CB7YOQJ4.js";
import "./chunk-HQY4V2KK.js";
import {
  _extends,
  _objectWithoutPropertiesLoose,
  init_extends,
  init_objectWithoutPropertiesLoose
} from "./chunk-DJVAONIT.js";
import {
  clsx_m_default,
  init_clsx_m
} from "./chunk-4JNWWNIS.js";
import "./chunk-44E7DJIA.js";
import {
  require_prop_types
} from "./chunk-2WYFTQK3.js";
import "./chunk-3M2UZNYF.js";
import {
  require_jsx_runtime
} from "./chunk-U62YBD46.js";
import {
  require_react
} from "./chunk-YP55OVAM.js";
import {
  __toESM
} from "./chunk-S5KM4IGW.js";

// node_modules/@mui/joy/colors/colors.js
var colors = {
  grey: {
    50: "#F7F7F8",
    100: "#EEEFF0",
    200: "#DDDEE0",
    300: "#BDBFC4",
    400: "#9DA1AC",
    500: "#81848F",
    600: "#646872",
    700: "#42454D",
    800: "#272930",
    900: "#131418"
  },
  blue: {
    50: "#F4FAFF",
    100: "#DDF1FF",
    200: "#ADDBFF",
    300: "#6FB6FF",
    400: "#3990FF",
    500: "#096BDE",
    600: "#054DA7",
    700: "#02367D",
    800: "#072859",
    900: "#00153C"
  },
  yellow: {
    50: "#FFF8C5",
    100: "#FAE17D",
    200: "#EAC54F",
    300: "#D4A72C",
    400: "#BF8700",
    500: "#9A6700",
    600: "#7D4E00",
    700: "#633C01",
    800: "#4D2D00",
    900: "#3B2300"
  },
  red: {
    50: "#FFF8F6",
    100: "#FFE9E8",
    200: "#FFC7C5",
    300: "#FF9192",
    400: "#FA5255",
    500: "#D3232F",
    600: "#A10E25",
    700: "#77061B",
    800: "#580013",
    900: "#39000D"
  },
  green: {
    50: "#F3FEF5",
    100: "#D7F5DD",
    200: "#77EC95",
    300: "#4CC76E",
    400: "#2CA24D",
    500: "#1A7D36",
    600: "#0F5D26",
    700: "#034318",
    800: "#002F0F",
    900: "#001D09"
  },
  purple: {
    50: "#FDF7FF",
    100: "#F4EAFF",
    200: "#E1CBFF",
    300: "#C69EFF",
    400: "#A374F9",
    500: "#814DDE",
    600: "#5F35AE",
    700: "#452382",
    800: "#301761",
    900: "#1D0A42"
  }
};
var colors_default = colors;

// node_modules/@mui/joy/styles/CssVarsProvider.js
init_esm();
init_esm2();

// node_modules/@mui/joy/styles/extendTheme.js
init_extends();
init_objectWithoutPropertiesLoose();
init_esm();
init_esm2();

// node_modules/@mui/joy/className/index.js
init_esm();
init_esm();
var generateUtilityClass2 = (componentName, slot) => generateUtilityClass(componentName, slot, "Joy");
var generateUtilityClasses2 = (componentName, slots) => generateUtilityClasses(componentName, slots, "Joy");

// node_modules/@mui/joy/styles/variantUtils.js
init_extends();
init_esm2();
var isVariantPalette = (colorPalette) => colorPalette && typeof colorPalette === "object" && Object.keys(colorPalette).some((value) => {
  var _value$match;
  return (_value$match = value.match) == null ? void 0 : _value$match.call(value, /^(plain(Hover|Active|Disabled)?(Color|Bg)|outlined(Hover|Active|Disabled)?(Color|Border|Bg)|soft(Hover|Active|Disabled)?(Color|Bg)|solid(Hover|Active|Disabled)?(Color|Bg))$/);
});
var assignCss = (target, variantVar, value) => {
  if (variantVar.includes("Color")) {
    target.color = value;
  }
  if (variantVar.includes("Bg")) {
    target.backgroundColor = value;
  }
  if (variantVar.includes("Border")) {
    target.borderColor = value;
  }
};
var createVariantStyle = (name, palette, getCssVar) => {
  const result = {};
  Object.entries(palette || {}).forEach(([variantVar, value]) => {
    if (variantVar.match(new RegExp(`${name}(color|bg|border)`, "i")) && !!value) {
      const cssVar = getCssVar ? getCssVar(variantVar) : value;
      if (variantVar.includes("Hover")) {
        result.cursor = "pointer";
      }
      if (variantVar.includes("Disabled")) {
        result.pointerEvents = "none";
        result.cursor = "default";
      }
      if (variantVar.match(/(Hover|Active|Disabled)/)) {
        assignCss(result, variantVar, cssVar);
      } else {
        if (!result["--variant-borderWidth"]) {
          result["--variant-borderWidth"] = "0px";
        }
        if (variantVar.includes("Border")) {
          result["--variant-borderWidth"] = "1px";
          result.border = "var(--variant-borderWidth) solid";
        }
        assignCss(result, variantVar, cssVar);
      }
    }
  });
  return result;
};
var createPrefixVar = (cssVarPrefix) => {
  return (cssVar) => `--${cssVarPrefix ? `${cssVarPrefix}-` : ""}${cssVar.replace(/^--/, "")}`;
};
var createVariant = (variant, theme) => {
  let result = {};
  if (theme) {
    const {
      getCssVar,
      palette
    } = theme;
    Object.entries(palette).forEach((entry) => {
      const [color, colorPalette] = entry;
      if (isVariantPalette(colorPalette) && typeof colorPalette === "object") {
        result = _extends({}, result, {
          [color]: createVariantStyle(variant, colorPalette, (variantVar) => getCssVar(`palette-${color}-${variantVar}`))
        });
      }
    });
  }
  result.context = createVariantStyle(variant, {
    plainColor: "var(--variant-plainColor)",
    plainHoverColor: `var(--variant-plainHoverColor)`,
    plainHoverBg: "var(--variant-plainHoverBg)",
    plainActiveBg: "var(--variant-plainActiveBg)",
    plainDisabledColor: "var(--variant-plainDisabledColor)",
    outlinedColor: "var(--variant-outlinedColor)",
    outlinedBorder: "var(--variant-outlinedBorder)",
    outlinedHoverColor: `var(--variant-outlinedHoverColor)`,
    outlinedHoverBorder: `var(--variant-outlinedHoverBorder)`,
    outlinedHoverBg: `var(--variant-outlinedHoverBg)`,
    outlinedActiveBg: `var(--variant-outlinedActiveBg)`,
    outlinedDisabledColor: `var(--variant-outlinedDisabledColor)`,
    outlinedDisabledBorder: `var(--variant-outlinedDisabledBorder)`,
    softColor: "var(--variant-softColor)",
    softBg: "var(--variant-softBg)",
    softHoverColor: "var(--variant-softHoverColor)",
    softHoverBg: "var(--variant-softHoverBg)",
    softActiveBg: "var(--variant-softActiveBg)",
    softDisabledColor: "var(--variant-softDisabledColor)",
    softDisabledBg: "var(--variant-softDisabledBg)",
    solidColor: "var(--variant-solidColor)",
    solidBg: "var(--variant-solidBg)",
    solidHoverColor: "var(--variant-solidHoverColor)",
    solidHoverBg: "var(--variant-solidHoverBg)",
    solidActiveBg: "var(--variant-solidActiveBg)",
    solidDisabledColor: "var(--variant-solidDisabledColor)",
    solidDisabledBg: "var(--variant-solidDisabledBg)"
  });
  return result;
};
var createSoftInversion = (theme) => {
  const getCssVar = createGetCssVar(theme.cssVarPrefix);
  const cssVarPrefixVar = createPrefixVar(theme.cssVarPrefix);
  const result = {};
  Object.entries(theme.palette).forEach((entry) => {
    const [color, colorPalette] = entry;
    if (isVariantPalette(colorPalette)) {
      result[color] = {
        "--Badge-ringColor": getCssVar(`palette-${color}-softBg`),
        [theme.getColorSchemeSelector("light")]: {
          [cssVarPrefixVar("--palette-focusVisible")]: getCssVar(`palette-${color}-500`),
          [cssVarPrefixVar("--palette-background-body")]: `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.1)`,
          [cssVarPrefixVar("--palette-background-surface")]: `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.08)`,
          [cssVarPrefixVar("--palette-background-level1")]: `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.2)`,
          [cssVarPrefixVar("--palette-background-level2")]: `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.32)`,
          [cssVarPrefixVar("--palette-background-level3")]: `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.48)`,
          [cssVarPrefixVar("--palette-text-primary")]: getCssVar(`palette-${color}-700`),
          [cssVarPrefixVar("--palette-text-secondary")]: `rgba(${getCssVar(`palette-${color}-darkChannel`)} / 0.8)`,
          [cssVarPrefixVar("--palette-text-tertiary")]: `rgba(${getCssVar(`palette-${color}-darkChannel`)} / 0.68)`,
          [cssVarPrefixVar("--palette-divider")]: `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.32)`,
          "--variant-plainColor": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 1)`,
          "--variant-plainHoverColor": getCssVar(`palette-${color}-600`),
          "--variant-plainHoverBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.12)`,
          "--variant-plainActiveBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.24)`,
          "--variant-plainDisabledColor": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.6)`,
          "--variant-outlinedColor": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 1)`,
          "--variant-outlinedBorder": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.4)`,
          "--variant-outlinedHoverColor": getCssVar(`palette-${color}-600`),
          "--variant-outlinedHoverBorder": getCssVar(`palette-${color}-300`),
          "--variant-outlinedHoverBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.12)`,
          "--variant-outlinedActiveBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.24)`,
          "--variant-outlinedDisabledColor": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.6)`,
          "--variant-outlinedDisabledBorder": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.12)`,
          "--variant-softColor": getCssVar(`palette-${color}-600`),
          "--variant-softBg": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.72)`,
          "--variant-softHoverColor": getCssVar(`palette-${color}-700`),
          "--variant-softHoverBg": getCssVar(`palette-${color}-200`),
          "--variant-softActiveBg": getCssVar(`palette-${color}-300`),
          "--variant-softDisabledColor": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.6)`,
          "--variant-softDisabledBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.08)`,
          "--variant-solidColor": getCssVar("palette-common-white"),
          "--variant-solidBg": getCssVar(`palette-${color}-600`),
          "--variant-solidHoverColor": getCssVar("palette-common-white"),
          "--variant-solidHoverBg": getCssVar(`palette-${color}-700`),
          "--variant-solidActiveBg": getCssVar(`palette-${color}-800`),
          "--variant-solidDisabledColor": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.6)`,
          "--variant-solidDisabledBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.08)`
        },
        [theme.getColorSchemeSelector("dark")]: {
          [cssVarPrefixVar("--palette-focusVisible")]: getCssVar(`palette-${color}-300`),
          [cssVarPrefixVar("--palette-background-body")]: `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.1)`,
          [cssVarPrefixVar("--palette-background-surface")]: `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.08)`,
          [cssVarPrefixVar("--palette-background-level1")]: `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.2)`,
          [cssVarPrefixVar("--palette-background-level2")]: `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.4)`,
          [cssVarPrefixVar("--palette-background-level3")]: `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.6)`,
          [cssVarPrefixVar("--palette-text-primary")]: getCssVar(`palette-${color}-100`),
          [cssVarPrefixVar("--palette-text-secondary")]: `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.72)`,
          [cssVarPrefixVar("--palette-text-tertiary")]: `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.6)`,
          [cssVarPrefixVar("--palette-divider")]: `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.2)`,
          "--variant-plainColor": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 1)`,
          "--variant-plainHoverColor": getCssVar(`palette-${color}-50`),
          "--variant-plainHoverBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.16)`,
          "--variant-plainActiveBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.32)`,
          "--variant-plainDisabledColor": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.72)`,
          "--variant-outlinedColor": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 1)`,
          "--variant-outlinedHoverColor": getCssVar(`palette-${color}-50`),
          "--variant-outlinedBg": "initial",
          "--variant-outlinedBorder": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.4)`,
          "--variant-outlinedHoverBorder": getCssVar(`palette-${color}-600`),
          "--variant-outlinedHoverBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.16)`,
          "--variant-outlinedActiveBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.32)`,
          "--variant-outlinedDisabledColor": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.72)`,
          "--variant-outlinedDisabledBorder": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.2)`,
          "--variant-softColor": getCssVar(`palette-${color}-100`),
          "--variant-softBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.24)`,
          "--variant-softHoverColor": "#fff",
          "--variant-softHoverBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.32)`,
          "--variant-softActiveBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.48)`,
          "--variant-softDisabledColor": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.72)`,
          "--variant-softDisabledBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.12)`,
          "--variant-solidColor": "#fff",
          "--variant-solidBg": getCssVar(`palette-${color}-500`),
          "--variant-solidHoverColor": "#fff",
          "--variant-solidHoverBg": getCssVar(`palette-${color}-500`),
          "--variant-solidActiveBg": getCssVar(`palette-${color}-600`),
          "--variant-solidDisabledColor": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.72)`,
          "--variant-solidDisabledBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.12)`
        }
      };
    }
  });
  return result;
};
var createSolidInversion = (theme) => {
  const getCssVar = createGetCssVar(theme.cssVarPrefix);
  const cssVarPrefixVar = createPrefixVar(theme.cssVarPrefix);
  const result = {};
  Object.entries(theme.palette).forEach((entry) => {
    const [color, colorPalette] = entry;
    if (isVariantPalette(colorPalette)) {
      if (color === "warning") {
        result.warning = {
          "--Badge-ringColor": getCssVar(`palette-${color}-solidBg`),
          [cssVarPrefixVar("--palette-focusVisible")]: getCssVar(`palette-${color}-700`),
          [cssVarPrefixVar("--palette-background-body")]: `rgba(${getCssVar(`palette-${color}-darkChannel`)} / 0.16)`,
          [cssVarPrefixVar("--palette-background-surface")]: `rgba(${getCssVar(`palette-${color}-darkChannel`)} / 0.1)`,
          [cssVarPrefixVar("--palette-background-popup")]: getCssVar(`palette-${color}-100`),
          [cssVarPrefixVar("--palette-background-level1")]: `rgba(${getCssVar(`palette-${color}-darkChannel`)} / 0.2)`,
          [cssVarPrefixVar("--palette-background-level2")]: `rgba(${getCssVar(`palette-${color}-darkChannel`)} / 0.36)`,
          [cssVarPrefixVar("--palette-background-level3")]: `rgba(${getCssVar(`palette-${color}-darkChannel`)} / 0.6)`,
          [cssVarPrefixVar("--palette-text-primary")]: getCssVar(`palette-${color}-900`),
          [cssVarPrefixVar("--palette-text-secondary")]: getCssVar(`palette-${color}-700`),
          [cssVarPrefixVar("--palette-text-tertiary")]: getCssVar(`palette-${color}-500`),
          [cssVarPrefixVar("--palette-divider")]: `rgba(${getCssVar(`palette-${color}-darkChannel`)} / 0.2)`,
          "--variant-plainColor": getCssVar(`palette-${color}-700`),
          "--variant-plainHoverColor": getCssVar(`palette-${color}-800`),
          "--variant-plainHoverBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.12)`,
          "--variant-plainActiveBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.32)`,
          "--variant-plainDisabledColor": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.72)`,
          "--variant-outlinedColor": getCssVar(`palette-${color}-700`),
          "--variant-outlinedBorder": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.5)`,
          "--variant-outlinedHoverColor": getCssVar(`palette-${color}-800`),
          "--variant-outlinedHoverBorder": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.6)`,
          "--variant-outlinedHoverBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.12)`,
          "--variant-outlinedActiveBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.32)`,
          "--variant-outlinedDisabledColor": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.72)`,
          "--variant-outlinedDisabledBorder": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.2)`,
          "--variant-softColor": getCssVar(`palette-${color}-800`),
          "--variant-softHoverColor": getCssVar(`palette-${color}-900`),
          "--variant-softBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.2)`,
          "--variant-softHoverBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.28)`,
          "--variant-softActiveBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.12)`,
          "--variant-softDisabledColor": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.72)`,
          "--variant-softDisabledBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.08)`,
          "--variant-solidColor": "#fff",
          "--variant-solidBg": getCssVar(`palette-${color}-700`),
          "--variant-solidHoverColor": "#fff",
          "--variant-solidHoverBg": getCssVar(`palette-${color}-800`),
          "--variant-solidActiveBg": getCssVar(`palette-${color}-600`),
          "--variant-solidDisabledColor": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.72)`,
          "--variant-solidDisabledBg": `rgba(${getCssVar(`palette-${color}-mainChannel`)} / 0.08)`
        };
      } else {
        result[color] = {
          "--Badge-ringColor": getCssVar(`palette-${color}-solidBg`),
          [cssVarPrefixVar("--palette-focusVisible")]: getCssVar(`palette-${color}-200`),
          [cssVarPrefixVar("--palette-background-body")]: "rgba(0 0 0 / 0.1)",
          [cssVarPrefixVar("--palette-background-surface")]: "rgba(0 0 0 / 0.06)",
          [cssVarPrefixVar("--palette-background-popup")]: getCssVar(`palette-${color}-700`),
          [cssVarPrefixVar("--palette-background-level1")]: `rgba(${getCssVar(`palette-${color}-darkChannel`)} / 0.2)`,
          [cssVarPrefixVar("--palette-background-level2")]: `rgba(${getCssVar(`palette-${color}-darkChannel`)} / 0.36)`,
          [cssVarPrefixVar("--palette-background-level3")]: `rgba(${getCssVar(`palette-${color}-darkChannel`)} / 0.6)`,
          [cssVarPrefixVar("--palette-text-primary")]: getCssVar(`palette-common-white`),
          [cssVarPrefixVar("--palette-text-secondary")]: getCssVar(`palette-${color}-100`),
          [cssVarPrefixVar("--palette-text-tertiary")]: getCssVar(`palette-${color}-200`),
          [cssVarPrefixVar("--palette-divider")]: `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.32)`,
          "--variant-plainColor": getCssVar(`palette-${color}-50`),
          "--variant-plainHoverColor": `#fff`,
          "--variant-plainHoverBg": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.12)`,
          "--variant-plainActiveBg": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.32)`,
          "--variant-plainDisabledColor": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.72)`,
          "--variant-outlinedColor": getCssVar(`palette-${color}-50`),
          "--variant-outlinedBorder": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.5)`,
          "--variant-outlinedHoverColor": `#fff`,
          "--variant-outlinedHoverBorder": getCssVar(`palette-${color}-300`),
          "--variant-outlinedHoverBg": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.12)`,
          "--variant-outlinedActiveBg": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.32)`,
          "--variant-outlinedDisabledColor": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.72)`,
          "--variant-outlinedDisabledBorder": `rgba(255 255 255 / 0.2)`,
          "--variant-softColor": getCssVar(`palette-common-white`),
          "--variant-softHoverColor": getCssVar(`palette-common-white`),
          "--variant-softBg": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.24)`,
          "--variant-softHoverBg": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.36)`,
          "--variant-softActiveBg": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.16)`,
          "--variant-softDisabledColor": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.72)`,
          "--variant-softDisabledBg": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.1)`,
          "--variant-solidColor": getCssVar(`palette-${color}-700`),
          "--variant-solidBg": getCssVar(`palette-common-white`),
          "--variant-solidHoverColor": getCssVar(`palette-${color}-900`),
          "--variant-solidHoverBg": getCssVar(`palette-${color}-100`),
          "--variant-solidActiveBg": getCssVar(`palette-${color}-200`),
          "--variant-solidDisabledColor": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.72)`,
          "--variant-solidDisabledBg": `rgba(${getCssVar(`palette-${color}-lightChannel`)} / 0.1)`
        };
      }
    }
  });
  return result;
};

// node_modules/@mui/joy/styles/extendTheme.js
var _excluded = ["cssVarPrefix", "breakpoints", "spacing", "components", "variants"];
var _excluded2 = ["colorSchemes"];
var createGetCssVar2 = (cssVarPrefix = "joy") => createGetCssVar(cssVarPrefix);
function extendTheme(themeOptions) {
  const _ref = themeOptions || {}, {
    cssVarPrefix = "joy",
    breakpoints,
    spacing,
    components: componentsInput,
    variants: variantsInput
  } = _ref, scalesInput = _objectWithoutPropertiesLoose(_ref, _excluded);
  const getCssVar = createGetCssVar2(cssVarPrefix);
  const createLightModeVariantVariables = (color) => ({
    plainColor: getCssVar(`palette-${color}-600`),
    plainHoverBg: getCssVar(`palette-${color}-100`),
    plainActiveBg: getCssVar(`palette-${color}-200`),
    plainDisabledColor: getCssVar(`palette-${color}-200`),
    outlinedColor: getCssVar(`palette-${color}-500`),
    outlinedBorder: getCssVar(`palette-${color}-200`),
    outlinedHoverBg: getCssVar(`palette-${color}-100`),
    outlinedHoverBorder: getCssVar(`palette-${color}-300`),
    outlinedActiveBg: getCssVar(`palette-${color}-200`),
    outlinedDisabledColor: getCssVar(`palette-${color}-100`),
    outlinedDisabledBorder: getCssVar(`palette-${color}-100`),
    softColor: getCssVar(`palette-${color}-600`),
    softBg: getCssVar(`palette-${color}-100`),
    softHoverBg: getCssVar(`palette-${color}-200`),
    softActiveBg: getCssVar(`palette-${color}-300`),
    softDisabledColor: getCssVar(`palette-${color}-300`),
    softDisabledBg: getCssVar(`palette-${color}-50`),
    solidColor: "#fff",
    solidBg: getCssVar(`palette-${color}-500`),
    solidHoverBg: getCssVar(`palette-${color}-600`),
    solidActiveBg: getCssVar(`palette-${color}-700`),
    solidDisabledColor: `#fff`,
    solidDisabledBg: getCssVar(`palette-${color}-200`)
  });
  const createDarkModeVariantVariables = (color) => ({
    plainColor: getCssVar(`palette-${color}-300`),
    plainHoverBg: getCssVar(`palette-${color}-800`),
    plainActiveBg: getCssVar(`palette-${color}-700`),
    plainDisabledColor: getCssVar(`palette-${color}-800`),
    outlinedColor: getCssVar(`palette-${color}-200`),
    outlinedBorder: getCssVar(`palette-${color}-700`),
    outlinedHoverBg: getCssVar(`palette-${color}-800`),
    outlinedHoverBorder: getCssVar(`palette-${color}-600`),
    outlinedActiveBg: getCssVar(`palette-${color}-900`),
    outlinedDisabledColor: getCssVar(`palette-${color}-800`),
    outlinedDisabledBorder: getCssVar(`palette-${color}-800`),
    softColor: getCssVar(`palette-${color}-200`),
    softBg: getCssVar(`palette-${color}-900`),
    softHoverBg: getCssVar(`palette-${color}-800`),
    softActiveBg: getCssVar(`palette-${color}-700`),
    softDisabledColor: getCssVar(`palette-${color}-800`),
    softDisabledBg: getCssVar(`palette-${color}-900`),
    solidColor: `#fff`,
    solidBg: getCssVar(`palette-${color}-600`),
    solidHoverBg: getCssVar(`palette-${color}-700`),
    solidActiveBg: getCssVar(`palette-${color}-800`),
    solidDisabledColor: getCssVar(`palette-${color}-700`),
    solidDisabledBg: getCssVar(`palette-${color}-900`)
  });
  const lightColorSystem = {
    palette: {
      mode: "light",
      primary: _extends({}, colors_default.blue, createLightModeVariantVariables("primary")),
      neutral: _extends({}, colors_default.grey, {
        plainColor: getCssVar(`palette-neutral-800`),
        plainHoverColor: getCssVar(`palette-neutral-900`),
        plainHoverBg: getCssVar(`palette-neutral-100`),
        plainActiveBg: getCssVar(`palette-neutral-200`),
        plainDisabledColor: getCssVar(`palette-neutral-300`),
        outlinedColor: getCssVar(`palette-neutral-800`),
        outlinedBorder: getCssVar(`palette-neutral-200`),
        outlinedHoverColor: getCssVar(`palette-neutral-900`),
        outlinedHoverBg: getCssVar(`palette-neutral-100`),
        outlinedHoverBorder: getCssVar(`palette-neutral-300`),
        outlinedActiveBg: getCssVar(`palette-neutral-200`),
        outlinedDisabledColor: getCssVar(`palette-neutral-300`),
        outlinedDisabledBorder: getCssVar(`palette-neutral-100`),
        softColor: getCssVar(`palette-neutral-800`),
        softBg: getCssVar(`palette-neutral-100`),
        softHoverColor: getCssVar(`palette-neutral-900`),
        softHoverBg: getCssVar(`palette-neutral-200`),
        softActiveBg: getCssVar(`palette-neutral-300`),
        softDisabledColor: getCssVar(`palette-neutral-300`),
        softDisabledBg: getCssVar(`palette-neutral-50`),
        solidColor: getCssVar(`palette-common-white`),
        solidBg: getCssVar(`palette-neutral-600`),
        solidHoverBg: getCssVar(`palette-neutral-700`),
        solidActiveBg: getCssVar(`palette-neutral-800`),
        solidDisabledColor: getCssVar(`palette-neutral-300`),
        solidDisabledBg: getCssVar(`palette-neutral-50`)
      }),
      danger: _extends({}, colors_default.red, createLightModeVariantVariables("danger")),
      info: _extends({}, colors_default.purple, createLightModeVariantVariables("info")),
      success: _extends({}, colors_default.green, createLightModeVariantVariables("success")),
      warning: _extends({}, colors_default.yellow, createLightModeVariantVariables("warning"), {
        solidColor: getCssVar(`palette-warning-800`),
        solidBg: getCssVar(`palette-warning-200`),
        solidHoverBg: getCssVar(`palette-warning-300`),
        solidActiveBg: getCssVar(`palette-warning-400`),
        solidDisabledColor: getCssVar(`palette-warning-200`),
        solidDisabledBg: getCssVar(`palette-warning-50`),
        softColor: getCssVar(`palette-warning-800`),
        softBg: getCssVar(`palette-warning-50`),
        softHoverBg: getCssVar(`palette-warning-100`),
        softActiveBg: getCssVar(`palette-warning-200`),
        softDisabledColor: getCssVar(`palette-warning-200`),
        softDisabledBg: getCssVar(`palette-warning-50`),
        outlinedColor: getCssVar(`palette-warning-800`),
        outlinedHoverBg: getCssVar(`palette-warning-50`),
        plainColor: getCssVar(`palette-warning-800`),
        plainHoverBg: getCssVar(`palette-warning-50`)
      }),
      common: {
        white: "#FFF",
        black: "#09090D"
      },
      text: {
        primary: getCssVar("palette-neutral-800"),
        secondary: getCssVar("palette-neutral-600"),
        tertiary: getCssVar("palette-neutral-500")
      },
      background: {
        body: getCssVar("palette-common-white"),
        surface: getCssVar("palette-common-white"),
        level1: getCssVar("palette-neutral-50"),
        level2: getCssVar("palette-neutral-100"),
        level3: getCssVar("palette-neutral-200"),
        tooltip: getCssVar("palette-neutral-800"),
        backdrop: "rgba(255 255 255 / 0.5)"
      },
      divider: `rgba(${getCssVar("palette-neutral-mainChannel")} / 0.28)`,
      focusVisible: getCssVar("palette-primary-500")
    },
    shadowRing: "0 0 #000",
    shadowChannel: "187 187 187"
  };
  const darkColorSystem = {
    palette: {
      mode: "dark",
      primary: _extends({}, colors_default.blue, createDarkModeVariantVariables("primary")),
      neutral: _extends({}, colors_default.grey, {
        plainColor: getCssVar(`palette-neutral-200`),
        plainHoverColor: getCssVar(`palette-neutral-50`),
        plainHoverBg: getCssVar(`palette-neutral-800`),
        plainActiveBg: getCssVar(`palette-neutral-700`),
        plainDisabledColor: getCssVar(`palette-neutral-700`),
        outlinedColor: getCssVar(`palette-neutral-200`),
        outlinedBorder: getCssVar(`palette-neutral-800`),
        outlinedHoverColor: getCssVar(`palette-neutral-50`),
        outlinedHoverBg: getCssVar(`palette-neutral-800`),
        outlinedHoverBorder: getCssVar(`palette-neutral-700`),
        outlinedActiveBg: getCssVar(`palette-neutral-800`),
        outlinedDisabledColor: getCssVar(`palette-neutral-800`),
        outlinedDisabledBorder: getCssVar(`palette-neutral-800`),
        softColor: getCssVar(`palette-neutral-200`),
        softBg: getCssVar(`palette-neutral-800`),
        softHoverColor: getCssVar(`palette-neutral-50`),
        softHoverBg: getCssVar(`palette-neutral-700`),
        softActiveBg: getCssVar(`palette-neutral-600`),
        softDisabledColor: getCssVar(`palette-neutral-700`),
        softDisabledBg: getCssVar(`palette-neutral-900`),
        solidColor: getCssVar(`palette-common-white`),
        solidBg: getCssVar(`palette-neutral-600`),
        solidHoverBg: getCssVar(`palette-neutral-700`),
        solidActiveBg: getCssVar(`palette-neutral-800`),
        solidDisabledColor: getCssVar(`palette-neutral-700`),
        solidDisabledBg: getCssVar(`palette-neutral-900`)
      }),
      danger: _extends({}, colors_default.red, createDarkModeVariantVariables("danger")),
      info: _extends({}, colors_default.purple, createDarkModeVariantVariables("info")),
      success: _extends({}, colors_default.green, createDarkModeVariantVariables("success"), {
        solidColor: "#fff",
        solidBg: getCssVar(`palette-success-600`),
        solidHoverBg: getCssVar(`palette-success-700`),
        solidActiveBg: getCssVar(`palette-success-800`)
      }),
      warning: _extends({}, colors_default.yellow, createDarkModeVariantVariables("warning"), {
        solidColor: getCssVar(`palette-common-black`),
        solidBg: getCssVar(`palette-warning-300`),
        solidHoverBg: getCssVar(`palette-warning-400`),
        solidActiveBg: getCssVar(`palette-warning-500`)
      }),
      common: {
        white: "#FFF",
        black: "#09090D"
      },
      text: {
        primary: getCssVar("palette-neutral-100"),
        secondary: getCssVar("palette-neutral-300"),
        tertiary: getCssVar("palette-neutral-400")
      },
      background: {
        body: getCssVar("palette-neutral-900"),
        surface: getCssVar("palette-common-black"),
        level1: getCssVar("palette-neutral-800"),
        level2: getCssVar("palette-neutral-700"),
        level3: getCssVar("palette-neutral-600"),
        tooltip: getCssVar("palette-neutral-600"),
        backdrop: `rgba(${getCssVar("palette-neutral-darkChannel")} / 0.5)`
      },
      divider: `rgba(${getCssVar("palette-neutral-mainChannel")} / 0.24)`,
      focusVisible: getCssVar("palette-primary-500")
    },
    shadowRing: "0 0 #000",
    shadowChannel: "0 0 0"
  };
  const defaultScales = {
    colorSchemes: {
      light: lightColorSystem,
      dark: darkColorSystem
    },
    fontSize: {
      xs3: "0.5rem",
      xs2: "0.625rem",
      xs: "0.75rem",
      sm: "0.875rem",
      md: "1rem",
      lg: "1.125rem",
      xl: "1.25rem",
      xl2: "1.5rem",
      xl3: "1.875rem",
      xl4: "2.25rem",
      xl5: "3rem",
      xl6: "3.75rem",
      xl7: "4.5rem"
    },
    fontFamily: {
      body: `"Public Sans", ${getCssVar("fontFamily-fallback")}`,
      display: `"Public Sans", ${getCssVar("fontFamily-fallback")}`,
      code: "Source Code Pro,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace",
      fallback: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"'
    },
    fontWeight: {
      xs: 200,
      sm: 300,
      md: 500,
      lg: 600,
      xl: 700,
      xl2: 800,
      xl3: 900
    },
    focus: {
      thickness: "2px",
      selector: `&.${generateUtilityClass2("", "focusVisible")}, &:focus-visible`,
      default: {
        outlineOffset: `var(--focus-outline-offset, ${getCssVar("focus-thickness")})`,
        outline: `${getCssVar("focus-thickness")} solid ${getCssVar("palette-focusVisible")}`
      }
    },
    lineHeight: {
      sm: 1.25,
      md: 1.5,
      lg: 1.7
    },
    letterSpacing: {
      sm: "-0.01em",
      md: "0.083em",
      lg: "0.125em"
    },
    radius: {
      xs: "4px",
      sm: "8px",
      md: "12px",
      lg: "16px",
      xl: "20px"
    },
    shadow: {
      xs: `${getCssVar("shadowRing")}, 0 1px 2px 0 rgba(${getCssVar("shadowChannel")} / 0.12)`,
      sm: `${getCssVar("shadowRing")}, 0.3px 0.8px 1.1px rgba(${getCssVar("shadowChannel")} / 0.11), 0.5px 1.3px 1.8px -0.6px rgba(${getCssVar("shadowChannel")} / 0.18), 1.1px 2.7px 3.8px -1.2px rgba(${getCssVar("shadowChannel")} / 0.26)`,
      md: `${getCssVar("shadowRing")}, 0.3px 0.8px 1.1px rgba(${getCssVar("shadowChannel")} / 0.12), 1.1px 2.8px 3.9px -0.4px rgba(${getCssVar("shadowChannel")} / 0.17), 2.4px 6.1px 8.6px -0.8px rgba(${getCssVar("shadowChannel")} / 0.23), 5.3px 13.3px 18.8px -1.2px rgba(${getCssVar("shadowChannel")} / 0.29)`,
      lg: `${getCssVar("shadowRing")}, 0.3px 0.8px 1.1px rgba(${getCssVar("shadowChannel")} / 0.11), 1.8px 4.5px 6.4px -0.2px rgba(${getCssVar("shadowChannel")} / 0.13), 3.2px 7.9px 11.2px -0.4px rgba(${getCssVar("shadowChannel")} / 0.16), 4.8px 12px 17px -0.5px rgba(${getCssVar("shadowChannel")} / 0.19), 7px 17.5px 24.7px -0.7px rgba(${getCssVar("shadowChannel")} / 0.21)`,
      xl: `${getCssVar("shadowRing")}, 0.3px 0.8px 1.1px rgba(${getCssVar("shadowChannel")} / 0.11), 1.8px 4.5px 6.4px -0.2px rgba(${getCssVar("shadowChannel")} / 0.13), 3.2px 7.9px 11.2px -0.4px rgba(${getCssVar("shadowChannel")} / 0.16), 4.8px 12px 17px -0.5px rgba(${getCssVar("shadowChannel")} / 0.19), 7px 17.5px 24.7px -0.7px rgba(${getCssVar("shadowChannel")} / 0.21), 10.2px 25.5px 36px -0.9px rgba(${getCssVar("shadowChannel")} / 0.24), 14.8px 36.8px 52.1px -1.1px rgba(${getCssVar("shadowChannel")} / 0.27), 21px 52.3px 74px -1.2px rgba(${getCssVar("shadowChannel")} / 0.29)`
    },
    typography: {
      display1: {
        fontFamily: getCssVar("fontFamily-display"),
        fontWeight: getCssVar("fontWeight-xl"),
        fontSize: getCssVar("fontSize-xl7"),
        lineHeight: getCssVar("lineHeight-sm"),
        letterSpacing: getCssVar("letterSpacing-sm"),
        color: getCssVar("palette-text-primary")
      },
      display2: {
        fontFamily: getCssVar("fontFamily-display"),
        fontWeight: getCssVar("fontWeight-xl"),
        fontSize: getCssVar("fontSize-xl6"),
        lineHeight: getCssVar("lineHeight-sm"),
        letterSpacing: getCssVar("letterSpacing-sm"),
        color: getCssVar("palette-text-primary")
      },
      h1: {
        fontFamily: getCssVar("fontFamily-display"),
        fontWeight: getCssVar("fontWeight-lg"),
        fontSize: getCssVar("fontSize-xl5"),
        lineHeight: getCssVar("lineHeight-sm"),
        letterSpacing: getCssVar("letterSpacing-sm"),
        color: getCssVar("palette-text-primary")
      },
      h2: {
        fontFamily: getCssVar("fontFamily-display"),
        fontWeight: getCssVar("fontWeight-lg"),
        fontSize: getCssVar("fontSize-xl4"),
        lineHeight: getCssVar("lineHeight-sm"),
        letterSpacing: getCssVar("letterSpacing-sm"),
        color: getCssVar("palette-text-primary")
      },
      h3: {
        fontFamily: getCssVar("fontFamily-body"),
        fontWeight: getCssVar("fontWeight-md"),
        fontSize: getCssVar("fontSize-xl3"),
        lineHeight: getCssVar("lineHeight-sm"),
        color: getCssVar("palette-text-primary")
      },
      h4: {
        fontFamily: getCssVar("fontFamily-body"),
        fontWeight: getCssVar("fontWeight-md"),
        fontSize: getCssVar("fontSize-xl2"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-primary")
      },
      h5: {
        fontFamily: getCssVar("fontFamily-body"),
        fontWeight: getCssVar("fontWeight-md"),
        fontSize: getCssVar("fontSize-xl"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-primary")
      },
      h6: {
        fontFamily: getCssVar("fontFamily-body"),
        fontWeight: getCssVar("fontWeight-md"),
        fontSize: getCssVar("fontSize-lg"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-primary")
      },
      body1: {
        fontFamily: getCssVar("fontFamily-body"),
        fontSize: getCssVar("fontSize-md"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-primary")
      },
      body2: {
        fontFamily: getCssVar("fontFamily-body"),
        fontSize: getCssVar("fontSize-sm"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-secondary")
      },
      body3: {
        fontFamily: getCssVar("fontFamily-body"),
        fontSize: getCssVar("fontSize-xs"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-tertiary")
      },
      body4: {
        fontFamily: getCssVar("fontFamily-body"),
        fontSize: getCssVar("fontSize-xs2"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-tertiary")
      },
      body5: {
        fontFamily: getCssVar("fontFamily-body"),
        fontSize: getCssVar("fontSize-xs3"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-tertiary")
      }
    }
  };
  const _ref2 = scalesInput ? deepmerge(defaultScales, scalesInput) : defaultScales, {
    colorSchemes
  } = _ref2, mergedScales = _objectWithoutPropertiesLoose(_ref2, _excluded2);
  const {
    palette: firstColorSchemePalette
  } = Object.entries(colorSchemes)[0][1];
  const variantInput = {
    palette: firstColorSchemePalette,
    cssVarPrefix,
    getCssVar
  };
  const theme = _extends({
    colorSchemes
  }, mergedScales, {
    breakpoints: createBreakpoints(breakpoints != null ? breakpoints : {}),
    components: deepmerge({
      MuiSvgIcon: {
        defaultProps: {
          fontSize: "xl"
        },
        styleOverrides: {
          root: ({
            ownerState,
            theme: themeProp
          }) => {
            var _theme$variants$plain, _theme$variants$plain2;
            const instanceFontSize = ownerState.instanceFontSize;
            return _extends({
              color: "var(--Icon-color)",
              margin: "var(--Icon-margin)"
            }, ownerState.fontSize && ownerState.fontSize !== "inherit" && {
              fontSize: `var(--Icon-fontSize, ${themeProp.fontSize[ownerState.fontSize]})`
            }, ownerState.color && ownerState.color !== "inherit" && ownerState.color !== "context" && themeProp.vars.palette[ownerState.color] && {
              color: themeProp.vars.palette[ownerState.color].plainColor
            }, ownerState.color === "context" && {
              color: (_theme$variants$plain = theme.variants.plain) == null ? void 0 : (_theme$variants$plain2 = _theme$variants$plain.context) == null ? void 0 : _theme$variants$plain2.color
            }, instanceFontSize && instanceFontSize !== "inherit" && {
              "--Icon-fontSize": themeProp.vars.fontSize[instanceFontSize]
            });
          }
        }
      }
    }, componentsInput),
    variants: deepmerge({
      plain: createVariant("plain", variantInput),
      plainHover: createVariant("plainHover", variantInput),
      plainActive: createVariant("plainActive", variantInput),
      plainDisabled: createVariant("plainDisabled", variantInput),
      outlined: createVariant("outlined", variantInput),
      outlinedHover: createVariant("outlinedHover", variantInput),
      outlinedActive: createVariant("outlinedActive", variantInput),
      outlinedDisabled: createVariant("outlinedDisabled", variantInput),
      soft: createVariant("soft", variantInput),
      softHover: createVariant("softHover", variantInput),
      softActive: createVariant("softActive", variantInput),
      softDisabled: createVariant("softDisabled", variantInput),
      solid: createVariant("solid", variantInput),
      solidHover: createVariant("solidHover", variantInput),
      solidActive: createVariant("solidActive", variantInput),
      solidDisabled: createVariant("solidDisabled", variantInput)
    }, variantsInput),
    cssVarPrefix,
    getCssVar,
    spacing: createSpacing(spacing),
    colorInversionConfig: {
      soft: ["plain", "outlined", "soft", "solid"],
      solid: ["plain", "outlined", "soft", "solid"]
    }
  });
  function attachColorChannels(palette) {
    Object.keys(palette).forEach((key) => {
      const channelMapping = {
        main: "500",
        light: "200",
        dark: "800"
      };
      if (!palette[key].mainChannel && palette[key][channelMapping.main]) {
        palette[key].mainChannel = colorChannel(palette[key][channelMapping.main]);
      }
      if (!palette[key].lightChannel && palette[key][channelMapping.light]) {
        palette[key].lightChannel = colorChannel(palette[key][channelMapping.light]);
      }
      if (!palette[key].darkChannel && palette[key][channelMapping.dark]) {
        palette[key].darkChannel = colorChannel(palette[key][channelMapping.dark]);
      }
    });
  }
  Object.entries(theme.colorSchemes).forEach(([, colorSystem]) => {
    attachColorChannels(colorSystem.palette);
  });
  return theme;
}

// node_modules/@mui/joy/styles/CssVarsProvider.js
var shouldSkipGeneratingVar = (keys) => !!keys[0].match(/^(typography|variants|breakpoints|colorInversion|colorInversionConfig)$/) || keys[0] === "focus" && keys[1] !== "thickness";
var {
  CssVarsProvider,
  useColorScheme,
  getInitColorSchemeScript
} = createCssVarsProvider({
  theme: extendTheme(),
  attribute: "data-joy-color-scheme",
  modeStorageKey: "joy-mode",
  colorSchemeStorageKey: "joy-color-scheme",
  defaultColorScheme: {
    light: "light",
    dark: "dark"
  },
  resolveTheme: (mergedTheme) => {
    mergedTheme.colorInversion = deepmerge({
      soft: createSoftInversion(mergedTheme),
      solid: createSolidInversion(mergedTheme)
    }, mergedTheme.colorInversion, {
      clone: false
    });
    return mergedTheme;
  },
  shouldSkipGeneratingVar
});

// node_modules/@mui/joy/styles/styled.js
init_esm2();

// node_modules/@mui/joy/styles/defaultTheme.js
init_extends();
init_objectWithoutPropertiesLoose();
init_esm();
var _excluded3 = ["colorSchemes", "focus", "fontFamily", "fontSize", "fontWeight", "letterSpacing", "lineHeight", "radius", "shadow", "palette"];
var _excluded22 = ["mode", "colorScheme"];
var getThemeWithVars = (themeInput) => {
  const _extendTheme = extendTheme(themeInput), {
    colorSchemes,
    focus,
    fontFamily: fontFamily2,
    fontSize: fontSize2,
    fontWeight: fontWeight2,
    letterSpacing: letterSpacing2,
    lineHeight: lineHeight2,
    radius,
    shadow,
    palette: paletteInput
  } = _extendTheme, restTheme = _objectWithoutPropertiesLoose(_extendTheme, _excluded3);
  const colorSchemePalette = deepmerge(colorSchemes[(paletteInput == null ? void 0 : paletteInput.colorScheme) || "light"].palette, paletteInput);
  const _ref = colorSchemePalette, {
    mode = "light",
    colorScheme = "light"
  } = _ref, palette = _objectWithoutPropertiesLoose(_ref, _excluded22);
  return _extends({
    focus,
    fontFamily: fontFamily2,
    fontSize: fontSize2,
    fontWeight: fontWeight2,
    letterSpacing: letterSpacing2,
    lineHeight: lineHeight2,
    radius,
    shadow
  }, restTheme, {
    colorSchemes: _extends({}, colorSchemes, {
      [colorScheme]: palette
    }),
    palette: _extends({}, palette, {
      mode,
      colorScheme
    }),
    vars: {
      focus,
      fontFamily: fontFamily2,
      fontSize: fontSize2,
      fontWeight: fontWeight2,
      letterSpacing: letterSpacing2,
      lineHeight: lineHeight2,
      radius,
      shadow,
      palette
    },
    getColorSchemeSelector: () => "&"
  });
};
var defaultTheme = getThemeWithVars();
defaultTheme.variants = deepmerge({
  plain: createVariant("plain", defaultTheme),
  plainHover: createVariant("plainHover", defaultTheme),
  plainActive: createVariant("plainActive", defaultTheme),
  plainDisabled: createVariant("plainDisabled", defaultTheme),
  outlined: createVariant("outlined", defaultTheme),
  outlinedHover: createVariant("outlinedHover", defaultTheme),
  outlinedActive: createVariant("outlinedActive", defaultTheme),
  outlinedDisabled: createVariant("outlinedDisabled", defaultTheme),
  soft: createVariant("soft", defaultTheme),
  softHover: createVariant("softHover", defaultTheme),
  softActive: createVariant("softActive", defaultTheme),
  softDisabled: createVariant("softDisabled", defaultTheme),
  solid: createVariant("solid", defaultTheme),
  solidHover: createVariant("solidHover", defaultTheme),
  solidActive: createVariant("solidActive", defaultTheme),
  solidDisabled: createVariant("solidDisabled", defaultTheme)
}, defaultTheme.variants);
defaultTheme.colorInversion = deepmerge({
  soft: createSoftInversion(defaultTheme),
  solid: createSolidInversion(defaultTheme)
}, defaultTheme.colorInversion);
var defaultTheme_default = defaultTheme;

// node_modules/@mui/joy/styles/styleFunctionSx.js
init_esm2();
var borderRadius = style_default({
  prop: "borderRadius",
  themeKey: "radius"
});
var borders = compose_default(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius);
var boxShadow = style_default({
  prop: "boxShadow",
  themeKey: "shadow"
});
var fontFamily = style_default({
  prop: "fontFamily",
  themeKey: "fontFamily"
});
var fontSize = style_default({
  prop: "fontSize",
  themeKey: "fontSize"
});
var fontWeight = style_default({
  prop: "fontWeight",
  themeKey: "fontWeight"
});
var letterSpacing = style_default({
  prop: "letterSpacing",
  themeKey: "letterSpacing"
});
var lineHeight = style_default({
  prop: "lineHeight",
  themeKey: "lineHeight"
});
var typography = compose_default(typographyVariant, fontFamily, fontSize, fontWeight, letterSpacing, lineHeight);
var styleFunctionMapping = {
  borders,
  display: display_default,
  flexbox: flexbox_default,
  grid: cssGrid_default,
  positions: positions_default,
  palette: palette_default,
  boxShadow,
  sizing: sizing_default,
  spacing: spacing_default,
  typography
};
var styleFunctionSx = unstable_createStyleFunctionSx(styleFunctionMapping);
styleFunctionSx.filterProps = ["sx"];
var sx = (styles) => {
  return ({
    theme
  }) => styleFunctionSx({
    sx: styles,
    theme
  });
};
var styleFunctionSx_default = styleFunctionSx;

// node_modules/@mui/joy/styles/styled.js
var styled = createStyled({
  defaultTheme: defaultTheme_default,
  styleFunctionSx: styleFunctionSx_default
});
var styled_default = styled;

// node_modules/@mui/joy/styles/ThemeProvider.js
var React = __toESM(require_react());
init_esm2();
var import_jsx_runtime = __toESM(require_jsx_runtime());
var useTheme = () => {
  return useTheme_default(defaultTheme_default);
};
function ThemeProvider({
  children,
  theme: themeInput
}) {
  return (0, import_jsx_runtime.jsx)(ThemeProvider_default, {
    theme: themeInput ? getThemeWithVars(themeInput) : defaultTheme_default,
    children
  });
}

// node_modules/@mui/joy/styles/useThemeProps.js
init_extends();
init_esm2();
function useThemeProps2({
  props,
  name
}) {
  return useThemeProps({
    props,
    name,
    defaultTheme: _extends({}, defaultTheme_default, {
      components: {}
    })
  });
}

// node_modules/@mui/joy/styles/ColorInversion.js
var React2 = __toESM(require_react());
init_esm2();
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var VariantOverride = React2.createContext(void 0);
var useColorInversion = (childVariant) => {
  const overriableVariants = React2.useContext(VariantOverride);
  return {
    getColor: (instanceColorProp, defaultColorProp) => {
      if (overriableVariants && childVariant) {
        if (overriableVariants.includes(childVariant)) {
          return instanceColorProp || "context";
        }
      }
      return instanceColorProp || defaultColorProp;
    }
  };
};
var ColorInversionProvider = ({
  children,
  variant
}) => {
  const theme = useTheme_default(defaultTheme_default);
  return (0, import_jsx_runtime2.jsx)(VariantOverride.Provider, {
    value: variant ? theme.colorInversionConfig[variant] : void 0,
    children
  });
};

// node_modules/@mui/joy/styles/StyledEngineProvider.js
init_esm2();

// node_modules/@mui/joy/GlobalStyles/index.js
init_esm2();

// node_modules/@mui/joy/AspectRatio/AspectRatio.js
init_extends();
init_objectWithoutPropertiesLoose();
var React3 = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());
init_base();
init_utils();
init_esm();

// node_modules/@mui/joy/AspectRatio/aspectRatioClasses.js
function getAspectRatioUtilityClass(slot) {
  return generateUtilityClass2("JoyAspectRatio", slot);
}
var aspectRatioClasses = generateUtilityClasses2("JoyAspectRatio", ["root", "content", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var aspectRatioClasses_default = aspectRatioClasses;

// node_modules/@mui/joy/AspectRatio/AspectRatio.js
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var _excluded4 = ["component", "children", "componentsProps", "ratio", "minHeight", "maxHeight", "objectFit", "color", "variant"];
var useUtilityClasses = (ownerState) => {
  const {
    variant,
    color
  } = ownerState;
  const slots = {
    root: ["root"],
    content: ["content", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]
  };
  return composeClasses(slots, getAspectRatioUtilityClass, {});
};
var AspectRatioRoot = styled_default("div", {
  name: "JoyAspectRatio",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  ownerState
}) => {
  const minHeight = typeof ownerState.minHeight === "number" ? `${ownerState.minHeight}px` : ownerState.minHeight;
  const maxHeight = typeof ownerState.maxHeight === "number" ? `${ownerState.maxHeight}px` : ownerState.maxHeight;
  return {
    "--AspectRatio-paddingBottom": minHeight || maxHeight ? `clamp(${minHeight || "0px"}, calc(100% / (${ownerState.ratio})), ${maxHeight || "9999px"})` : `calc(100% / (${ownerState.ratio}))`,
    flexDirection: "column",
    margin: "var(--AspectRatio-margin)"
  };
});
var AspectRatioContent = styled_default("div", {
  name: "JoyAspectRatio",
  slot: "Content",
  overridesResolver: (props, styles) => styles.content
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  return [{
    flex: 1,
    position: "relative",
    borderRadius: "var(--AspectRatio-radius)",
    height: 0,
    paddingBottom: "var(--AspectRatio-paddingBottom)",
    overflow: "hidden",
    "& [data-first-child]": {
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      boxSizing: "border-box",
      position: "absolute",
      width: "100%",
      height: "100%",
      objectFit: ownerState.objectFit,
      margin: 0,
      padding: 0,
      "& > img": {
        width: "100%",
        height: "100%",
        objectFit: ownerState.objectFit
      }
    }
  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]];
});
var AspectRatio = React3.forwardRef(function AspectRatio2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyAspectRatio"
  });
  const {
    component = "div",
    children,
    componentsProps = {},
    ratio = "16 / 9",
    minHeight,
    maxHeight,
    objectFit = "cover",
    color = "neutral",
    variant = "soft"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded4);
  const ownerState = _extends({}, props, {
    component,
    minHeight,
    maxHeight,
    objectFit,
    ratio,
    color,
    variant
  });
  const classes = useUtilityClasses(ownerState);
  const rootProps = useSlotProps({
    elementType: AspectRatioRoot,
    ownerState,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    className: classes.root
  });
  const contentProps = useSlotProps({
    elementType: AspectRatioContent,
    ownerState,
    externalSlotProps: componentsProps.content,
    className: classes.content
  });
  return (0, import_jsx_runtime3.jsx)(AspectRatioRoot, _extends({}, rootProps, {
    children: (0, import_jsx_runtime3.jsx)(AspectRatioContent, _extends({}, contentProps, {
      children: React3.Children.map(children, (child, index) => index === 0 && React3.isValidElement(child) ? React3.cloneElement(child, {
        "data-first-child": ""
      }) : child)
    }))
  }));
});
true ? AspectRatio.propTypes = {
  children: import_prop_types.default.node,
  color: import_prop_types.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]),
  component: import_prop_types.default.elementType,
  componentsProps: import_prop_types.default.shape({
    content: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]),
    root: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object])
  }),
  maxHeight: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string]),
  minHeight: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string]),
  objectFit: import_prop_types.default.oneOf(["-moz-initial", "contain", "cover", "fill", "inherit", "initial", "none", "revert-layer", "revert", "scale-down", "unset"]),
  ratio: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.string]),
  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),
  variant: import_prop_types.default.oneOfType([import_prop_types.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types.default.string])
} : void 0;
var AspectRatio_default = AspectRatio;

// node_modules/@mui/joy/Alert/Alert.js
init_objectWithoutPropertiesLoose();
init_extends();
init_base();
init_esm();
init_clsx_m();
var import_prop_types2 = __toESM(require_prop_types());
var React4 = __toESM(require_react());

// node_modules/@mui/joy/Alert/alertClasses.js
function getAlertUtilityClass(slot) {
  return generateUtilityClass2("JoyAlert", slot);
}
var alertClasses = generateUtilityClasses2("JoyAlert", ["root", "action", "icon", "message", "colorPrimary", "colorDanger", "colorInfo", "colorNeutral", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var alertClasses_default = alertClasses;

// node_modules/@mui/joy/Alert/Alert.js
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var import_jsx_runtime5 = __toESM(require_jsx_runtime());
var _excluded5 = ["children", "className", "component", "color", "role", "variant", "size", "startDecorator", "endDecorator"];
var useUtilityClasses2 = (ownerState) => {
  const {
    variant,
    color,
    size
  } = ownerState;
  const slots = {
    root: ["root", size && `size${capitalize(size)}`, color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  return composeClasses(slots, getAlertUtilityClass, {});
};
var AlertRoot = styled_default("div", {
  name: "JoyAlert",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  return _extends({
    "--Alert-radius": theme.vars.radius.sm,
    "--Alert-decorator-childRadius": "max((var(--Alert-radius) - var(--variant-borderWidth)) - var(--Alert-padding), min(var(--Alert-padding) / 2, (var(--Alert-radius) - var(--variant-borderWidth)) / 2))",
    "--Button-minHeight": "var(--Alert-decorator-childHeight)",
    "--IconButton-size": "var(--Alert-decorator-childHeight)",
    "--Button-radius": "var(--Alert-decorator-childRadius)",
    "--IconButton-radius": "var(--Alert-decorator-childRadius)"
  }, ownerState.size === "sm" && {
    "--Alert-padding": "0.5rem",
    "--Alert-gap": "0.375rem",
    "--Alert-decorator-childHeight": "1.5rem",
    "--Icon-fontSize": "1.125rem",
    fontSize: theme.vars.fontSize.sm
  }, ownerState.size === "md" && {
    "--Alert-padding": "0.75rem",
    "--Alert-gap": "0.5rem",
    "--Alert-decorator-childHeight": "2rem",
    "--Icon-fontSize": "1.25rem",
    fontSize: theme.vars.fontSize.sm,
    fontWeight: theme.vars.fontWeight.md
  }, ownerState.size === "lg" && {
    "--Alert-padding": "1rem",
    "--Alert-gap": "0.75rem",
    "--Alert-decorator-childHeight": "2.375rem",
    "--Icon-fontSize": "1.5rem",
    fontSize: theme.vars.fontSize.md,
    fontWeight: theme.vars.fontWeight.md
  }, {
    fontFamily: theme.vars.fontFamily.body,
    lineHeight: theme.vars.lineHeight.md,
    backgroundColor: "transparent",
    display: "flex",
    alignItems: "center",
    padding: `var(--Alert-padding)`,
    borderRadius: "var(--Alert-radius)"
  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]);
});
var AlertStartDecorator = styled_default("span", {
  name: "JoyAlert",
  slot: "StartDecorator",
  overridesResolver: (props, styles) => styles.startDecorator
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette;
  return {
    display: "inherit",
    flex: "none",
    marginInlineEnd: "var(--Alert-gap)",
    color: (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette[`${ownerState.variant}Color`]
  };
});
var AlertEndDecorator = styled_default("span", {
  name: "JoyAlert",
  slot: "EndDecorator",
  overridesResolver: (props, styles) => styles.endDecorator
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette2;
  return {
    display: "inherit",
    flex: "none",
    marginInlineStart: "var(--Alert-gap)",
    marginLeft: "auto",
    color: (_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2[`${ownerState.variant}Color`]
  };
});
var Alert = React4.forwardRef(function Alert2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyAlert"
  });
  const {
    children,
    className,
    component = "div",
    color = "primary",
    role = "alert",
    variant = "soft",
    size = "md",
    startDecorator,
    endDecorator
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded5);
  const ownerState = _extends({}, props, {
    color,
    variant,
    size
  });
  const classes = useUtilityClasses2(ownerState);
  return (0, import_jsx_runtime5.jsxs)(AlertRoot, _extends({
    as: component,
    role,
    ownerState,
    className: clsx_m_default(classes.root, className),
    ref
  }, other, {
    children: [startDecorator && (0, import_jsx_runtime4.jsx)(AlertStartDecorator, {
      className: classes.startDecorator,
      ownerState,
      children: startDecorator
    }), children, endDecorator && (0, import_jsx_runtime4.jsx)(AlertEndDecorator, {
      className: classes.endDecorator,
      ownerState,
      children: endDecorator
    })]
  }));
});
true ? Alert.propTypes = {
  children: import_prop_types2.default.node,
  className: import_prop_types2.default.string,
  color: import_prop_types2.default.oneOfType([import_prop_types2.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types2.default.string]),
  component: import_prop_types2.default.elementType,
  endDecorator: import_prop_types2.default.node,
  role: import_prop_types2.default.string,
  size: import_prop_types2.default.oneOfType([import_prop_types2.default.oneOf(["sm", "md", "lg"]), import_prop_types2.default.string]),
  startDecorator: import_prop_types2.default.node,
  sx: import_prop_types2.default.oneOfType([import_prop_types2.default.arrayOf(import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.object, import_prop_types2.default.bool])), import_prop_types2.default.func, import_prop_types2.default.object]),
  variant: import_prop_types2.default.oneOfType([import_prop_types2.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types2.default.string])
} : void 0;
var Alert_default = Alert;

// node_modules/@mui/joy/Avatar/Avatar.js
init_objectWithoutPropertiesLoose();
init_extends();
var React9 = __toESM(require_react());
var import_prop_types5 = __toESM(require_prop_types());
init_base();
init_utils();
init_esm();

// node_modules/@mui/joy/internal/svg-icons/Person.js
var React7 = __toESM(require_react());

// node_modules/@mui/joy/utils/createSvgIcon.js
init_extends();
var React6 = __toESM(require_react());

// node_modules/@mui/joy/SvgIcon/SvgIcon.js
init_objectWithoutPropertiesLoose();
init_extends();
init_base();
init_esm();
init_clsx_m();
var import_prop_types3 = __toESM(require_prop_types());
var React5 = __toESM(require_react());

// node_modules/@mui/joy/SvgIcon/svgIconClasses.js
function getSvgIconUtilityClass(slot) {
  return generateUtilityClass2("JoySvgIcon", slot);
}
var svgIconClasses = generateUtilityClasses2("JoySvgIcon", ["root", "colorInherit", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "fontSizeInherit", "fontSizeXs", "fontSizeSm", "fontSizeMd", "fontSizeLg", "fontSizeXl", "fontSizeXl2", "fontSizeXl3", "fontSizeXl4", "fontSizeXl5", "fontSizeXl6"]);
var svgIconClasses_default = svgIconClasses;

// node_modules/@mui/joy/SvgIcon/SvgIcon.js
var import_jsx_runtime6 = __toESM(require_jsx_runtime());
var import_jsx_runtime7 = __toESM(require_jsx_runtime());
var _excluded6 = ["children", "className", "color", "component", "fontSize", "htmlColor", "inheritViewBox", "titleAccess", "viewBox"];
var useUtilityClasses3 = (ownerState) => {
  const {
    color,
    fontSize: fontSize2,
    classes
  } = ownerState;
  const slots = {
    root: ["root", color && `color${capitalize(color)}`, fontSize2 && `fontSize${capitalize(fontSize2)}`]
  };
  return composeClasses(slots, getSvgIconUtilityClass, classes);
};
var SvgIconRoot = styled_default("svg", {
  name: "JoySvgIcon",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants$plain, _theme$variants$plain2;
  return _extends({}, ownerState.instanceFontSize && ownerState.instanceFontSize !== "inherit" && {
    "--Icon-fontSize": theme.vars.fontSize[ownerState.instanceFontSize]
  }, {
    userSelect: "none",
    margin: "var(--Icon-margin)",
    width: "1em",
    height: "1em",
    display: "inline-block",
    fill: "currentColor",
    flexShrink: 0,
    transition: "fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"
  }, ownerState.fontSize && ownerState.fontSize !== "inherit" && {
    fontSize: `var(--Icon-fontSize, ${theme.fontSize[ownerState.fontSize]})`
  }, {
    color: "var(--Icon-color)"
  }, ownerState.color !== "inherit" && ownerState.color !== "context" && theme.vars.palette[ownerState.color] && {
    color: theme.vars.palette[ownerState.color].plainColor
  }, ownerState.color === "context" && {
    color: (_theme$variants$plain = theme.variants.plain) == null ? void 0 : (_theme$variants$plain2 = _theme$variants$plain[ownerState.color]) == null ? void 0 : _theme$variants$plain2.color
  });
});
var SvgIcon = React5.forwardRef(function SvgIcon2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoySvgIcon"
  });
  const {
    children,
    className,
    color = "inherit",
    component = "svg",
    fontSize: fontSize2 = "xl",
    htmlColor,
    inheritViewBox = false,
    titleAccess,
    viewBox = "0 0 24 24"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded6);
  const ownerState = _extends({}, props, {
    color,
    component,
    fontSize: fontSize2,
    instanceFontSize: inProps.fontSize,
    inheritViewBox,
    viewBox
  });
  const classes = useUtilityClasses3(ownerState);
  return (0, import_jsx_runtime7.jsxs)(SvgIconRoot, _extends({
    as: component,
    className: clsx_m_default(classes.root, className),
    focusable: "false",
    color: htmlColor,
    "aria-hidden": titleAccess ? void 0 : true,
    role: titleAccess ? "img" : void 0,
    ref
  }, other, !inheritViewBox && {
    viewBox
  }, {
    ownerState,
    children: [children, titleAccess ? (0, import_jsx_runtime6.jsx)("title", {
      children: titleAccess
    }) : null]
  }));
});
true ? SvgIcon.propTypes = {
  children: import_prop_types3.default.node,
  classes: import_prop_types3.default.object,
  className: import_prop_types3.default.string,
  color: import_prop_types3.default.oneOfType([import_prop_types3.default.oneOf(["danger", "info", "inherit", "neutral", "primary", "success", "warning"]), import_prop_types3.default.string]),
  component: import_prop_types3.default.elementType,
  fontSize: import_prop_types3.default.oneOf(["inherit", "lg", "md", "sm", "xl", "xl2", "xl3", "xl4", "xl5", "xl6", "xl7", "xs", "xs2", "xs3"]),
  htmlColor: import_prop_types3.default.string,
  inheritViewBox: import_prop_types3.default.bool,
  shapeRendering: import_prop_types3.default.string,
  sx: import_prop_types3.default.oneOfType([import_prop_types3.default.arrayOf(import_prop_types3.default.oneOfType([import_prop_types3.default.func, import_prop_types3.default.object, import_prop_types3.default.bool])), import_prop_types3.default.func, import_prop_types3.default.object]),
  titleAccess: import_prop_types3.default.string,
  viewBox: import_prop_types3.default.string
} : void 0;
var SvgIcon_default = SvgIcon;

// node_modules/@mui/joy/utils/createSvgIcon.js
var import_jsx_runtime8 = __toESM(require_jsx_runtime());
function createSvgIcon(path, displayName) {
  function Component(props, ref) {
    return (0, import_jsx_runtime8.jsx)(SvgIcon_default, _extends({
      "data-testid": `${displayName}Icon`,
      ref
    }, props, {
      children: path
    }));
  }
  if (true) {
    Component.displayName = `${displayName}Icon`;
  }
  Component.muiName = SvgIcon_default.muiName;
  return React6.memo(React6.forwardRef(Component));
}

// node_modules/@mui/joy/internal/svg-icons/Person.js
var import_jsx_runtime9 = __toESM(require_jsx_runtime());
var Person_default = createSvgIcon((0, import_jsx_runtime9.jsx)("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), "Person");

// node_modules/@mui/joy/Avatar/avatarClasses.js
function getAvatarUtilityClass(slot) {
  return generateUtilityClass2("JoyAvatar", slot);
}
var avatarClasses = generateUtilityClasses2("JoyAvatar", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "fallback", "sizeSm", "sizeMd", "sizeLg", "img", "variantOutlined", "variantSoft", "variantSolid"]);
var avatarClasses_default = avatarClasses;

// node_modules/@mui/joy/AvatarGroup/AvatarGroup.js
init_objectWithoutPropertiesLoose();
init_extends();
var React8 = __toESM(require_react());
init_clsx_m();
var import_prop_types4 = __toESM(require_prop_types());
init_base();

// node_modules/@mui/joy/AvatarGroup/avatarGroupClasses.js
function getAvatarGroupUtilityClass(slot) {
  return generateUtilityClass2("JoyAvatarGroup", slot);
}
var avatarGroupClasses = generateUtilityClasses2("JoyAvatarGroup", ["root"]);
var avatarGroupClasses_default = avatarGroupClasses;

// node_modules/@mui/joy/AvatarGroup/AvatarGroup.js
var import_jsx_runtime10 = __toESM(require_jsx_runtime());
var _excluded7 = ["className", "color", "component", "size", "variant", "children"];
var AvatarGroupContext = React8.createContext(void 0);
var useUtilityClasses4 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getAvatarGroupUtilityClass, {});
};
var AvatarGroupGroupRoot = styled_default("div", {
  name: "JoyAvatarGroup",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  ownerState,
  theme
}) => _extends({}, ownerState.size === "sm" && {
  "--AvatarGroup-gap": "-0.375rem",
  "--Avatar-ringSize": "2px"
}, ownerState.size === "md" && {
  "--AvatarGroup-gap": "-0.5rem",
  "--Avatar-ringSize": "2px"
}, ownerState.size === "lg" && {
  "--AvatarGroup-gap": "-0.625rem",
  "--Avatar-ringSize": "4px"
}, {
  "--Avatar-ring": `0 0 0 var(--Avatar-ringSize) var(--Avatar-ringColor, ${theme.vars.palette.background.surface})`,
  "--Avatar-marginInlineStart": "var(--AvatarGroup-gap)",
  display: "flex",
  marginInlineStart: "calc(-1 * var(--AvatarGroup-gap))"
}));
var AvatarGroup = React8.forwardRef(function AvatarGroup2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyAvatarGroup"
  });
  const {
    className,
    color,
    component = "div",
    size = "md",
    variant,
    children
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded7);
  const ownerState = React8.useMemo(() => _extends({}, props, {
    color,
    component,
    size,
    variant
  }), [color, component, props, size, variant]);
  const classes = useUtilityClasses4();
  return (0, import_jsx_runtime10.jsx)(AvatarGroupContext.Provider, {
    value: ownerState,
    children: (0, import_jsx_runtime10.jsx)(AvatarGroupGroupRoot, _extends({
      as: component,
      ownerState,
      className: clsx_m_default(classes.root, className),
      ref
    }, other, {
      children
    }))
  });
});
true ? AvatarGroup.propTypes = {
  children: import_prop_types4.default.node,
  className: import_prop_types4.default.string,
  color: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types4.default.string]),
  component: import_prop_types4.default.elementType,
  size: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["lg", "md", "sm"]), import_prop_types4.default.string]),
  sx: import_prop_types4.default.oneOfType([import_prop_types4.default.arrayOf(import_prop_types4.default.oneOfType([import_prop_types4.default.func, import_prop_types4.default.object, import_prop_types4.default.bool])), import_prop_types4.default.func, import_prop_types4.default.object]),
  variant: import_prop_types4.default.oneOfType([import_prop_types4.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types4.default.string])
} : void 0;
var AvatarGroup_default = AvatarGroup;

// node_modules/@mui/joy/Avatar/Avatar.js
var import_jsx_runtime11 = __toESM(require_jsx_runtime());
var _excluded8 = ["alt", "color", "component", "componentsProps", "size", "variant", "imgProps", "src", "srcSet", "children"];
var useUtilityClasses5 = (ownerState) => {
  const {
    size,
    variant,
    color,
    src,
    srcSet
  } = ownerState;
  const slots = {
    root: ["root", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],
    img: [(src || srcSet) && "img"],
    fallback: ["fallback"]
  };
  return composeClasses(slots, getAvatarUtilityClass, {});
};
var AvatarRoot = styled_default("div", {
  name: "JoyAvatar",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  return [_extends({}, ownerState.size === "sm" && {
    width: `var(--Avatar-size, 2rem)`,
    height: `var(--Avatar-size, 2rem)`,
    fontSize: theme.vars.fontSize.sm
  }, ownerState.size === "md" && {
    width: `var(--Avatar-size, 2.5rem)`,
    height: `var(--Avatar-size, 2.5rem)`,
    fontSize: theme.vars.fontSize.md
  }, ownerState.size === "lg" && {
    width: `var(--Avatar-size, 3rem)`,
    height: `var(--Avatar-size, 3rem)`,
    fontSize: theme.vars.fontSize.lg
  }, {
    marginInlineStart: "var(--Avatar-marginInlineStart)",
    boxShadow: `var(--Avatar-ring)`,
    fontFamily: theme.vars.fontFamily.body,
    fontWeight: theme.vars.fontWeight.md,
    position: "relative",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    flexShrink: 0,
    lineHeight: 1,
    overflow: "hidden",
    borderRadius: "var(--Avatar-radius, 50%)",
    userSelect: "none"
  }), (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]];
});
var AvatarImg = styled_default("img", {
  name: "JoyAvatar",
  slot: "Img",
  overridesResolver: (props, styles) => styles.img
})({
  width: "100%",
  height: "100%",
  textAlign: "center",
  objectFit: "cover",
  color: "transparent",
  textIndent: 1e4
});
var AvatarFallback = styled_default(Person_default, {
  name: "JoyAvatar",
  slot: "Fallback",
  overridesResolver: (props, styles) => styles.fallback
})({
  width: "64%",
  height: "64%"
});
function useLoaded({
  crossOrigin,
  referrerPolicy,
  src,
  srcSet
}) {
  const [loaded, setLoaded] = React9.useState(false);
  React9.useEffect(() => {
    if (!src && !srcSet) {
      return void 0;
    }
    setLoaded(false);
    let active = true;
    const image = new Image();
    image.onload = () => {
      if (!active) {
        return;
      }
      setLoaded("loaded");
    };
    image.onerror = () => {
      if (!active) {
        return;
      }
      setLoaded("error");
    };
    image.crossOrigin = crossOrigin;
    image.referrerPolicy = referrerPolicy;
    if (src) {
      image.src = src;
    }
    if (srcSet) {
      image.srcset = srcSet;
    }
    return () => {
      active = false;
    };
  }, [crossOrigin, referrerPolicy, src, srcSet]);
  return loaded;
}
var Avatar = React9.forwardRef(function Avatar2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyAvatar"
  });
  const groupContext = React9.useContext(AvatarGroupContext);
  const {
    alt,
    color: colorProp = "neutral",
    component = "div",
    componentsProps = {},
    size: sizeProp = "md",
    variant: variantProp = "soft",
    imgProps,
    src,
    srcSet,
    children: childrenProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded8);
  const color = inProps.color || (groupContext == null ? void 0 : groupContext.color) || colorProp;
  const variant = inProps.variant || (groupContext == null ? void 0 : groupContext.variant) || variantProp;
  const size = inProps.size || (groupContext == null ? void 0 : groupContext.size) || sizeProp;
  let children = null;
  const ownerState = _extends({}, props, {
    color,
    component,
    size,
    variant,
    grouped: !!groupContext
  });
  const loaded = useLoaded(_extends({}, imgProps, typeof componentsProps.img === "function" ? componentsProps.img(ownerState) : componentsProps.img, {
    src,
    srcSet
  }));
  const hasImg = src || srcSet;
  const hasImgNotFailing = hasImg && loaded !== "error";
  const classes = useUtilityClasses5(ownerState);
  const imageProps = useSlotProps({
    elementType: AvatarImg,
    externalSlotProps: componentsProps.img,
    ownerState,
    additionalProps: _extends({
      alt,
      src,
      srcSet
    }, imgProps),
    className: classes.img
  });
  const fallbackProps = useSlotProps({
    elementType: AvatarFallback,
    externalSlotProps: componentsProps.fallback,
    ownerState,
    className: classes.fallback
  });
  if (hasImgNotFailing) {
    children = (0, import_jsx_runtime11.jsx)(AvatarImg, _extends({}, imageProps));
  } else if (childrenProp != null) {
    children = childrenProp;
  } else if (hasImg && alt) {
    children = alt[0];
  } else {
    children = (0, import_jsx_runtime11.jsx)(AvatarFallback, _extends({}, fallbackProps));
  }
  const rootProps = useSlotProps({
    elementType: AvatarRoot,
    externalSlotProps: componentsProps.root,
    ownerState,
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    className: classes.root
  });
  return (0, import_jsx_runtime11.jsx)(AvatarRoot, _extends({}, rootProps, {
    children
  }));
});
true ? Avatar.propTypes = {
  alt: import_prop_types5.default.string,
  children: import_prop_types5.default.node,
  color: import_prop_types5.default.oneOfType([import_prop_types5.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types5.default.string]),
  component: import_prop_types5.default.elementType,
  componentsProps: import_prop_types5.default.shape({
    fallback: import_prop_types5.default.oneOfType([import_prop_types5.default.func, import_prop_types5.default.object]),
    img: import_prop_types5.default.oneOfType([import_prop_types5.default.func, import_prop_types5.default.object]),
    root: import_prop_types5.default.oneOfType([import_prop_types5.default.func, import_prop_types5.default.object])
  }),
  imgProps: import_prop_types5.default.object,
  size: import_prop_types5.default.oneOfType([import_prop_types5.default.oneOf(["lg", "md", "sm"]), import_prop_types5.default.string]),
  src: import_prop_types5.default.string,
  srcSet: import_prop_types5.default.string,
  sx: import_prop_types5.default.oneOfType([import_prop_types5.default.arrayOf(import_prop_types5.default.oneOfType([import_prop_types5.default.func, import_prop_types5.default.object, import_prop_types5.default.bool])), import_prop_types5.default.func, import_prop_types5.default.object]),
  variant: import_prop_types5.default.oneOfType([import_prop_types5.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types5.default.string])
} : void 0;
var Avatar_default = Avatar;

// node_modules/@mui/joy/Badge/Badge.js
init_objectWithoutPropertiesLoose();
init_extends();
var React10 = __toESM(require_react());
var import_prop_types6 = __toESM(require_prop_types());
init_esm();
init_base();
init_utils();

// node_modules/@mui/joy/Badge/badgeClasses.js
function getBadgeUtilityClass(slot) {
  return generateUtilityClass2("JoyBadge", slot);
}
var badgeClasses = generateUtilityClasses2("JoyBadge", ["root", "badge", "anchorOriginTopRight", "anchorOriginBottomRight", "anchorOriginTopLeft", "anchorOriginBottomLeft", "colorPrimary", "colorDanger", "colorInfo", "colorNeutral", "colorSuccess", "colorWarning", "invisible", "locationInside", "locationOutside", "sizeSm", "sizeMd", "sizeLg", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var badgeClasses_default = badgeClasses;

// node_modules/@mui/joy/Badge/Badge.js
var import_jsx_runtime12 = __toESM(require_jsx_runtime());
var import_jsx_runtime13 = __toESM(require_jsx_runtime());
var _excluded9 = ["anchorOrigin", "badgeInset", "children", "component", "componentsProps", "size", "color", "invisible", "max", "badgeContent", "showZero", "variant"];
var useUtilityClasses6 = (ownerState) => {
  const {
    color,
    variant,
    size,
    anchorOrigin,
    invisible
  } = ownerState;
  const slots = {
    root: ["root"],
    badge: ["badge", invisible && "invisible", anchorOrigin && `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getBadgeUtilityClass, {});
};
var BadgeRoot = styled_default("span", {
  name: "JoyBadge",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => _extends({}, ownerState.size === "sm" && _extends({
  "--Badge-minHeight": "0.5rem"
}, ownerState.badgeContent && {
  "--Badge-minHeight": "1rem"
}, {
  "--Badge-paddingX": "0.25rem",
  fontSize: theme.vars.fontSize.xs
}), ownerState.size === "md" && _extends({
  "--Badge-minHeight": "0.75rem"
}, ownerState.badgeContent && {
  "--Badge-minHeight": "1.25rem"
}, {
  "--Badge-paddingX": "0.375rem",
  fontSize: theme.vars.fontSize.sm
}), ownerState.size === "lg" && _extends({
  "--Badge-minHeight": "1rem"
}, ownerState.badgeContent && {
  "--Badge-minHeight": "1.5rem"
}, {
  "--Badge-paddingX": "0.5rem",
  fontSize: theme.vars.fontSize.md
}), {
  "--Badge-ringSize": "2px",
  "--Badge-ring": `0 0 0 var(--Badge-ringSize) var(--Badge-ringColor, ${theme.vars.palette.background.surface})`,
  position: "relative",
  display: "inline-flex",
  verticalAlign: "middle",
  flexShrink: 0
}));
var BadgeBadge = styled_default("span", {
  name: "JoyBadge",
  slot: "Badge",
  overridesResolver: (props, styles) => styles.badge
})(({
  theme,
  ownerState
}) => {
  var _ownerState$anchorOri, _ownerState$anchorOri2, _ownerState$anchorOri3, _ownerState$anchorOri4, _theme$variants;
  const inset = {
    top: ownerState.badgeInset,
    left: ownerState.badgeInset,
    bottom: ownerState.badgeInset,
    right: ownerState.badgeInset
  };
  if (typeof ownerState.badgeInset === "string") {
    const insetValues = ownerState.badgeInset.split(" ");
    if (insetValues.length > 1) {
      inset.top = insetValues[0];
      inset.right = insetValues[1];
      if (insetValues.length === 2) {
        inset.bottom = insetValues[0];
        inset.left = insetValues[1];
      }
      if (insetValues.length === 3) {
        inset.left = insetValues[1];
        inset.bottom = insetValues[2];
      }
      if (insetValues.length === 4) {
        inset.bottom = insetValues[2];
        inset.left = insetValues[3];
      }
    }
  }
  const translateY = ((_ownerState$anchorOri = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri.vertical) === "top" ? "translateY(-50%)" : "translateY(50%)";
  const translateX = ((_ownerState$anchorOri2 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri2.horizontal) === "left" ? "translateX(-50%)" : "translateX(50%)";
  const transformOriginY = ((_ownerState$anchorOri3 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri3.vertical) === "top" ? "0%" : "100%";
  const transformOriginX = ((_ownerState$anchorOri4 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri4.horizontal) === "left" ? "0%" : "100%";
  return _extends({
    display: "inline-flex",
    flexWrap: "wrap",
    justifyContent: "center",
    alignContent: "center",
    alignItems: "center",
    position: "absolute",
    boxSizing: "border-box",
    boxShadow: "var(--Badge-ring)",
    fontFamily: theme.vars.fontFamily.body,
    fontWeight: theme.vars.fontWeight.md,
    lineHeight: 1,
    padding: "calc(var(--Badge-paddingX) / 2 - var(--variant-borderWidth)) calc(var(--Badge-paddingX) - var(--variant-borderWidth))",
    minHeight: "var(--Badge-minHeight)",
    minWidth: "var(--Badge-minHeight)",
    borderRadius: "var(--Badge-radius, var(--Badge-minHeight))",
    zIndex: 1,
    transition: "transform 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    backgroundColor: theme.vars.palette.background.surface,
    [ownerState.anchorOrigin.vertical]: inset[ownerState.anchorOrigin.vertical],
    [ownerState.anchorOrigin.horizontal]: inset[ownerState.anchorOrigin.horizontal],
    transform: `scale(1) ${translateX} ${translateY}`,
    transformOrigin: `${transformOriginX} ${transformOriginY}`,
    [`&.${badgeClasses_default.invisible}`]: {
      transform: `scale(0) ${translateX} ${translateY}`
    }
  }, ownerState.invisible && {
    transition: "transform 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"
  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]);
});
var Badge = React10.forwardRef(function Badge2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyBadge"
  });
  const {
    anchorOrigin: anchorOriginProp = {
      vertical: "top",
      horizontal: "right"
    },
    badgeInset: badgeInsetProp = 0,
    children,
    component = "span",
    componentsProps = {},
    size: sizeProp = "md",
    color: colorProp = "primary",
    invisible: invisibleProp = false,
    max = 99,
    badgeContent: badgeContentProp = "",
    showZero = false,
    variant: variantProp = "solid"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded9);
  const prevProps = usePreviousProps_default({
    anchorOrigin: anchorOriginProp,
    size: sizeProp,
    badgeInset: badgeInsetProp,
    color: colorProp,
    variant: variantProp
  });
  let invisible = invisibleProp;
  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null)) {
    invisible = true;
  }
  const {
    color = colorProp,
    size = sizeProp,
    anchorOrigin = anchorOriginProp,
    variant = variantProp,
    badgeInset = badgeInsetProp
  } = invisible ? prevProps : props;
  const ownerState = _extends({}, props, {
    anchorOrigin,
    badgeInset,
    variant,
    invisible,
    color,
    size
  });
  const classes = useUtilityClasses6(ownerState);
  let displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;
  if (invisible && badgeContentProp === 0) {
    displayValue = "";
  }
  const rootProps = useSlotProps({
    elementType: BadgeRoot,
    ownerState,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    className: classes.root
  });
  const badgeProps = useSlotProps({
    elementType: BadgeBadge,
    ownerState,
    externalSlotProps: componentsProps.badge,
    className: classes.badge
  });
  return (0, import_jsx_runtime13.jsxs)(BadgeRoot, _extends({}, rootProps, {
    children: [children, (0, import_jsx_runtime12.jsx)(BadgeBadge, _extends({}, badgeProps, {
      children: displayValue
    }))]
  }));
});
true ? Badge.propTypes = {
  anchorOrigin: import_prop_types6.default.shape({
    horizontal: import_prop_types6.default.oneOf(["left", "right"]).isRequired,
    vertical: import_prop_types6.default.oneOf(["bottom", "top"]).isRequired
  }),
  badgeContent: import_prop_types6.default.node,
  badgeInset: import_prop_types6.default.oneOfType([import_prop_types6.default.number, import_prop_types6.default.string]),
  children: import_prop_types6.default.node,
  color: import_prop_types6.default.oneOfType([import_prop_types6.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types6.default.string]),
  component: import_prop_types6.default.elementType,
  componentsProps: import_prop_types6.default.shape({
    badge: import_prop_types6.default.oneOfType([import_prop_types6.default.func, import_prop_types6.default.object]),
    root: import_prop_types6.default.oneOfType([import_prop_types6.default.func, import_prop_types6.default.object])
  }),
  invisible: import_prop_types6.default.bool,
  max: import_prop_types6.default.number,
  showZero: import_prop_types6.default.bool,
  size: import_prop_types6.default.oneOfType([import_prop_types6.default.oneOf(["sm", "md", "lg"]), import_prop_types6.default.string]),
  sx: import_prop_types6.default.oneOfType([import_prop_types6.default.arrayOf(import_prop_types6.default.oneOfType([import_prop_types6.default.func, import_prop_types6.default.object, import_prop_types6.default.bool])), import_prop_types6.default.func, import_prop_types6.default.object]),
  variant: import_prop_types6.default.oneOfType([import_prop_types6.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types6.default.string])
} : void 0;
var Badge_default = Badge;

// node_modules/@mui/joy/Box/Box.js
init_esm2();
var import_prop_types7 = __toESM(require_prop_types());
var Box = createBox({
  defaultTheme: defaultTheme_default,
  defaultClassName: "JoyBox-root",
  generateClassName: ClassNameGenerator_default.generate,
  styleFunctionSx: styleFunctionSx_default
});
true ? Box.propTypes = {
  children: import_prop_types7.default.node,
  component: import_prop_types7.default.elementType,
  sx: import_prop_types7.default.oneOfType([import_prop_types7.default.arrayOf(import_prop_types7.default.oneOfType([import_prop_types7.default.func, import_prop_types7.default.object, import_prop_types7.default.bool])), import_prop_types7.default.func, import_prop_types7.default.object])
} : void 0;
var Box_default = Box;

// node_modules/@mui/joy/Breadcrumbs/Breadcrumbs.js
init_objectWithoutPropertiesLoose();
init_extends();
var React11 = __toESM(require_react());
var import_prop_types8 = __toESM(require_prop_types());
init_esm();
init_base();
init_utils();
init_clsx_m();

// node_modules/@mui/joy/Breadcrumbs/breadcrumbsClasses.js
init_esm();
function getBreadcrumbsUtilityClass(slot) {
  return generateUtilityClass("MuiBreadcrumbs", slot);
}
var breadcrumbsClasses = generateUtilityClasses("MuiBreadcrumbs", ["root", "ol", "li", "separator", "sizeSm", "sizeMd", "sizeLg"]);
var breadcrumbsClasses_default = breadcrumbsClasses;

// node_modules/@mui/joy/Breadcrumbs/Breadcrumbs.js
var import_jsx_runtime14 = __toESM(require_jsx_runtime());
var _excluded10 = ["children", "className", "component", "componentsProps", "size", "separator"];
var useUtilityClasses7 = (ownerState) => {
  const {
    size
  } = ownerState;
  const slots = {
    root: ["root", size && `size${capitalize(size)}`],
    li: ["li"],
    ol: ["ol"],
    separator: ["separator"]
  };
  return composeClasses(slots, getBreadcrumbsUtilityClass, {});
};
var BreadcrumbsRoot = styled_default("nav", {
  name: "JoyBreadcrumbs",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => _extends({}, ownerState.size === "sm" && {
  "--Breadcrumbs-gap": "0.25rem",
  fontSize: theme.vars.fontSize.sm,
  padding: "0.5rem"
}, ownerState.size === "md" && {
  "--Breadcrumbs-gap": "0.375rem",
  fontSize: theme.vars.fontSize.md,
  padding: "0.75rem"
}, ownerState.size === "lg" && {
  "--Breadcrumbs-gap": "0.5rem",
  fontSize: theme.vars.fontSize.lg,
  padding: "1rem"
}, {
  lineHeight: 1
}));
var BreadcrumbsOl = styled_default("ol", {
  name: "JoyBreadcrumbs",
  slot: "Ol",
  overridesResolver: (props, styles) => styles.ol
})({
  display: "flex",
  flexWrap: "wrap",
  alignItems: "center",
  padding: 0,
  margin: 0,
  listStyle: "none"
});
var BreadcrumbsLi = styled_default("li", {
  name: "JoyBreadcrumbs",
  slot: "Ol",
  overridesResolver: (props, styles) => styles.ol
})({});
var BreadcrumbsSeparator = styled_default("li", {
  name: "JoyBreadcrumbs",
  slot: "Separator",
  overridesResolver: (props, styles) => styles.separator
})({
  display: "flex",
  userSelect: "none",
  marginInline: "var(--Breadcrumbs-gap)"
});
var Breadcrumbs = React11.forwardRef(function Breadcrumbs2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyBreadcrumbs"
  });
  const {
    children,
    className,
    component = "nav",
    componentsProps = {},
    size = "md",
    separator = "/"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded10);
  const ownerState = _extends({}, props, {
    component,
    separator,
    size
  });
  const classes = useUtilityClasses7(ownerState);
  const rootProps = useSlotProps({
    elementType: BreadcrumbsRoot,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    ownerState,
    additionalProps: {
      ref,
      as: component
    },
    className: clsx_m_default(classes.root, className)
  });
  const olProps = useSlotProps({
    elementType: BreadcrumbsOl,
    externalSlotProps: componentsProps.ol,
    ownerState,
    className: classes.ol
  });
  const liProps = useSlotProps({
    elementType: BreadcrumbsLi,
    externalSlotProps: componentsProps.li,
    ownerState,
    className: classes.li
  });
  const separatorProps = useSlotProps({
    elementType: BreadcrumbsSeparator,
    externalSlotProps: componentsProps.separator,
    ownerState,
    additionalProps: {
      "aria-hidden": true
    },
    className: classes.separator
  });
  const allItems = React11.Children.toArray(children).filter((child) => {
    return React11.isValidElement(child);
  }).map((child, index) => (0, import_jsx_runtime14.jsx)(BreadcrumbsLi, _extends({}, liProps, {
    children: child
  }), `child-${index}`));
  return (0, import_jsx_runtime14.jsx)(BreadcrumbsRoot, _extends({}, rootProps, {
    children: (0, import_jsx_runtime14.jsx)(BreadcrumbsOl, _extends({}, olProps, {
      children: allItems.reduce((acc, current, index) => {
        if (index < allItems.length - 1) {
          acc = acc.concat(current, (0, import_jsx_runtime14.jsx)(BreadcrumbsSeparator, _extends({}, separatorProps, {
            children: separator
          }), `separator-${index}`));
        } else {
          acc.push(current);
        }
        return acc;
      }, [])
    }))
  }));
});
true ? Breadcrumbs.propTypes = {
  children: import_prop_types8.default.node,
  className: import_prop_types8.default.string,
  component: import_prop_types8.default.elementType,
  componentsProps: import_prop_types8.default.shape({
    li: import_prop_types8.default.oneOfType([import_prop_types8.default.func, import_prop_types8.default.object]),
    ol: import_prop_types8.default.oneOfType([import_prop_types8.default.func, import_prop_types8.default.object]),
    root: import_prop_types8.default.oneOfType([import_prop_types8.default.func, import_prop_types8.default.object]),
    separator: import_prop_types8.default.oneOfType([import_prop_types8.default.func, import_prop_types8.default.object])
  }),
  separator: import_prop_types8.default.node,
  size: import_prop_types8.default.oneOfType([import_prop_types8.default.oneOf(["sm", "md", "lg"]), import_prop_types8.default.string]),
  sx: import_prop_types8.default.oneOfType([import_prop_types8.default.arrayOf(import_prop_types8.default.oneOfType([import_prop_types8.default.func, import_prop_types8.default.object, import_prop_types8.default.bool])), import_prop_types8.default.func, import_prop_types8.default.object])
} : void 0;
var Breadcrumbs_default = Breadcrumbs;

// node_modules/@mui/joy/Button/Button.js
init_objectWithoutPropertiesLoose();
init_extends();
var React13 = __toESM(require_react());
var import_prop_types10 = __toESM(require_prop_types());
init_ButtonUnstyled();
init_composeClasses();
init_utils();
init_esm();

// node_modules/@mui/joy/CircularProgress/CircularProgress.js
init_extends();
init_objectWithoutPropertiesLoose();
init_base();
init_utils();
init_esm2();
init_esm();
init_clsx_m();
var import_prop_types9 = __toESM(require_prop_types());
var React12 = __toESM(require_react());

// node_modules/@mui/joy/CircularProgress/circularProgressClasses.js
function getCircularProgressUtilityClass(slot) {
  return generateUtilityClass2("JoyCircularProgress", slot);
}
var circularProgressClasses = generateUtilityClasses2("JoyCircularProgress", ["root", "determinate", "svg", "track", "progress", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var circularProgressClasses_default = circularProgressClasses;

// node_modules/@mui/joy/CircularProgress/CircularProgress.js
var import_jsx_runtime15 = __toESM(require_jsx_runtime());
var import_jsx_runtime16 = __toESM(require_jsx_runtime());
var _ = (t) => t;
var _t;
var _excluded11 = ["color", "backgroundColor"];
var _excluded23 = ["componentsProps", "component", "children", "className", "color", "size", "variant", "thickness", "determinate", "value"];
var circulate = keyframes({
  "0%": {
    transform: "rotate(-90deg)"
  },
  "100%": {
    transform: "rotate(270deg)"
  }
});
var useUtilityClasses8 = (ownerState) => {
  const {
    determinate,
    color,
    variant,
    size
  } = ownerState;
  const slots = {
    root: ["root", determinate && "determinate", color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`, size && `size${capitalize(size)}`],
    svg: ["svg"],
    track: ["track"],
    progress: ["progress"]
  };
  return composeClasses(slots, getCircularProgressUtilityClass, {});
};
var CircularProgressRoot = styled_default("span", {
  name: "JoyCircularProgress",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  ownerState,
  theme
}) => {
  var _theme$variants;
  const _ref = ((_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]) || {}, {
    color,
    backgroundColor
  } = _ref, rest = _objectWithoutPropertiesLoose(_ref, _excluded11);
  return _extends({
    "--Icon-fontSize": "calc(0.4 * var(--_root-size))",
    "--CircularProgress-track-color": backgroundColor,
    "--CircularProgress-progress-color": color,
    "--CircularProgress-percent": ownerState.value,
    "--CircularProgress-linecap": "round"
  }, ownerState.size === "sm" && {
    "--CircularProgress-track-thickness": "3px",
    "--CircularProgress-progress-thickness": "3px",
    "--_root-size": "var(--CircularProgress-size, 24px)"
  }, ownerState.instanceSize === "sm" && {
    "--CircularProgress-size": "24px"
  }, ownerState.size === "md" && {
    "--CircularProgress-track-thickness": "6px",
    "--CircularProgress-progress-thickness": "6px",
    "--_root-size": "var(--CircularProgress-size, 40px)"
  }, ownerState.instanceSize === "md" && {
    "--CircularProgress-size": "40px"
  }, ownerState.size === "lg" && {
    "--CircularProgress-track-thickness": "8px",
    "--CircularProgress-progress-thickness": "8px",
    "--_root-size": "var(--CircularProgress-size, 64px)"
  }, ownerState.instanceSize === "lg" && {
    "--CircularProgress-size": "64px"
  }, ownerState.thickness && {
    "--CircularProgress-track-thickness": `${ownerState.thickness}px`,
    "--CircularProgress-progress-thickness": `${ownerState.thickness}px`
  }, {
    "--_thickness-diff": "calc(var(--CircularProgress-track-thickness) - var(--CircularProgress-progress-thickness))",
    "--_inner-size": "calc(var(--_root-size) - 2 * var(--variant-borderWidth))",
    width: "var(--_root-size)",
    height: "var(--_root-size)",
    borderRadius: "var(--_root-size)",
    margin: "var(--CircularProgress-margin)",
    boxSizing: "border-box",
    display: "inline-flex",
    justifyContent: "center",
    alignItems: "center",
    position: "relative",
    color
  }, ownerState.children && {
    fontFamily: theme.vars.fontFamily.body,
    fontWeight: theme.vars.fontWeight.md,
    fontSize: "calc(0.2 * var(--_root-size))"
  }, rest);
});
var CircularProgressSvg = styled_default("svg", {
  name: "JoyCircularProgress",
  slot: "Svg",
  overridesResolver: (props, styles) => styles.svg
})({
  width: "inherit",
  height: "inherit",
  display: "inherit",
  boxSizing: "inherit",
  position: "absolute",
  top: "calc(-1 * var(--variant-borderWidth))",
  left: "calc(-1 * var(--variant-borderWidth))"
});
var CircularProgressTrack = styled_default("circle", {
  name: "JoyCircularProgress",
  slot: "track",
  overridesResolver: (props, styles) => styles.track
})({
  cx: "50%",
  cy: "50%",
  r: "calc(var(--_inner-size) / 2 - var(--CircularProgress-track-thickness) / 2 + min(0px, var(--_thickness-diff) / 2))",
  fill: "transparent",
  strokeWidth: "var(--CircularProgress-track-thickness)",
  stroke: "var(--CircularProgress-track-color)"
});
var CircularProgressProgress = styled_default("circle", {
  name: "JoyCircularProgress",
  slot: "progress",
  overridesResolver: (props, styles) => styles.progress
})({
  "--_progress-radius": "calc(var(--_inner-size) / 2 - var(--CircularProgress-progress-thickness) / 2 - max(0px, var(--_thickness-diff) / 2))",
  "--_progress-length": "calc(2 * 3.1415926535 * var(--_progress-radius))",
  cx: "50%",
  cy: "50%",
  r: "var(--_progress-radius)",
  fill: "transparent",
  strokeWidth: "var(--CircularProgress-progress-thickness)",
  stroke: "var(--CircularProgress-progress-color)",
  strokeLinecap: "var(--CircularProgress-linecap, round)",
  strokeDasharray: "var(--_progress-length)",
  strokeDashoffset: "calc(var(--_progress-length) - var(--CircularProgress-percent) * var(--_progress-length) / 100)",
  transformOrigin: "center",
  transform: "rotate(-90deg)"
}, ({
  ownerState
}) => ownerState.determinate ? {
  transition: "stroke-dashoffset 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"
} : css(_t || (_t = _`
          animation: var(
              --CircularProgress-circulation,
              0.5s linear 0s infinite normal none running
            )
            ${0};
        `), circulate));
var CircularProgress = React12.forwardRef(function CircularProgress2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyCircularProgress"
  });
  const {
    componentsProps = {},
    component = "span",
    children,
    className,
    color = "primary",
    size = "md",
    variant = "soft",
    thickness,
    determinate = false,
    value = determinate ? 0 : 25
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded23);
  const ownerState = _extends({}, props, {
    color,
    size,
    variant,
    thickness,
    value,
    determinate,
    instanceSize: inProps.size
  });
  const classes = useUtilityClasses8(ownerState);
  const rootProps = useSlotProps(_extends({
    elementType: CircularProgressRoot,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    ownerState,
    additionalProps: {
      ref,
      as: component,
      role: "progressbar",
      style: {
        "--CircularProgress-percent": value
      }
    },
    className: clsx_m_default(classes.root, className)
  }, value && determinate && {
    "aria-valuenow": typeof value === "number" ? Math.round(value) : Math.round(Number(value || 0))
  }));
  const svgProps = useSlotProps({
    elementType: CircularProgressSvg,
    externalSlotProps: componentsProps.svg,
    ownerState,
    className: classes.svg
  });
  const trackProps = useSlotProps({
    elementType: CircularProgressTrack,
    externalSlotProps: componentsProps.track,
    ownerState,
    className: classes.track
  });
  const progressProps = useSlotProps({
    elementType: CircularProgressProgress,
    externalSlotProps: componentsProps.progress,
    ownerState,
    className: classes.progress
  });
  return (0, import_jsx_runtime16.jsxs)(CircularProgressRoot, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime16.jsxs)(CircularProgressSvg, _extends({}, svgProps, {
      children: [(0, import_jsx_runtime15.jsx)(CircularProgressTrack, _extends({}, trackProps)), (0, import_jsx_runtime15.jsx)(CircularProgressProgress, _extends({}, progressProps))]
    })), children]
  }));
});
true ? CircularProgress.propTypes = {
  children: import_prop_types9.default.node,
  className: import_prop_types9.default.string,
  color: import_prop_types9.default.oneOfType([import_prop_types9.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types9.default.string]),
  component: import_prop_types9.default.elementType,
  componentsProps: import_prop_types9.default.shape({
    progress: import_prop_types9.default.oneOfType([import_prop_types9.default.func, import_prop_types9.default.object]),
    root: import_prop_types9.default.oneOfType([import_prop_types9.default.func, import_prop_types9.default.object]),
    svg: import_prop_types9.default.oneOfType([import_prop_types9.default.func, import_prop_types9.default.object]),
    track: import_prop_types9.default.oneOfType([import_prop_types9.default.func, import_prop_types9.default.object])
  }),
  determinate: import_prop_types9.default.bool,
  size: import_prop_types9.default.oneOfType([import_prop_types9.default.oneOf(["sm", "md", "lg"]), import_prop_types9.default.string]),
  sx: import_prop_types9.default.oneOfType([import_prop_types9.default.arrayOf(import_prop_types9.default.oneOfType([import_prop_types9.default.func, import_prop_types9.default.object, import_prop_types9.default.bool])), import_prop_types9.default.func, import_prop_types9.default.object]),
  thickness: import_prop_types9.default.number,
  value: import_prop_types9.default.number,
  variant: import_prop_types9.default.oneOfType([import_prop_types9.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types9.default.string])
} : void 0;
var CircularProgress_default = CircularProgress;

// node_modules/@mui/joy/Button/buttonClasses.js
function getButtonUtilityClass(slot) {
  return generateUtilityClass2("JoyButton", slot);
}
var buttonClasses = generateUtilityClasses2("JoyButton", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "focusVisible", "disabled", "sizeSm", "sizeMd", "sizeLg", "fullWidth", "startDecorator", "endDecorator", "loading", "loadingIndicatorCenter"]);
var buttonClasses_default = buttonClasses;

// node_modules/@mui/joy/Button/Button.js
var import_jsx_runtime17 = __toESM(require_jsx_runtime());
var import_jsx_runtime18 = __toESM(require_jsx_runtime());
var _excluded12 = ["children", "action", "component", "componentsProps", "color", "variant", "size", "fullWidth", "startDecorator", "endDecorator", "loading", "loadingPosition", "loadingIndicator", "disabled"];
var useUtilityClasses9 = (ownerState) => {
  const {
    color,
    disabled,
    focusVisible,
    focusVisibleClassName,
    fullWidth,
    size,
    variant,
    loading
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", fullWidth && "fullWidth", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`, loading && "loading"],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"],
    loadingIndicatorCenter: ["loadingIndicatorCenter"]
  };
  const composedClasses = composeClasses(slots, getButtonUtilityClass, {});
  if (focusVisible && focusVisibleClassName) {
    composedClasses.root += ` ${focusVisibleClassName}`;
  }
  return composedClasses;
};
var ButtonStartDecorator = styled_default("span", {
  name: "JoyButton",
  slot: "StartDecorator",
  overridesResolver: (props, styles) => styles.startDecorator
})({
  "--Icon-margin": "0 0 0 calc(var(--Button-gap) / -2)",
  "--CircularProgress-margin": "0 0 0 calc(var(--Button-gap) / -2)",
  display: "inherit",
  marginRight: "var(--Button-gap)"
});
var ButtonEndDecorator = styled_default("span", {
  name: "JoyButton",
  slot: "EndDecorator",
  overridesResolver: (props, styles) => styles.endDecorator
})({
  "--Icon-margin": "0 calc(var(--Button-gap) / -2) 0 0",
  "--CircularProgress-margin": "0 calc(var(--Button-gap) / -2) 0 0",
  display: "inherit",
  marginLeft: "var(--Button-gap)"
});
var ButtonLoadingCenter = styled_default("span", {
  name: "JoyButton",
  slot: "LoadingCenter",
  overridesResolver: (props, styles) => styles.loadingIndicatorCenter
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;
  return _extends({
    display: "inherit",
    position: "absolute",
    left: "50%",
    transform: "translateX(-50%)",
    color: (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : (_theme$variants2 = _theme$variants[ownerState.color]) == null ? void 0 : _theme$variants2.color
  }, ownerState.disabled && {
    color: (_theme$variants3 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : (_theme$variants4 = _theme$variants3[ownerState.color]) == null ? void 0 : _theme$variants4.color
  });
});
var ButtonRoot = styled_default("button", {
  name: "JoyButton",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants5, _theme$variants6, _theme$variants7, _theme$variants8;
  return [_extends({
    "--Icon-margin": "initial",
    "--CircularProgress-size": "var(--Icon-fontSize)"
  }, ownerState.size === "sm" && {
    "--Icon-fontSize": "1.25rem",
    "--Button-gap": "0.375rem",
    minHeight: "var(--Button-minHeight, 2rem)",
    fontSize: theme.vars.fontSize.sm,
    paddingBlock: "2px",
    paddingInline: "0.75rem"
  }, ownerState.size === "md" && {
    "--Icon-fontSize": "1.5rem",
    "--Button-gap": "0.5rem",
    minHeight: "var(--Button-minHeight, 2.5rem)",
    fontSize: theme.vars.fontSize.sm,
    paddingBlock: "0.25rem",
    paddingInline: "1rem"
  }, ownerState.size === "lg" && {
    "--Icon-fontSize": "1.75rem",
    "--Button-gap": "0.75rem",
    minHeight: "var(--Button-minHeight, 3rem)",
    fontSize: theme.vars.fontSize.md,
    paddingBlock: "0.375rem",
    paddingInline: "1.5rem"
  }, {
    WebkitTapHighlightColor: "transparent",
    borderRadius: `var(--Button-radius, ${theme.vars.radius.sm})`,
    margin: `var(--Button-margin)`,
    border: "none",
    backgroundColor: "transparent",
    cursor: "pointer",
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    position: "relative",
    textDecoration: "none",
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    fontFamily: theme.vars.fontFamily.body,
    fontWeight: theme.vars.fontWeight.md,
    lineHeight: 1
  }, ownerState.fullWidth && {
    width: "100%"
  }, {
    [theme.focus.selector]: theme.focus.default
  }), (_theme$variants5 = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants5[ownerState.color], {
    "&:hover": (_theme$variants6 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants6[ownerState.color]
  }, {
    "&:active": (_theme$variants7 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants7[ownerState.color]
  }, _extends({
    [`&.${buttonClasses_default.disabled}`]: (_theme$variants8 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants8[ownerState.color]
  }, ownerState.loadingPosition === "center" && {
    [`&.${buttonClasses_default.loading}`]: {
      transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
      color: "transparent"
    }
  })];
});
var Button = React13.forwardRef(function Button2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyButton"
  });
  const {
    children,
    action,
    component = "button",
    componentsProps = {},
    color: colorProp = "primary",
    variant = "solid",
    size = "md",
    fullWidth = false,
    startDecorator,
    endDecorator,
    loading = false,
    loadingPosition = "center",
    loadingIndicator: loadingIndicatorProp,
    disabled
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded12);
  const {
    getColor
  } = useColorInversion(variant);
  const color = getColor(inProps.color, colorProp);
  const buttonRef = React13.useRef(null);
  const handleRef = useForkRef(buttonRef, ref);
  const {
    focusVisible,
    setFocusVisible,
    getRootProps
  } = useButton(_extends({}, props, {
    disabled: disabled || loading,
    ref: handleRef
  }));
  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : (0, import_jsx_runtime17.jsx)(CircularProgress_default, {
    color,
    thickness: {
      sm: 2,
      md: 3,
      lg: 4
    }[size] || 3
  });
  React13.useImperativeHandle(action, () => ({
    focusVisible: () => {
      var _buttonRef$current;
      setFocusVisible(true);
      (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();
    }
  }), [setFocusVisible]);
  const ownerState = _extends({}, props, {
    component,
    color,
    fullWidth,
    variant,
    size,
    focusVisible,
    loading,
    loadingPosition,
    disabled: disabled || loading
  });
  const classes = useUtilityClasses9(ownerState);
  const rootProps = useSlotProps({
    elementType: ButtonRoot,
    externalSlotProps: componentsProps.root,
    ownerState,
    getSlotProps: getRootProps,
    externalForwardedProps: other,
    additionalProps: {
      as: component
    },
    className: classes.root
  });
  const startDecoratorProps = useSlotProps({
    elementType: ButtonStartDecorator,
    externalSlotProps: componentsProps.startDecorator,
    ownerState,
    className: classes.startDecorator
  });
  const endDecoratorProps = useSlotProps({
    elementType: ButtonEndDecorator,
    externalSlotProps: componentsProps.endDecorator,
    ownerState,
    className: classes.endDecorator
  });
  const loadingIndicatorCenterProps = useSlotProps({
    elementType: ButtonLoadingCenter,
    externalSlotProps: componentsProps.loadingIndicatorCenter,
    ownerState,
    className: classes.loadingIndicatorCenter
  });
  return (0, import_jsx_runtime18.jsxs)(ButtonRoot, _extends({}, rootProps, {
    children: [(startDecorator || loading && loadingPosition === "start") && (0, import_jsx_runtime17.jsx)(ButtonStartDecorator, _extends({}, startDecoratorProps, {
      children: loading && loadingPosition === "start" ? loadingIndicator : startDecorator
    })), children, loading && loadingPosition === "center" && (0, import_jsx_runtime17.jsx)(ButtonLoadingCenter, _extends({}, loadingIndicatorCenterProps, {
      children: loadingIndicator
    })), (endDecorator || loading && loadingPosition === "end") && (0, import_jsx_runtime17.jsx)(ButtonEndDecorator, _extends({}, endDecoratorProps, {
      children: loading && loadingPosition === "end" ? loadingIndicator : endDecorator
    }))]
  }));
});
true ? Button.propTypes = {
  action: import_prop_types10.default.oneOfType([import_prop_types10.default.func, import_prop_types10.default.shape({
    current: import_prop_types10.default.shape({
      focusVisible: import_prop_types10.default.func.isRequired
    })
  })]),
  children: import_prop_types10.default.node,
  color: import_prop_types10.default.oneOfType([import_prop_types10.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types10.default.string]),
  component: import_prop_types10.default.elementType,
  componentsProps: import_prop_types10.default.shape({
    endDecorator: import_prop_types10.default.oneOfType([import_prop_types10.default.func, import_prop_types10.default.object]),
    loadingIndicatorCenter: import_prop_types10.default.oneOfType([import_prop_types10.default.func, import_prop_types10.default.object]),
    root: import_prop_types10.default.oneOfType([import_prop_types10.default.func, import_prop_types10.default.object]),
    startDecorator: import_prop_types10.default.oneOfType([import_prop_types10.default.func, import_prop_types10.default.object])
  }),
  disabled: import_prop_types10.default.bool,
  endDecorator: import_prop_types10.default.node,
  focusVisibleClassName: import_prop_types10.default.string,
  fullWidth: import_prop_types10.default.bool,
  loading: import_prop_types10.default.bool,
  loadingIndicator: import_prop_types10.default.node,
  loadingPosition: import_prop_types10.default.oneOf(["center", "end", "start"]),
  size: import_prop_types10.default.oneOfType([import_prop_types10.default.oneOf(["sm", "md", "lg"]), import_prop_types10.default.string]),
  startDecorator: import_prop_types10.default.node,
  sx: import_prop_types10.default.oneOfType([import_prop_types10.default.arrayOf(import_prop_types10.default.oneOfType([import_prop_types10.default.func, import_prop_types10.default.object, import_prop_types10.default.bool])), import_prop_types10.default.func, import_prop_types10.default.object]),
  tabIndex: import_prop_types10.default.number,
  variant: import_prop_types10.default.oneOfType([import_prop_types10.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types10.default.string])
} : void 0;
var Button_default = Button;

// node_modules/@mui/joy/Card/Card.js
init_objectWithoutPropertiesLoose();
init_extends();
var React15 = __toESM(require_react());
init_clsx_m();
var import_prop_types11 = __toESM(require_prop_types());
init_base();
init_esm();

// node_modules/@mui/joy/Card/cardClasses.js
function getCardUtilityClass(slot) {
  return generateUtilityClass2("JoyCard", slot);
}
var cardClasses = generateUtilityClasses2("JoyCard", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg", "row"]);
var cardClasses_default = cardClasses;

// node_modules/@mui/joy/styles/styleUtils.js
init_extends();
var resolveSxValue = ({
  theme,
  ownerState
}, key, defaultValue) => {
  let parsedValue;
  let sxObject = {};
  function resolveSx(sxProp) {
    if (typeof sxProp === "function") {
      const result = sxProp(theme);
      resolveSx(result);
    } else if (Array.isArray(sxProp)) {
      sxProp.forEach((sxItem) => {
        if (typeof sxItem !== "boolean") {
          resolveSx(sxItem);
        }
      });
    } else if (typeof sxProp === "object") {
      sxObject = _extends({}, sxObject, sxProp);
    }
  }
  if (ownerState.sx) {
    resolveSx(ownerState.sx);
    const value = sxObject[key];
    if (typeof value === "string" || typeof value === "number") {
      if (key === "borderRadius") {
        var _theme$vars;
        if (typeof value === "number") {
          return `${value}px`;
        }
        parsedValue = ((_theme$vars = theme.vars) == null ? void 0 : _theme$vars.radius[value]) || value;
      }
    }
  }
  return parsedValue || defaultValue;
};

// node_modules/@mui/joy/Card/CardContext.js
var React14 = __toESM(require_react());
var CardRowContext = React14.createContext(false);

// node_modules/@mui/joy/Card/Card.js
var import_jsx_runtime19 = __toESM(require_jsx_runtime());
var _excluded13 = ["className", "color", "component", "size", "variant", "children", "row"];
var useUtilityClasses10 = (ownerState) => {
  const {
    size,
    variant,
    color,
    row
  } = ownerState;
  const slots = {
    root: ["root", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`, row && "row"]
  };
  return composeClasses(slots, getCardUtilityClass, {});
};
var CardRoot = styled_default("div", {
  name: "JoyCard",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  return [_extends({
    "--Card-childRadius": "max((var(--Card-radius) - var(--variant-borderWidth)) - var(--Card-padding), min(var(--Card-padding) / 2, (var(--Card-radius) - var(--variant-borderWidth)) / 2))",
    "--AspectRatio-radius": "var(--Card-childRadius)",
    "--internal-action-margin": "calc(-1 * var(--variant-borderWidth))",
    "--internal-action-radius": resolveSxValue({
      theme,
      ownerState
    }, "borderRadius", "var(--Card-radius)"),
    "--CardCover-radius": "calc(var(--Card-radius) - var(--variant-borderWidth))",
    "--CardOverflow-offset": `calc(-1 * var(--Card-padding))`,
    "--CardOverflow-radius": "calc(var(--Card-radius) - var(--variant-borderWidth))",
    "--Divider-inset": "calc(-1 * var(--Card-padding))"
  }, ownerState.size === "sm" && {
    "--Card-radius": theme.vars.radius.sm,
    "--Card-padding": "0.5rem"
  }, ownerState.size === "md" && {
    "--Card-radius": theme.vars.radius.md,
    "--Card-padding": "1rem",
    fontSize: theme.vars.fontSize.md
  }, ownerState.size === "lg" && {
    "--Card-radius": theme.vars.radius.lg,
    "--Card-padding": "1.5rem"
  }, {
    padding: "var(--Card-padding)",
    borderRadius: "var(--Card-radius)",
    boxShadow: theme.vars.shadow.sm,
    backgroundColor: theme.vars.palette.background.surface,
    fontFamily: theme.vars.fontFamily.body,
    transition: "box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    position: "relative",
    display: "flex",
    flexDirection: ownerState.row ? "row" : "column"
  }), (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]];
});
var Card = React15.forwardRef(function Card2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyCard"
  });
  const {
    className,
    color = "neutral",
    component = "div",
    size = "md",
    variant = "plain",
    children,
    row = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded13);
  const ownerState = _extends({}, props, {
    color,
    component,
    row,
    size,
    variant
  });
  const classes = useUtilityClasses10(ownerState);
  return (0, import_jsx_runtime19.jsx)(CardRowContext.Provider, {
    value: row,
    children: (0, import_jsx_runtime19.jsx)(CardRoot, _extends({
      as: component,
      ownerState,
      className: clsx_m_default(classes.root, className),
      ref
    }, other, {
      children: React15.Children.map(children, (child, index) => {
        if (!React15.isValidElement(child)) {
          return child;
        }
        const extraProps = {};
        if (isMuiElement(child, ["Divider"])) {
          extraProps.inset = "inset" in child.props ? child.props.inset : "context";
          const orientation = row ? "vertical" : "horizontal";
          extraProps.orientation = "orientation" in child.props ? child.props.orientation : orientation;
        }
        if (index === 0) {
          extraProps["data-first-child"] = "";
        }
        if (index === React15.Children.count(children) - 1) {
          extraProps["data-last-child"] = "";
        }
        return React15.cloneElement(child, extraProps);
      })
    }))
  });
});
true ? Card.propTypes = {
  children: import_prop_types11.default.node,
  className: import_prop_types11.default.string,
  color: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types11.default.string]),
  component: import_prop_types11.default.elementType,
  row: import_prop_types11.default.bool,
  size: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(["lg", "md", "sm"]), import_prop_types11.default.string]),
  sx: import_prop_types11.default.oneOfType([import_prop_types11.default.arrayOf(import_prop_types11.default.oneOfType([import_prop_types11.default.func, import_prop_types11.default.object, import_prop_types11.default.bool])), import_prop_types11.default.func, import_prop_types11.default.object]),
  variant: import_prop_types11.default.oneOfType([import_prop_types11.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types11.default.string])
} : void 0;
var Card_default = Card;

// node_modules/@mui/joy/CardContent/CardContent.js
init_extends();
init_objectWithoutPropertiesLoose();
var React16 = __toESM(require_react());
init_clsx_m();
var import_prop_types12 = __toESM(require_prop_types());
init_base();

// node_modules/@mui/joy/CardContent/cardContentClasses.js
function getCardContentUtilityClass(slot) {
  return generateUtilityClass2("JoyCardContent", slot);
}
var cardClasses2 = generateUtilityClasses2("JoyCardContent", ["root"]);
var cardContentClasses_default = cardClasses2;

// node_modules/@mui/joy/CardContent/CardContent.js
var import_jsx_runtime20 = __toESM(require_jsx_runtime());
var _excluded14 = ["className", "component", "children"];
var useUtilityClasses11 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getCardContentUtilityClass, {});
};
var CardContentRoot = styled_default("div", {
  name: "JoyCardContent",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})({
  display: "flex",
  flexDirection: "column",
  flexGrow: 1,
  zIndex: 1
});
var CardContent = React16.forwardRef(function CardContent2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyCardContent"
  });
  const {
    className,
    component = "div",
    children
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded14);
  const ownerState = _extends({}, props, {
    component
  });
  const classes = useUtilityClasses11();
  return (0, import_jsx_runtime20.jsx)(CardContentRoot, _extends({
    as: component,
    ownerState,
    className: clsx_m_default(classes.root, className),
    ref
  }, other, {
    children
  }));
});
true ? CardContent.propTypes = {
  children: import_prop_types12.default.node,
  className: import_prop_types12.default.string,
  component: import_prop_types12.default.elementType,
  sx: import_prop_types12.default.oneOfType([import_prop_types12.default.arrayOf(import_prop_types12.default.oneOfType([import_prop_types12.default.func, import_prop_types12.default.object, import_prop_types12.default.bool])), import_prop_types12.default.func, import_prop_types12.default.object])
} : void 0;
var CardContent_default = CardContent;

// node_modules/@mui/joy/CardCover/CardCover.js
init_extends();
init_objectWithoutPropertiesLoose();
var React17 = __toESM(require_react());
init_clsx_m();
var import_prop_types13 = __toESM(require_prop_types());
init_base();

// node_modules/@mui/joy/CardCover/cardCoverClasses.js
function getCardCoverUtilityClass(slot) {
  return generateUtilityClass2("JoyCardCover", slot);
}
var cardCoverClasses = generateUtilityClasses2("JoyCardCover", ["root"]);
var cardCoverClasses_default = cardCoverClasses;

// node_modules/@mui/joy/CardCover/CardCover.js
var import_jsx_runtime21 = __toESM(require_jsx_runtime());
var _excluded15 = ["className", "component", "children"];
var useUtilityClasses12 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getCardCoverUtilityClass, {});
};
var CardCoverRoot = styled_default("div", {
  name: "JoyCardCover",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})({
  position: "absolute",
  zIndex: 0,
  top: 0,
  left: 0,
  width: "100%",
  height: "100%",
  borderRadius: "var(--CardCover-radius)",
  "& [data-first-child]": {
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    width: "100%",
    height: "100%",
    objectFit: "cover",
    boxSizing: "border-box",
    borderRadius: "var(--CardCover-radius)",
    margin: 0,
    padding: 0,
    "& > img": {
      width: "100%",
      height: "100%",
      objectFit: "cover"
    }
  }
});
var CardCover = React17.forwardRef(function CardCover2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyCardCover"
  });
  const {
    className,
    component = "div",
    children
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded15);
  const ownerState = _extends({}, props, {
    component
  });
  const classes = useUtilityClasses12();
  return (0, import_jsx_runtime21.jsx)(CardCoverRoot, _extends({
    as: component,
    ownerState,
    className: clsx_m_default(classes.root, className),
    ref
  }, other, {
    children: React17.Children.map(children, (child, index) => index === 0 && React17.isValidElement(child) ? React17.cloneElement(child, {
      "data-first-child": ""
    }) : child)
  }));
});
true ? CardCover.propTypes = {
  children: import_prop_types13.default.node,
  className: import_prop_types13.default.string,
  component: import_prop_types13.default.elementType,
  sx: import_prop_types13.default.oneOfType([import_prop_types13.default.arrayOf(import_prop_types13.default.oneOfType([import_prop_types13.default.func, import_prop_types13.default.object, import_prop_types13.default.bool])), import_prop_types13.default.func, import_prop_types13.default.object])
} : void 0;
var CardCover_default = CardCover;

// node_modules/@mui/joy/CardOverflow/CardOverflow.js
init_objectWithoutPropertiesLoose();
init_extends();
var React18 = __toESM(require_react());
init_clsx_m();
var import_prop_types14 = __toESM(require_prop_types());
init_base();
init_esm();

// node_modules/@mui/joy/CardOverflow/cardOverflowClasses.js
function getCardOverflowUtilityClass(slot) {
  return generateUtilityClass2("JoyCardOverflow", slot);
}
var aspectRatioClasses2 = generateUtilityClasses2("JoyCardOverflow", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var cardOverflowClasses_default = aspectRatioClasses2;

// node_modules/@mui/joy/CardOverflow/CardOverflow.js
var import_jsx_runtime22 = __toESM(require_jsx_runtime());
var _excluded16 = ["className", "component", "children", "color", "variant"];
var useUtilityClasses13 = (ownerState) => {
  const {
    variant,
    color
  } = ownerState;
  const slots = {
    root: ["root", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]
  };
  return composeClasses(slots, getCardOverflowUtilityClass, {});
};
var CardOverflowRoot = styled_default("div", {
  name: "JoyCardOverflow",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  const childRadius = "calc(var(--CardOverflow-radius) - var(--variant-borderWidth))";
  return [ownerState.row ? _extends({
    "--AspectRatio-margin": "calc(-1 * var(--Card-padding)) 0px",
    marginTop: "var(--CardOverflow-offset)",
    marginBottom: "var(--CardOverflow-offset)",
    padding: "var(--Card-padding) 0px",
    borderRadius: "var(--CardOverflow-radius)",
    position: "relative"
  }, ownerState["data-first-child"] !== void 0 && {
    "--AspectRatio-radius": `${childRadius} 0 0 ${childRadius}`,
    borderTopRightRadius: 0,
    borderBottomRightRadius: 0,
    marginLeft: "var(--CardOverflow-offset)"
  }, ownerState["data-last-child"] !== void 0 && {
    "--AspectRatio-radius": `0 ${childRadius} ${childRadius} 0`,
    borderTopLeftRadius: 0,
    borderBottomLeftRadius: 0,
    marginRight: "var(--CardOverflow-offset)"
  }) : _extends({
    "--AspectRatio-margin": "0px calc(-1 * var(--Card-padding))",
    marginLeft: "var(--CardOverflow-offset)",
    marginRight: "var(--CardOverflow-offset)",
    padding: "0px var(--Card-padding)",
    borderRadius: "var(--CardOverflow-radius)",
    position: "relative"
  }, ownerState["data-first-child"] !== void 0 && {
    "--AspectRatio-radius": `${childRadius} ${childRadius} 0 0`,
    borderBottomLeftRadius: 0,
    borderBottomRightRadius: 0,
    marginTop: "var(--CardOverflow-offset)"
  }, ownerState["data-last-child"] !== void 0 && {
    "--AspectRatio-radius": `0 0 ${childRadius} ${childRadius}`,
    borderTopLeftRadius: 0,
    borderTopRightRadius: 0,
    marginBottom: "var(--CardOverflow-offset)"
  }), (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]];
});
var CardOverflow = React18.forwardRef(function CardOverflow2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyCardOverflow"
  });
  const row = React18.useContext(CardRowContext);
  const {
    className,
    component = "div",
    children,
    color = "neutral",
    variant = "plain"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded16);
  const ownerState = _extends({}, props, {
    component,
    color,
    variant,
    row
  });
  const classes = useUtilityClasses13(ownerState);
  return (0, import_jsx_runtime22.jsx)(CardOverflowRoot, _extends({
    as: component,
    ownerState,
    className: clsx_m_default(classes.root, className),
    ref
  }, other, {
    children
  }));
});
true ? CardOverflow.propTypes = {
  children: import_prop_types14.default.node,
  className: import_prop_types14.default.string,
  color: import_prop_types14.default.oneOfType([import_prop_types14.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types14.default.string]),
  component: import_prop_types14.default.elementType,
  sx: import_prop_types14.default.oneOfType([import_prop_types14.default.arrayOf(import_prop_types14.default.oneOfType([import_prop_types14.default.func, import_prop_types14.default.object, import_prop_types14.default.bool])), import_prop_types14.default.func, import_prop_types14.default.object]),
  variant: import_prop_types14.default.oneOfType([import_prop_types14.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types14.default.string])
} : void 0;
var CardOverflow_default = CardOverflow;

// node_modules/@mui/joy/Checkbox/Checkbox.js
init_objectWithoutPropertiesLoose();
init_extends();
var React23 = __toESM(require_react());
var import_prop_types16 = __toESM(require_prop_types());
init_esm();
init_base();
init_utils();
init_SwitchUnstyled();

// node_modules/@mui/joy/Checkbox/checkboxClasses.js
function getCheckboxUtilityClass(slot) {
  return generateUtilityClass2("JoyCheckbox", slot);
}
var checkboxClasses = generateUtilityClasses2("JoyCheckbox", ["root", "checkbox", "action", "input", "label", "checked", "disabled", "focusVisible", "indeterminate", "colorPrimary", "colorDanger", "colorInfo", "colorNeutral", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantOutlined", "variantSoft", "variantSolid"]);
var checkboxClasses_default = checkboxClasses;

// node_modules/@mui/joy/internal/svg-icons/Check.js
var React19 = __toESM(require_react());
var import_jsx_runtime23 = __toESM(require_jsx_runtime());
var Check_default = createSvgIcon((0, import_jsx_runtime23.jsx)("path", {
  d: "M9 16.17 5.53 12.7a.9959.9959 0 0 0-1.41 0c-.39.39-.39 1.02 0 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71c.39-.39.39-1.02 0-1.41a.9959.9959 0 0 0-1.41 0L9 16.17z"
}), "Check");

// node_modules/@mui/joy/internal/svg-icons/HorizontalRule.js
var React20 = __toESM(require_react());
var import_jsx_runtime24 = __toESM(require_jsx_runtime());
var HorizontalRule_default = createSvgIcon((0, import_jsx_runtime24.jsx)("path", {
  d: "M19 13H5c-.55 0-1-.45-1-1s.45-1 1-1h14c.55 0 1 .45 1 1s-.45 1-1 1z"
}), "HorizontalRule");

// node_modules/@mui/joy/Typography/Typography.js
init_objectWithoutPropertiesLoose();
init_extends();
var React21 = __toESM(require_react());
var import_prop_types15 = __toESM(require_prop_types());
init_esm();
init_esm2();
init_composeClasses();
init_utils();

// node_modules/@mui/joy/Typography/typographyClasses.js
function getTypographyUtilityClass(slot) {
  return generateUtilityClass2("JoyTypography", slot);
}
var typographyClasses = generateUtilityClasses2("JoyTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "body1", "body2", "body3", "noWrap", "gutterBottom", "startDecorator", "endDecorator", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var typographyClasses_default = typographyClasses;

// node_modules/@mui/joy/Typography/Typography.js
var import_jsx_runtime25 = __toESM(require_jsx_runtime());
var import_jsx_runtime26 = __toESM(require_jsx_runtime());
var _excluded17 = ["color", "textColor"];
var _excluded24 = ["component", "componentsProps", "gutterBottom", "noWrap", "level", "levelMapping", "children", "endDecorator", "startDecorator", "variant"];
var TypographyContext = React21.createContext(false);
var useUtilityClasses14 = (ownerState) => {
  const {
    gutterBottom,
    noWrap,
    level,
    color,
    variant
  } = ownerState;
  const slots = {
    root: ["root", level, gutterBottom && "gutterBottom", noWrap && "noWrap", color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  return composeClasses(slots, getTypographyUtilityClass, {});
};
var StartDecorator = styled_default("span", {
  name: "JoyTypography",
  slot: "StartDecorator",
  overridesResolver: (props, styles) => styles.startDecorator
})(({
  ownerState
}) => {
  var _ownerState$sx;
  return _extends({
    display: "inline-flex",
    marginInlineEnd: "clamp(4px, var(--Typography-gap, 0.25em), 0.5rem)"
  }, ((_ownerState$sx = ownerState.sx) == null ? void 0 : _ownerState$sx.alignItems) === "flex-start" && {
    marginTop: "2px"
  });
});
var EndDecorator = styled_default("span", {
  name: "JoyTypography",
  slot: "endDecorator",
  overridesResolver: (props, styles) => styles.endDecorator
})(({
  ownerState
}) => {
  var _ownerState$sx2;
  return _extends({
    display: "inline-flex",
    marginInlineStart: "clamp(4px, var(--Typography-gap, 0.25em), 0.5rem)"
  }, ((_ownerState$sx2 = ownerState.sx) == null ? void 0 : _ownerState$sx2.alignItems) === "flex-start" && {
    marginTop: "2px"
  });
});
var TypographyRoot = styled_default("span", {
  name: "JoyTypography",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants$owner;
  return _extends({
    "--Icon-fontSize": "1.25em",
    margin: 0
  }, ownerState.nesting ? {
    display: "inline"
  } : {
    fontFamily: theme.vars.fontFamily.body,
    display: "block"
  }, (ownerState.startDecorator || ownerState.endDecorator) && _extends({
    display: "flex",
    alignItems: "center"
  }, ownerState.nesting && _extends({
    display: "inline-flex"
  }, ownerState.startDecorator && {
    verticalAlign: "bottom"
  })), ownerState.level && ownerState.level !== "inherit" && theme.typography[ownerState.level], ownerState.noWrap && {
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap"
  }, ownerState.gutterBottom && {
    marginBottom: "0.35em"
  }, ownerState.variant && _extends({
    borderRadius: theme.vars.radius.xs,
    paddingInline: "0.25em"
  }, !ownerState.nesting && {
    marginInline: "-0.25em"
  }, (_theme$variants$owner = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants$owner[ownerState.color]));
});
var defaultVariantMapping = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  display1: "h1",
  display2: "h2",
  body1: "p",
  body2: "p",
  body3: "span",
  body4: "span",
  body5: "span",
  inherit: "p"
};
var Typography = React21.forwardRef(function Typography2(inProps, ref) {
  const _useThemeProps = useThemeProps2({
    props: inProps,
    name: "JoyTypography"
  }), {
    color: colorThemeProp,
    textColor
  } = _useThemeProps, themeProps = _objectWithoutPropertiesLoose(_useThemeProps, _excluded17);
  const nesting = React21.useContext(TypographyContext);
  const props = extendSxProp(_extends({}, themeProps, {
    color: textColor
  }));
  const {
    component: componentProp,
    componentsProps = {},
    gutterBottom = false,
    noWrap = false,
    level: levelProp = "body1",
    levelMapping = {},
    children,
    endDecorator,
    startDecorator,
    variant = colorThemeProp ? "plain" : void 0
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded24);
  const color = colorThemeProp || (variant ? "neutral" : void 0);
  const level = nesting ? inProps.level || "inherit" : levelProp;
  const component = componentProp || (nesting ? "span" : levelMapping[level] || defaultVariantMapping[level] || "span");
  const ownerState = _extends({}, props, {
    level,
    component,
    color,
    gutterBottom,
    noWrap,
    nesting,
    variant
  });
  const classes = useUtilityClasses14(ownerState);
  const rootProps = useSlotProps({
    elementType: TypographyRoot,
    externalSlotProps: componentsProps.root,
    ownerState,
    additionalProps: {
      ref,
      as: component
    },
    externalForwardedProps: other,
    className: classes.root
  });
  const startDecoratorProps = useSlotProps({
    elementType: StartDecorator,
    externalSlotProps: componentsProps.startDecorator,
    ownerState,
    className: classes.startDecorator
  });
  const endDecoratorProps = useSlotProps({
    elementType: EndDecorator,
    externalSlotProps: componentsProps.endDecorator,
    ownerState,
    className: classes.endDecorator
  });
  return (0, import_jsx_runtime25.jsx)(TypographyContext.Provider, {
    value: true,
    children: (0, import_jsx_runtime26.jsxs)(TypographyRoot, _extends({}, rootProps, {
      children: [startDecorator && (0, import_jsx_runtime25.jsx)(StartDecorator, _extends({}, startDecoratorProps, {
        children: startDecorator
      })), children, endDecorator && (0, import_jsx_runtime25.jsx)(EndDecorator, _extends({}, endDecoratorProps, {
        children: endDecorator
      }))]
    }))
  });
});
true ? Typography.propTypes = {
  children: import_prop_types15.default.node,
  color: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types15.default.string]),
  component: import_prop_types15.default.elementType,
  componentsProps: import_prop_types15.default.shape({
    endDecorator: import_prop_types15.default.oneOfType([import_prop_types15.default.func, import_prop_types15.default.object]),
    root: import_prop_types15.default.oneOfType([import_prop_types15.default.func, import_prop_types15.default.object]),
    startDecorator: import_prop_types15.default.oneOfType([import_prop_types15.default.func, import_prop_types15.default.object])
  }),
  endDecorator: import_prop_types15.default.node,
  gutterBottom: import_prop_types15.default.bool,
  level: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["body1", "body2", "body3", "h1", "h2", "h3", "h4", "h5", "h6", "inherit"]), import_prop_types15.default.string]),
  levelMapping: import_prop_types15.default.object,
  noWrap: import_prop_types15.default.bool,
  startDecorator: import_prop_types15.default.node,
  sx: import_prop_types15.default.oneOfType([import_prop_types15.default.arrayOf(import_prop_types15.default.oneOfType([import_prop_types15.default.func, import_prop_types15.default.object, import_prop_types15.default.bool])), import_prop_types15.default.func, import_prop_types15.default.object]),
  textColor: import_prop_types15.default.any,
  variant: import_prop_types15.default.oneOfType([import_prop_types15.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types15.default.string])
} : void 0;
var Typography_default = Typography;

// node_modules/@mui/joy/FormControl/FormControlContext.js
var React22 = __toESM(require_react());
var FormControlContext = React22.createContext(void 0);
var FormControlContext_default = FormControlContext;

// node_modules/@mui/joy/Checkbox/Checkbox.js
var import_jsx_runtime27 = __toESM(require_jsx_runtime());
var import_jsx_runtime28 = __toESM(require_jsx_runtime());
var _excluded18 = ["checked", "uncheckedIcon", "checkedIcon", "label", "component", "componentsProps", "defaultChecked", "disabled", "disableIcon", "overlay", "id", "indeterminate", "indeterminateIcon", "name", "onBlur", "onChange", "onFocus", "onFocusVisible", "readOnly", "required", "value", "color", "variant", "size"];
var useUtilityClasses15 = (ownerState) => {
  const {
    checked,
    disabled,
    disableIcon,
    focusVisible,
    color,
    variant,
    size
  } = ownerState;
  const slots = {
    root: ["root", checked && "checked", disabled && "disabled", focusVisible && "focusVisible", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],
    checkbox: ["checkbox", checked && "checked", disabled && "disabled"],
    action: [
      "action",
      checked && "checked",
      disableIcon && disabled && "disabled",
      focusVisible && "focusVisible"
    ],
    input: ["input"],
    label: ["label"]
  };
  return composeClasses(slots, getCheckboxUtilityClass, {});
};
var CheckboxRoot = styled_default("span", {
  name: "JoyCheckbox",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  ownerState,
  theme
}) => {
  var _theme$vars$palette, _theme$vars$palette2, _theme$vars$palette3;
  return _extends({
    "--Icon-fontSize": "var(--Checkbox-size)"
  }, ownerState.size === "sm" && {
    "--Checkbox-size": "1rem",
    "--Checkbox-gap": "0.375rem",
    fontSize: theme.vars.fontSize.sm
  }, ownerState.size === "md" && {
    "--Checkbox-size": "1.25rem",
    "--Checkbox-gap": "0.5rem",
    fontSize: theme.vars.fontSize.md
  }, ownerState.size === "lg" && {
    "--Checkbox-size": "1.5rem",
    "--Checkbox-gap": "0.625rem",
    fontSize: theme.vars.fontSize.lg
  }, {
    position: ownerState.overlay ? "initial" : "relative",
    display: "inline-flex",
    fontFamily: theme.vars.fontFamily.body,
    lineHeight: "var(--Checkbox-size)",
    color: theme.vars.palette.text.primary,
    [`&.${checkboxClasses_default.disabled}`]: {
      color: (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette.plainDisabledColor
    }
  }, ownerState.disableIcon && {
    color: (_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2[`${ownerState.variant}Color`],
    [`&.${checkboxClasses_default.disabled}`]: {
      color: (_theme$vars$palette3 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette3[`${ownerState.variant}DisabledColor`]
    }
  });
});
var CheckboxCheckbox = styled_default("span", {
  name: "JoyCheckbox",
  slot: "Checkbox",
  overridesResolver: (props, styles) => styles.checkbox
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;
  return [_extends({
    boxSizing: "border-box",
    borderRadius: theme.vars.radius.xs,
    width: "var(--Checkbox-size)",
    height: "var(--Checkbox-size)",
    display: "inline-flex",
    justifyContent: "center",
    alignItems: "center",
    flexShrink: 0,
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"
  }, ownerState.disableIcon && {
    display: "contents"
  }), ...!ownerState.disableIcon ? [(_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {
    "&:hover": (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color]
  }, {
    "&:active": (_theme$variants3 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants3[ownerState.color]
  }, {
    [`&.${checkboxClasses_default.disabled}`]: (_theme$variants4 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants4[ownerState.color]
  }] : []];
});
var CheckboxAction = styled_default("span", {
  name: "JoyCheckbox",
  slot: "Action",
  overridesResolver: (props, styles) => styles.action
})(({
  theme,
  ownerState
}) => {
  var _theme$variants5, _theme$variants6, _theme$variants7, _theme$variants8;
  return [{
    borderRadius: `var(--Checkbox-action-radius, ${ownerState.overlay ? "var(--internal-action-radius, inherit)" : "inherit"})`,
    position: "absolute",
    top: 0,
    left: 0,
    bottom: 0,
    right: 0,
    zIndex: 1,
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    [theme.focus.selector]: theme.focus.default
  }, ...ownerState.disableIcon ? [(_theme$variants5 = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants5[ownerState.color], {
    "&:hover": (_theme$variants6 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants6[ownerState.color]
  }, {
    "&:active": (_theme$variants7 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants7[ownerState.color]
  }, {
    [`&.${checkboxClasses_default.disabled}`]: (_theme$variants8 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants8[ownerState.color]
  }] : []];
});
var CheckboxInput = styled_default("input", {
  name: "JoyCheckbox",
  slot: "Input",
  overridesResolver: (props, styles) => styles.input
})(() => ({
  margin: 0,
  opacity: 0,
  position: "absolute",
  width: "100%",
  height: "100%",
  cursor: "pointer"
}));
var CheckboxLabel = styled_default("label", {
  name: "JoyCheckbox",
  slot: "Label",
  overridesResolver: (props, styles) => styles.label
})(({
  ownerState
}) => _extends({
  flex: 1,
  minWidth: 0
}, ownerState.disableIcon ? {
  zIndex: 1,
  pointerEvents: "none"
} : {
  marginInlineStart: "var(--Checkbox-gap)"
}));
var defaultCheckedIcon = (0, import_jsx_runtime27.jsx)(Check_default, {});
var defaultIndeterminateIcon = (0, import_jsx_runtime27.jsx)(HorizontalRule_default, {});
var Checkbox = React23.forwardRef(function Checkbox2(inProps, ref) {
  var _ref, _inProps$disabled, _ref2, _inProps$size, _ref3, _inProps$color;
  const props = useThemeProps2({
    props: inProps,
    name: "JoyCheckbox"
  });
  const {
    checked: checkedProp,
    uncheckedIcon,
    checkedIcon = defaultCheckedIcon,
    label,
    component,
    componentsProps = {},
    defaultChecked,
    disabled: disabledExternalProp,
    disableIcon = false,
    overlay,
    id: idOverride,
    indeterminate = false,
    indeterminateIcon = defaultIndeterminateIcon,
    name,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible,
    readOnly,
    required,
    value,
    color: colorProp,
    variant,
    size: sizeProp = "md"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded18);
  const formControl = React23.useContext(FormControlContext_default);
  const disabledProp = (_ref = (_inProps$disabled = inProps.disabled) != null ? _inProps$disabled : formControl == null ? void 0 : formControl.disabled) != null ? _ref : disabledExternalProp;
  const size = (_ref2 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref2 : sizeProp;
  const color = formControl != null && formControl.error ? "danger" : (_ref3 = (_inProps$color = inProps.color) != null ? _inProps$color : formControl == null ? void 0 : formControl.color) != null ? _ref3 : colorProp;
  if (true) {
    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;
    React23.useEffect(() => {
      if (registerEffect) {
        return registerEffect();
      }
      return void 0;
    }, [registerEffect]);
  }
  const id = useId(idOverride != null ? idOverride : formControl == null ? void 0 : formControl.htmlFor);
  const useCheckboxProps = {
    checked: checkedProp,
    defaultChecked,
    disabled: disabledProp,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible
  };
  const {
    getInputProps,
    checked,
    disabled,
    focusVisible
  } = useSwitch(useCheckboxProps);
  const isCheckboxActive = checked || indeterminate;
  const activeColor = color || "primary";
  const inactiveColor = color || "neutral";
  const activeVariant = variant || "solid";
  const inactiveVariant = variant || "outlined";
  const ownerState = _extends({}, props, {
    checked,
    disabled,
    disableIcon,
    overlay,
    focusVisible,
    color: isCheckboxActive ? activeColor : inactiveColor,
    variant: isCheckboxActive ? activeVariant : inactiveVariant,
    size
  });
  const classes = useUtilityClasses15(ownerState);
  const rootProps = useSlotProps({
    elementType: CheckboxRoot,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    ownerState,
    additionalProps: {
      ref,
      as: component
    },
    className: classes.root
  });
  const checkboxProps = useSlotProps({
    elementType: CheckboxCheckbox,
    externalSlotProps: componentsProps.checkbox,
    ownerState,
    className: classes.checkbox
  });
  const actionProps = useSlotProps({
    elementType: CheckboxAction,
    externalSlotProps: componentsProps.action,
    ownerState,
    className: classes.action
  });
  const inputProps = useSlotProps({
    elementType: CheckboxInput,
    getSlotProps: getInputProps,
    externalSlotProps: componentsProps.input,
    ownerState,
    additionalProps: _extends({
      id,
      name,
      value,
      readOnly,
      required,
      "aria-describedby": formControl == null ? void 0 : formControl["aria-describedby"]
    }, indeterminate && {
      "aria-checked": "mixed"
    }),
    className: classes.input
  });
  const labelProps = useSlotProps({
    elementType: CheckboxLabel,
    externalSlotProps: componentsProps.label,
    ownerState,
    additionalProps: {
      htmlFor: id
    },
    className: classes.label
  });
  return (0, import_jsx_runtime28.jsxs)(CheckboxRoot, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime28.jsxs)(CheckboxCheckbox, _extends({}, checkboxProps, {
      children: [(0, import_jsx_runtime27.jsx)(CheckboxAction, _extends({}, actionProps, {
        children: (0, import_jsx_runtime27.jsx)(CheckboxInput, _extends({}, inputProps))
      })), indeterminate && !checked && !disableIcon && indeterminateIcon, checked && !disableIcon && checkedIcon, !checked && !disableIcon && !indeterminate && uncheckedIcon]
    })), label && (0, import_jsx_runtime27.jsx)(TypographyContext.Provider, {
      value: true,
      children: (0, import_jsx_runtime27.jsx)(CheckboxLabel, _extends({}, labelProps, {
        children: label
      }))
    })]
  }));
});
true ? Checkbox.propTypes = {
  checked: import_prop_types16.default.bool,
  checkedIcon: import_prop_types16.default.node,
  children: import_prop_types16.default.node,
  className: import_prop_types16.default.string,
  color: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["danger", "info", "primary", "success", "warning"]), import_prop_types16.default.string]),
  component: import_prop_types16.default.elementType,
  componentsProps: import_prop_types16.default.shape({
    action: import_prop_types16.default.oneOfType([import_prop_types16.default.func, import_prop_types16.default.object]),
    checkbox: import_prop_types16.default.oneOfType([import_prop_types16.default.func, import_prop_types16.default.object]),
    input: import_prop_types16.default.oneOfType([import_prop_types16.default.func, import_prop_types16.default.object]),
    label: import_prop_types16.default.oneOfType([import_prop_types16.default.func, import_prop_types16.default.object]),
    root: import_prop_types16.default.oneOfType([import_prop_types16.default.func, import_prop_types16.default.object])
  }),
  defaultChecked: import_prop_types16.default.bool,
  disabled: import_prop_types16.default.bool,
  disableIcon: import_prop_types16.default.bool,
  id: import_prop_types16.default.string,
  indeterminate: import_prop_types16.default.bool,
  indeterminateIcon: import_prop_types16.default.node,
  label: import_prop_types16.default.node,
  name: import_prop_types16.default.string,
  onBlur: import_prop_types16.default.func,
  onChange: import_prop_types16.default.func,
  onFocus: import_prop_types16.default.func,
  onFocusVisible: import_prop_types16.default.func,
  overlay: import_prop_types16.default.bool,
  readOnly: import_prop_types16.default.bool,
  required: import_prop_types16.default.bool,
  size: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["sm", "md", "lg"]), import_prop_types16.default.string]),
  sx: import_prop_types16.default.oneOfType([import_prop_types16.default.arrayOf(import_prop_types16.default.oneOfType([import_prop_types16.default.func, import_prop_types16.default.object, import_prop_types16.default.bool])), import_prop_types16.default.func, import_prop_types16.default.object]),
  uncheckedIcon: import_prop_types16.default.node,
  value: import_prop_types16.default.oneOfType([import_prop_types16.default.arrayOf(import_prop_types16.default.string), import_prop_types16.default.number, import_prop_types16.default.string]),
  variant: import_prop_types16.default.oneOfType([import_prop_types16.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types16.default.string])
} : void 0;
var Checkbox_default = Checkbox;

// node_modules/@mui/joy/Chip/Chip.js
init_objectWithoutPropertiesLoose();
init_extends();
var React25 = __toESM(require_react());
init_clsx_m();
var import_prop_types17 = __toESM(require_prop_types());
init_base();
init_utils();
init_esm();

// node_modules/@mui/joy/Chip/chipClasses.js
function getChipUtilityClass(slot) {
  return generateUtilityClass2("JoyChip", slot);
}
var chipClasses = generateUtilityClasses2("JoyChip", ["root", "clickable", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "disabled", "endDecorator", "focusVisible", "label", "labelSm", "labelMd", "labelLg", "sizeSm", "sizeMd", "sizeLg", "startDecorator", "variantPlain", "variantSolid", "variantSoft", "variantOutlined"]);
var chipClasses_default = chipClasses;

// node_modules/@mui/joy/Chip/ChipContext.js
var React24 = __toESM(require_react());
var ChipColorContext = React24.createContext({
  disabled: void 0,
  variant: void 0,
  color: void 0
});
var ChipContext_default = ChipColorContext;

// node_modules/@mui/joy/Chip/Chip.js
var import_jsx_runtime29 = __toESM(require_jsx_runtime());
var import_jsx_runtime30 = __toESM(require_jsx_runtime());
var _excluded19 = ["children", "className", "componentsProps", "color", "component", "onClick", "disabled", "size", "variant", "startDecorator", "endDecorator"];
var useUtilityClasses16 = (ownerState) => {
  const {
    disabled,
    size,
    color,
    clickable,
    variant,
    focusVisible
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", color && `color${capitalize(color)}`, size && `size${capitalize(size)}`, variant && `variant${capitalize(variant)}`, clickable && "clickable"],
    action: ["action", disabled && "disabled", focusVisible && "focusVisible"],
    label: ["label", size && `label${capitalize(size)}`],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  return composeClasses(slots, getChipUtilityClass, {});
};
var ChipRoot = styled_default("div", {
  name: "JoyChip",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette, _theme$variants, _theme$variants2, _theme$vars$palette2;
  return [_extends({
    "--Chip-radius": "1.5rem",
    "--Chip-decorator-childOffset": "min(calc(var(--Chip-paddingInline) - (var(--Chip-minHeight) - 2 * var(--variant-borderWidth) - var(--Chip-decorator-childHeight)) / 2), var(--Chip-paddingInline))",
    "--internal-paddingBlock": "max((var(--Chip-minHeight) - 2 * var(--variant-borderWidth) - var(--Chip-decorator-childHeight)) / 2, 0px)",
    "--Chip-decorator-childRadius": "max(var(--Chip-radius) - var(--internal-paddingBlock), min(var(--internal-paddingBlock) / 2, var(--Chip-radius) / 2))",
    "--Chip-delete-radius": "var(--Chip-decorator-childRadius)",
    "--Chip-delete-size": "var(--Chip-decorator-childHeight)",
    "--Avatar-radius": "var(--Chip-decorator-childRadius)",
    "--Avatar-size": "var(--Chip-decorator-childHeight)",
    "--Icon-margin": "initial",
    "--internal-action-radius": "var(--Chip-radius)"
  }, ownerState.size === "sm" && {
    "--Chip-gap": "0.25rem",
    "--Chip-paddingInline": "0.5rem",
    "--Chip-decorator-childHeight": "calc(min(1.125rem, var(--Chip-minHeight)) - 2 * var(--variant-borderWidth))",
    "--Icon-fontSize": "calc(var(--Chip-minHeight, 1.5rem) / 1.714)",
    "--Chip-minHeight": "1.5rem",
    fontSize: theme.vars.fontSize.xs
  }, ownerState.size === "md" && {
    "--Chip-gap": "0.375rem",
    "--Chip-paddingInline": "0.75rem",
    "--Chip-decorator-childHeight": "min(1.375rem, var(--Chip-minHeight))",
    "--Icon-fontSize": "calc(var(--Chip-minHeight, 2rem) / 1.778)",
    "--Chip-minHeight": "2rem",
    fontSize: theme.vars.fontSize.sm
  }, ownerState.size === "lg" && {
    "--Chip-gap": "0.5rem",
    "--Chip-paddingInline": "1rem",
    "--Chip-decorator-childHeight": "min(1.75rem, var(--Chip-minHeight))",
    "--Icon-fontSize": "calc(var(--Chip-minHeight, 2.5rem) / 2)",
    "--Chip-minHeight": "2.5rem",
    fontSize: theme.vars.fontSize.md
  }, {
    minHeight: "var(--Chip-minHeight)",
    paddingInline: "var(--Chip-paddingInline)",
    borderRadius: "var(--Chip-radius)",
    position: "relative",
    fontWeight: theme.vars.fontWeight.md,
    fontFamily: theme.vars.fontFamily.body,
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    whiteSpace: "nowrap",
    transition: "background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    textDecoration: "none",
    verticalAlign: "middle",
    boxSizing: "border-box",
    [`&.${chipClasses_default.disabled}`]: {
      color: (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette[`${ownerState.variant}DisabledColor`]
    }
  }), ...!ownerState.clickable ? [(_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {
    [`&.${chipClasses_default.disabled}`]: (_theme$variants2 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants2[ownerState.color]
  }] : [{
    "--variant-borderWidth": "0px",
    color: (_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2[`${ownerState.variant}Color`]
  }]];
});
var ChipLabel = styled_default("span", {
  name: "JoyChip",
  slot: "Label",
  overridesResolver: (props, styles) => styles.label
})(({
  ownerState
}) => _extends({
  display: "inherit",
  alignItems: "center",
  order: 1,
  flexGrow: 1
}, ownerState.clickable && {
  zIndex: 1,
  pointerEvents: "none"
}));
var ChipAction = styled_default("button", {
  name: "JoyChip",
  slot: "Action",
  overridesResolver: (props, styles) => styles.action
})(({
  theme,
  ownerState
}) => {
  var _theme$variants3, _theme$variants4, _theme$variants5, _theme$variants6;
  return [{
    position: "absolute",
    zIndex: 0,
    top: 0,
    left: 0,
    bottom: 0,
    right: 0,
    border: "none",
    padding: "initial",
    margin: "initial",
    backgroundColor: "initial",
    textDecoration: "none",
    borderRadius: "inherit",
    transition: "background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    [theme.focus.selector]: theme.focus.default
  }, (_theme$variants3 = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants3[ownerState.color], {
    "&:hover": (_theme$variants4 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants4[ownerState.color]
  }, {
    "&:active": (_theme$variants5 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants5[ownerState.color]
  }, {
    [`&.${chipClasses_default.disabled}`]: (_theme$variants6 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants6[ownerState.color]
  }];
});
var ChipStartDecorator = styled_default("span", {
  name: "JoyChip",
  slot: "StartDecorator",
  overridesResolver: (props, styles) => styles.startDecorator
})({
  "--Avatar-marginInlineStart": "calc(var(--Chip-decorator-childOffset) * -1)",
  "--Chip-delete-margin": "0 0 0 calc(var(--Chip-decorator-childOffset) * -1)",
  "--Icon-margin": "0 0 0 calc(var(--Chip-paddingInline) / -4)",
  display: "inherit",
  marginInlineEnd: "var(--Chip-gap)",
  order: 0,
  zIndex: 1,
  pointerEvents: "none"
});
var ChipEndDecorator = styled_default("span", {
  name: "JoyChip",
  slot: "EndDecorator",
  overridesResolver: (props, styles) => styles.endDecorator
})({
  "--Chip-delete-margin": "0 calc(var(--Chip-decorator-childOffset) * -1) 0 0",
  "--Icon-margin": "0 calc(var(--Chip-paddingInline) / -4) 0 0",
  display: "inherit",
  marginInlineStart: "var(--Chip-gap)",
  order: 2,
  zIndex: 1,
  pointerEvents: "none"
});
var Chip = React25.forwardRef(function Chip2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyChip"
  });
  const {
    children,
    className,
    componentsProps = {},
    color = "primary",
    component,
    onClick,
    disabled = false,
    size = "md",
    variant = "solid",
    startDecorator,
    endDecorator
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded19);
  const clickable = !!onClick || !!componentsProps.action;
  const ownerState = _extends({}, props, {
    component,
    disabled,
    size,
    color,
    variant,
    clickable,
    focusVisible: false
  });
  const resolvedActionProps = typeof componentsProps.action === "function" ? componentsProps.action(ownerState) : componentsProps.action;
  const actionRef = React25.useRef(null);
  const {
    focusVisible,
    getRootProps
  } = useButton(_extends({}, resolvedActionProps, {
    disabled,
    ref: actionRef
  }));
  ownerState.focusVisible = focusVisible;
  const classes = useUtilityClasses16(ownerState);
  const labelProps = useSlotProps({
    elementType: ChipLabel,
    externalSlotProps: componentsProps.label,
    ownerState,
    className: classes.label
  });
  const id = useId(labelProps.id);
  const actionProps = useSlotProps({
    elementType: ChipAction,
    getSlotProps: getRootProps,
    externalSlotProps: componentsProps.action,
    additionalProps: {
      "aria-labelledby": id,
      as: resolvedActionProps == null ? void 0 : resolvedActionProps.component,
      onClick
    },
    ownerState,
    className: classes.action
  });
  const startDecoratorProps = useSlotProps({
    elementType: ChipStartDecorator,
    externalSlotProps: componentsProps.startDecorator,
    ownerState,
    className: classes.startDecorator
  });
  const endDecoratorProps = useSlotProps({
    elementType: ChipEndDecorator,
    externalSlotProps: componentsProps.endDecorator,
    ownerState,
    className: classes.endDecorator
  });
  const chipContextValue = React25.useMemo(() => ({
    disabled,
    variant,
    color
  }), [color, disabled, variant]);
  return (0, import_jsx_runtime29.jsx)(ChipContext_default.Provider, {
    value: chipContextValue,
    children: (0, import_jsx_runtime30.jsxs)(ChipRoot, _extends({
      as: component,
      className: clsx_m_default(classes.root, className),
      ref,
      ownerState
    }, other, {
      children: [clickable && (0, import_jsx_runtime29.jsx)(ChipAction, _extends({}, actionProps)), (0, import_jsx_runtime29.jsx)(ChipLabel, _extends({}, labelProps, {
        id,
        children
      })), startDecorator && (0, import_jsx_runtime29.jsx)(ChipStartDecorator, _extends({}, startDecoratorProps, {
        children: startDecorator
      })), endDecorator && (0, import_jsx_runtime29.jsx)(ChipEndDecorator, _extends({}, endDecoratorProps, {
        children: endDecorator
      }))]
    }))
  });
});
true ? Chip.propTypes = {
  children: import_prop_types17.default.node,
  className: import_prop_types17.default.string,
  color: import_prop_types17.default.oneOfType([import_prop_types17.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types17.default.string]),
  component: import_prop_types17.default.elementType,
  componentsProps: import_prop_types17.default.shape({
    action: import_prop_types17.default.oneOfType([import_prop_types17.default.func, import_prop_types17.default.object]),
    endDecorator: import_prop_types17.default.oneOfType([import_prop_types17.default.func, import_prop_types17.default.object]),
    label: import_prop_types17.default.oneOfType([import_prop_types17.default.func, import_prop_types17.default.object]),
    root: import_prop_types17.default.oneOfType([import_prop_types17.default.func, import_prop_types17.default.object]),
    startDecorator: import_prop_types17.default.oneOfType([import_prop_types17.default.func, import_prop_types17.default.object])
  }),
  disabled: import_prop_types17.default.bool,
  endDecorator: import_prop_types17.default.node,
  onClick: import_prop_types17.default.func,
  size: import_prop_types17.default.oneOfType([import_prop_types17.default.oneOf(["lg", "md", "sm"]), import_prop_types17.default.string]),
  startDecorator: import_prop_types17.default.node,
  sx: import_prop_types17.default.oneOfType([import_prop_types17.default.arrayOf(import_prop_types17.default.oneOfType([import_prop_types17.default.func, import_prop_types17.default.object, import_prop_types17.default.bool])), import_prop_types17.default.func, import_prop_types17.default.object]),
  variant: import_prop_types17.default.oneOfType([import_prop_types17.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types17.default.string])
} : void 0;
var Chip_default = Chip;

// node_modules/@mui/joy/ChipDelete/ChipDelete.js
init_extends();
init_objectWithoutPropertiesLoose();
var React27 = __toESM(require_react());
var import_prop_types18 = __toESM(require_prop_types());
init_esm();
init_base();
init_utils();

// node_modules/@mui/joy/internal/svg-icons/Cancel.js
var React26 = __toESM(require_react());
var import_jsx_runtime31 = __toESM(require_jsx_runtime());
var Cancel_default = createSvgIcon((0, import_jsx_runtime31.jsx)("path", {
  d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Cancel");

// node_modules/@mui/joy/ChipDelete/chipDeleteClasses.js
function getChipDeleteUtilityClass(slot) {
  return generateUtilityClass2("JoyChipDelete", slot);
}
var chipDeleteClasses = generateUtilityClasses2("JoyChipDelete", ["root", "disabled", "focusVisible", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantSolid", "variantSoft", "variantOutlined"]);
var chipDeleteClasses_default = chipDeleteClasses;

// node_modules/@mui/joy/ChipDelete/ChipDelete.js
var import_jsx_runtime32 = __toESM(require_jsx_runtime());
var _Cancel;
var _excluded20 = ["component", "children", "variant", "color", "disabled"];
var useUtilityClasses17 = (ownerState) => {
  const {
    focusVisible,
    variant,
    color,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]
  };
  return composeClasses(slots, getChipDeleteUtilityClass, {});
};
var ChipDeleteRoot = styled_default("button", {
  name: "JoyChipDelete",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;
  return [{
    "--Icon-margin": "initial",
    pointerEvents: "visible",
    width: "var(--Chip-delete-size, 2rem)",
    height: "var(--Chip-delete-size, 2rem)",
    borderRadius: "var(--Chip-delete-radius, 50%)",
    margin: "var(--Chip-delete-margin)",
    display: "inline-flex",
    justifyContent: "center",
    alignItems: "center",
    zIndex: 1,
    border: "none",
    background: "none",
    padding: "0px",
    [theme.focus.selector]: theme.focus.default
  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {
    "&:hover": (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color]
  }, {
    "&:active": (_theme$variants3 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants3[ownerState.color]
  }, {
    [`&.${chipDeleteClasses_default.disabled}`]: (_theme$variants4 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants4[ownerState.color]
  }];
});
var chipVariantMapping = {
  plain: "outlined",
  outlined: "soft",
  soft: "solid",
  solid: "solid"
};
var ChipDelete = React27.forwardRef(function ChipDelete2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyChipDelete"
  });
  const {
    component,
    children,
    variant: variantProp,
    color: colorProp,
    disabled: disabledProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded20);
  const chipContext = React27.useContext(ChipContext_default);
  const color = colorProp || chipContext.color || "primary";
  const variant = variantProp || chipVariantMapping[chipContext.variant] || "solid";
  const disabled = disabledProp != null ? disabledProp : chipContext.disabled;
  const buttonRef = React27.useRef(null);
  const handleRef = useForkRef(buttonRef, ref);
  const {
    focusVisible,
    getRootProps
  } = useButton(_extends({}, props, {
    disabled,
    ref: handleRef
  }));
  const ownerState = _extends({}, props, {
    disabled,
    variant,
    color,
    focusVisible
  });
  const classes = useUtilityClasses17(ownerState);
  const rootProps = useSlotProps({
    elementType: ChipDeleteRoot,
    getSlotProps: getRootProps,
    externalSlotProps: {},
    externalForwardedProps: other,
    ownerState,
    additionalProps: {
      as: component
    },
    className: classes.root
  });
  return (0, import_jsx_runtime32.jsx)(ChipDeleteRoot, _extends({}, rootProps, {
    children: children != null ? children : _Cancel || (_Cancel = (0, import_jsx_runtime32.jsx)(Cancel_default, {}))
  }));
});
true ? ChipDelete.propTypes = {
  children: import_prop_types18.default.node,
  color: import_prop_types18.default.oneOfType([import_prop_types18.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types18.default.string]),
  component: import_prop_types18.default.elementType,
  disabled: import_prop_types18.default.bool,
  sx: import_prop_types18.default.oneOfType([import_prop_types18.default.arrayOf(import_prop_types18.default.oneOfType([import_prop_types18.default.func, import_prop_types18.default.object, import_prop_types18.default.bool])), import_prop_types18.default.func, import_prop_types18.default.object]),
  variant: import_prop_types18.default.oneOfType([import_prop_types18.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types18.default.string])
} : void 0;
var ChipDelete_default = ChipDelete;

// node_modules/@mui/joy/Container/Container.js
init_esm2();
var import_prop_types19 = __toESM(require_prop_types());
var Container = createContainer({
  componentName: "JoyContainer",
  createStyledComponent: styled_default("div", {
    name: "JoyContainer",
    slot: "Root",
    overridesResolver: (props, styles) => styles.root
  }),
  useThemeProps: (inProps) => useThemeProps2({
    props: inProps,
    name: "JoyContainer"
  })
});
true ? Container.propTypes = {
  children: import_prop_types19.default.node,
  component: import_prop_types19.default.elementType,
  disableGutters: import_prop_types19.default.bool,
  fixed: import_prop_types19.default.bool,
  maxWidth: import_prop_types19.default.oneOfType([import_prop_types19.default.oneOf(["xs", "sm", "md", "lg", "xl", false]), import_prop_types19.default.string]),
  sx: import_prop_types19.default.oneOfType([import_prop_types19.default.arrayOf(import_prop_types19.default.oneOfType([import_prop_types19.default.func, import_prop_types19.default.object, import_prop_types19.default.bool])), import_prop_types19.default.func, import_prop_types19.default.object])
} : void 0;
var Container_default = Container;

// node_modules/@mui/joy/Container/containerClasses.js
function getContainerUtilityClass(slot) {
  return generateUtilityClass2("JoyContainer", slot);
}
var containerClasses = generateUtilityClasses2("JoyContainer", ["root", "disableGutters", "fixed", "maxWidthXs", "maxWidthSm", "maxWidthMd", "maxWidthLg", "maxWidthXl"]);
var containerClasses_default = containerClasses;

// node_modules/@mui/joy/CssBaseline/CssBaseline.js
init_extends();
var React28 = __toESM(require_react());
var import_prop_types20 = __toESM(require_prop_types());
init_esm2();
var import_jsx_runtime33 = __toESM(require_jsx_runtime());
var import_jsx_runtime34 = __toESM(require_jsx_runtime());
function CssBaseline({
  children,
  disableColorScheme = false
}) {
  return (0, import_jsx_runtime34.jsxs)(React28.Fragment, {
    children: [(0, import_jsx_runtime33.jsx)(GlobalStyles, {
      styles: (theme) => {
        const colorSchemeStyles = {};
        if (!disableColorScheme) {
          Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {
            var _scheme$palette;
            colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\s*&/, "")] = {
              colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode
            };
          });
        }
        return _extends({
          html: {
            WebkitFontSmoothing: "antialiased",
            MozOsxFontSmoothing: "grayscale",
            boxSizing: "border-box",
            WebkitTextSizeAdjust: "100%"
          },
          "*, *::before, *::after": {
            boxSizing: "inherit"
          },
          "strong, b": {
            fontWeight: "bold"
          },
          body: _extends({
            margin: 0,
            color: theme.vars.palette.text.primary
          }, theme.typography.body1, {
            backgroundColor: theme.vars.palette.background.body,
            "@media print": {
              backgroundColor: theme.vars.palette.common.white
            },
            "&::backdrop": {
              backgroundColor: theme.vars.palette.background.backdrop
            }
          })
        }, colorSchemeStyles);
      }
    }), children]
  });
}
true ? CssBaseline.propTypes = {
  children: import_prop_types20.default.node,
  disableColorScheme: import_prop_types20.default.bool
} : void 0;
var CssBaseline_default = CssBaseline;

// node_modules/@mui/joy/ScopedCssBaseline/ScopedCssBaseline.js
init_objectWithoutPropertiesLoose();
init_extends();
var React29 = __toESM(require_react());
var import_prop_types21 = __toESM(require_prop_types());
init_clsx_m();
init_base();

// node_modules/@mui/joy/ScopedCssBaseline/scopedCssBaselineClasses.js
function getScopedCssBaselineUtilityClass(slot) {
  return generateUtilityClass2("JoyScopedCssBaseline", slot);
}
var scopedCssBaselineClasses = generateUtilityClasses2("JoyScopedCssBaseline", ["root"]);
var scopedCssBaselineClasses_default = scopedCssBaselineClasses;

// node_modules/@mui/joy/ScopedCssBaseline/ScopedCssBaseline.js
var import_jsx_runtime35 = __toESM(require_jsx_runtime());
var _excluded21 = ["className", "component", "disableColorScheme"];
var useUtilityClasses18 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getScopedCssBaselineUtilityClass, {});
};
var ScopedCssBaselineRoot = styled_default("div", {
  name: "JoyScopedCssBaseline",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  const colorSchemeStyles = {};
  if (!ownerState.disableColorScheme && theme.colorSchemes) {
    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {
      var _scheme$palette;
      colorSchemeStyles[`&${theme.getColorSchemeSelector(key).replace(/\s*&/, "")}`] = {
        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode
      };
    });
  }
  return _extends({
    WebkitFontSmoothing: "antialiased",
    MozOsxFontSmoothing: "grayscale",
    boxSizing: "border-box",
    WebkitTextSizeAdjust: "100%",
    color: theme.vars.palette.text.primary
  }, theme.typography.body1, {
    backgroundColor: theme.vars.palette.background.body,
    "@media print": {
      backgroundColor: theme.vars.palette.common.white
    },
    "& *, & *::before, & *::after": {
      boxSizing: "inherit"
    },
    "& strong, & b": {
      fontWeight: "bold"
    }
  }, colorSchemeStyles);
});
var ScopedCssBaseline = React29.forwardRef(function ScopedCssBaseline2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyScopedCssBaseline"
  });
  const {
    className,
    component = "div",
    disableColorScheme = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded21);
  const ownerState = _extends({}, props, {
    component,
    disableColorScheme
  });
  const classes = useUtilityClasses18();
  return (0, import_jsx_runtime35.jsx)(ScopedCssBaselineRoot, _extends({
    as: component,
    className: clsx_m_default(classes.root, className),
    ref,
    ownerState
  }, other));
});
true ? ScopedCssBaseline.propTypes = {
  children: import_prop_types21.default.node,
  className: import_prop_types21.default.string,
  component: import_prop_types21.default.elementType,
  disableColorScheme: import_prop_types21.default.bool,
  sx: import_prop_types21.default.oneOfType([import_prop_types21.default.arrayOf(import_prop_types21.default.oneOfType([import_prop_types21.default.func, import_prop_types21.default.object, import_prop_types21.default.bool])), import_prop_types21.default.func, import_prop_types21.default.object])
} : void 0;
var ScopedCssBaseline_default = ScopedCssBaseline;

// node_modules/@mui/joy/Divider/Divider.js
init_objectWithoutPropertiesLoose();
init_extends();
var React30 = __toESM(require_react());
var import_prop_types22 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_composeClasses();

// node_modules/@mui/joy/Divider/dividerClasses.js
function getDividerUtilityClass(slot) {
  return generateUtilityClass2("JoyDivider", slot);
}
var dividerClasses = generateUtilityClasses2("JoyDivider", ["root", "vertical", "insetContext", "insetNone"]);
var dividerClasses_default = dividerClasses;

// node_modules/@mui/joy/Divider/Divider.js
var import_jsx_runtime36 = __toESM(require_jsx_runtime());
var _excluded25 = ["className", "children", "component", "inset", "orientation", "role"];
var useUtilityClasses19 = (ownerState) => {
  const slots = {
    root: ["root", ownerState.orientation === "vertical" && "vertical", ownerState.inset && `inset${capitalize(ownerState.inset)}`]
  };
  return composeClasses(slots, getDividerUtilityClass, {});
};
var DividerRoot = styled_default("hr", {
  name: "JoyDivider",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => _extends({
  "--Divider-thickness": "1px",
  "--Divider-lineColor": theme.vars.palette.divider
}, ownerState.inset === "none" && {
  "--_Divider-inset": "0px"
}, ownerState.inset === "context" && {
  "--_Divider-inset": "var(--Divider-inset, 0px)"
}, {
  margin: "initial",
  marginInline: ownerState.orientation === "vertical" ? "initial" : "var(--_Divider-inset)",
  marginBlock: ownerState.orientation === "vertical" ? "var(--_Divider-inset)" : "initial",
  position: "relative",
  alignSelf: "stretch",
  flexShrink: 0
}, ownerState.children ? {
  "--Divider-gap": theme.spacing(1),
  "--Divider-childPosition": "50%",
  display: "flex",
  flexDirection: ownerState.orientation === "vertical" ? "column" : "row",
  alignItems: "center",
  whiteSpace: "nowrap",
  textAlign: "center",
  border: 0,
  fontFamily: theme.vars.fontFamily.body,
  fontSize: theme.vars.fontSize.sm,
  "&::before, &::after": {
    position: "relative",
    inlineSize: ownerState.orientation === "vertical" ? "var(--Divider-thickness)" : "initial",
    blockSize: ownerState.orientation === "vertical" ? "initial" : "var(--Divider-thickness)",
    backgroundColor: "var(--Divider-lineColor)",
    content: '""'
  },
  "&::before": {
    marginInlineEnd: ownerState.orientation === "vertical" ? "initial" : "min(var(--Divider-childPosition) * 999, var(--Divider-gap))",
    marginBlockEnd: ownerState.orientation === "vertical" ? "min(var(--Divider-childPosition) * 999, var(--Divider-gap))" : "initial",
    flexBasis: "var(--Divider-childPosition)"
  },
  "&::after": {
    marginInlineStart: ownerState.orientation === "vertical" ? "initial" : "min((100% - var(--Divider-childPosition)) * 999, var(--Divider-gap))",
    marginBlockStart: ownerState.orientation === "vertical" ? "min((100% - var(--Divider-childPosition)) * 999, var(--Divider-gap))" : "initial",
    flexBasis: "calc(100% - var(--Divider-childPosition))"
  }
} : {
  border: "none",
  listStyle: "none",
  backgroundColor: "var(--Divider-lineColor)",
  inlineSize: ownerState.orientation === "vertical" ? "var(--Divider-thickness)" : "initial",
  blockSize: ownerState.orientation === "vertical" ? "initial" : "var(--Divider-thickness)"
}));
var Divider = React30.forwardRef(function Divider2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyDivider"
  });
  const {
    className,
    children,
    component = children !== void 0 && children !== null ? "div" : "hr",
    inset,
    orientation = "horizontal",
    role = component !== "hr" ? "separator" : void 0
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded25);
  const ownerState = _extends({}, props, {
    inset,
    role,
    orientation,
    component
  });
  const classes = useUtilityClasses19(ownerState);
  return (0, import_jsx_runtime36.jsx)(DividerRoot, _extends({
    ref,
    as: component,
    className: clsx_m_default(classes.root, className),
    ownerState,
    role
  }, role === "separator" && orientation === "vertical" && {
    "aria-orientation": "vertical"
  }, other, {
    children
  }));
});
true ? Divider.propTypes = {
  children: import_prop_types22.default.node,
  classes: import_prop_types22.default.object,
  className: import_prop_types22.default.string,
  component: import_prop_types22.default.elementType,
  inset: import_prop_types22.default.oneOfType([import_prop_types22.default.oneOf(["none", "context"]), import_prop_types22.default.string]),
  orientation: import_prop_types22.default.oneOf(["horizontal", "vertical"]),
  role: import_prop_types22.default.string,
  sx: import_prop_types22.default.oneOfType([import_prop_types22.default.arrayOf(import_prop_types22.default.oneOfType([import_prop_types22.default.func, import_prop_types22.default.object, import_prop_types22.default.bool])), import_prop_types22.default.func, import_prop_types22.default.object])
} : void 0;
Divider.muiName = "Divider";
var Divider_default = Divider;

// node_modules/@mui/joy/FormHelperText/FormHelperText.js
init_extends();
init_objectWithoutPropertiesLoose();
var React31 = __toESM(require_react());
var import_prop_types23 = __toESM(require_prop_types());
init_esm();
init_composeClasses();
init_utils();

// node_modules/@mui/joy/FormHelperText/formHelperTextClasses.js
function getFormHelperTextUtilityClass(slot) {
  return generateUtilityClass2("JoyFormHelperText", slot);
}
var formHelperTextClasses = generateUtilityClasses2("JoyFormHelperText", ["root"]);
var formHelperTextClasses_default = formHelperTextClasses;

// node_modules/@mui/joy/FormLabel/formLabelClasses.js
function getFormLabelUtilityClass(slot) {
  return generateUtilityClass2("JoyFormLabel", slot);
}
var formLabelClasses = generateUtilityClasses2("JoyFormLabel", ["root", "asterisk"]);
var formLabelClasses_default = formLabelClasses;

// node_modules/@mui/joy/FormHelperText/FormHelperText.js
var import_jsx_runtime37 = __toESM(require_jsx_runtime());
var _excluded26 = ["children", "component"];
var useUtilityClasses20 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getFormHelperTextUtilityClass, {});
};
var FormHelperTextRoot = styled_default("p", {
  name: "JoyFormHelperText",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme
}) => ({
  display: "flex",
  alignItems: "center",
  fontFamily: theme.vars.fontFamily.body,
  fontSize: `var(--FormHelperText-fontSize, ${theme.vars.fontSize.sm})`,
  lineHeight: theme.vars.lineHeight.sm,
  color: `var(--FormHelperText-color, ${theme.vars.palette.text.secondary})`,
  margin: "var(--FormHelperText-margin, 0px)",
  [`.${formLabelClasses_default.root} + &`]: {
    "--FormHelperText-margin": "0px"
  }
}));
var FormHelperText = React31.forwardRef(function FormHelperText2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyFormHelperText"
  });
  const {
    children,
    component
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded26);
  const rootRef = React31.useRef(null);
  const handleRef = useForkRef(rootRef, ref);
  const formControl = React31.useContext(FormControlContext_default);
  const setHelperText = formControl == null ? void 0 : formControl.setHelperText;
  React31.useEffect(() => {
    setHelperText == null ? void 0 : setHelperText(rootRef.current);
    return () => {
      setHelperText == null ? void 0 : setHelperText(null);
    };
  }, [setHelperText]);
  const ownerState = _extends({}, props);
  const classes = useUtilityClasses20();
  const rootProps = useSlotProps({
    elementType: FormHelperTextRoot,
    externalSlotProps: {},
    externalForwardedProps: other,
    ownerState,
    additionalProps: {
      ref: handleRef,
      as: component,
      id: formControl == null ? void 0 : formControl["aria-describedby"]
    },
    className: classes.root
  });
  return (0, import_jsx_runtime37.jsx)(FormHelperTextRoot, _extends({}, rootProps, {
    children
  }));
});
true ? FormHelperText.propTypes = {
  children: import_prop_types23.default.node,
  classes: import_prop_types23.default.object,
  component: import_prop_types23.default.elementType,
  sx: import_prop_types23.default.oneOfType([import_prop_types23.default.arrayOf(import_prop_types23.default.oneOfType([import_prop_types23.default.func, import_prop_types23.default.object, import_prop_types23.default.bool])), import_prop_types23.default.func, import_prop_types23.default.object])
} : void 0;
var FormHelperText_default = FormHelperText;

// node_modules/@mui/joy/FormLabel/FormLabel.js
init_extends();
init_objectWithoutPropertiesLoose();
var React32 = __toESM(require_react());
var import_prop_types24 = __toESM(require_prop_types());
init_composeClasses();
init_utils();
var import_jsx_runtime38 = __toESM(require_jsx_runtime());
var _excluded27 = ["children", "component", "componentsProps"];
var useUtilityClasses21 = () => {
  const slots = {
    root: ["root"],
    asterisk: ["asterisk"]
  };
  return composeClasses(slots, getFormLabelUtilityClass, {});
};
var FormLabelRoot = styled_default("label", {
  name: "JoyFormLabel",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme
}) => ({
  WebkitTapHighlightColor: "transparent",
  alignSelf: "var(--FormLabel-alignSelf)",
  display: "flex",
  alignItems: "center",
  flexWrap: "wrap",
  userSelect: "none",
  fontFamily: theme.vars.fontFamily.body,
  fontSize: `var(--FormLabel-fontSize, ${theme.vars.fontSize.sm})`,
  fontWeight: theme.vars.fontWeight.md,
  lineHeight: theme.vars.lineHeight.md,
  color: `var(--FormLabel-color, ${theme.vars.palette.text.primary})`,
  margin: "var(--FormLabel-margin, 0px)"
}));
var AsteriskComponent = styled_default("span", {
  name: "JoyFormLabel",
  slot: "Asterisk",
  overridesResolver: (props, styles) => styles.asterisk
})({
  color: "var(--FormLabel-asterisk-color)"
});
var FormLabel = React32.forwardRef(function FormLabel2(inProps, ref) {
  var _ref, _inProps$required;
  const props = useThemeProps2({
    props: inProps,
    name: "JoyFormLabel"
  });
  const {
    children,
    component = "label",
    componentsProps = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded27);
  const formControl = React32.useContext(FormControlContext_default);
  const required = (_ref = (_inProps$required = inProps.required) != null ? _inProps$required : formControl == null ? void 0 : formControl.required) != null ? _ref : false;
  const ownerState = _extends({}, props, {
    required
  });
  const classes = useUtilityClasses21();
  const rootProps = useSlotProps({
    elementType: FormLabelRoot,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    ownerState,
    additionalProps: {
      ref,
      as: component,
      htmlFor: formControl == null ? void 0 : formControl.htmlFor,
      id: formControl == null ? void 0 : formControl.labelId
    },
    className: classes.root
  });
  const asteriskProps = useSlotProps({
    elementType: AsteriskComponent,
    externalSlotProps: componentsProps.asterisk,
    ownerState,
    additionalProps: {
      "aria-hidden": true
    },
    className: classes.asterisk
  });
  return (0, import_jsx_runtime38.jsxs)(FormLabelRoot, _extends({}, rootProps, {
    children: [children, required && (0, import_jsx_runtime38.jsxs)(AsteriskComponent, _extends({}, asteriskProps, {
      children: ["\u2009", "*"]
    }))]
  }));
});
true ? FormLabel.propTypes = {
  children: import_prop_types24.default.node,
  component: import_prop_types24.default.elementType,
  componentsProps: import_prop_types24.default.shape({
    asterisk: import_prop_types24.default.oneOfType([import_prop_types24.default.func, import_prop_types24.default.object]),
    root: import_prop_types24.default.oneOfType([import_prop_types24.default.func, import_prop_types24.default.object])
  }),
  required: import_prop_types24.default.bool,
  sx: import_prop_types24.default.oneOfType([import_prop_types24.default.arrayOf(import_prop_types24.default.oneOfType([import_prop_types24.default.func, import_prop_types24.default.object, import_prop_types24.default.bool])), import_prop_types24.default.func, import_prop_types24.default.object])
} : void 0;
var FormLabel_default = FormLabel;

// node_modules/@mui/joy/Grid/Grid.js
var import_prop_types25 = __toESM(require_prop_types());
init_Unstable_Grid();
var Grid = createGrid({
  createStyledComponent: styled_default("div", {
    name: "JoyGrid",
    overridesResolver: (props, styles) => styles.root
  }),
  componentName: "JoyGrid",
  useThemeProps: (inProps) => useThemeProps2({
    props: inProps,
    name: "JoyGrid"
  })
});
true ? Grid.propTypes = {
  children: import_prop_types25.default.node,
  sx: import_prop_types25.default.oneOfType([import_prop_types25.default.arrayOf(import_prop_types25.default.oneOfType([import_prop_types25.default.func, import_prop_types25.default.object, import_prop_types25.default.bool])), import_prop_types25.default.func, import_prop_types25.default.object])
} : void 0;
var Grid_default = Grid;

// node_modules/@mui/joy/Grid/gridClasses.js
init_esm();
function getGridUtilityClass(slot) {
  return generateUtilityClass("JoyGrid", slot);
}
var SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var DIRECTIONS = ["column-reverse", "column", "row-reverse", "row"];
var WRAPS = ["nowrap", "wrap-reverse", "wrap"];
var GRID_SIZES = ["auto", true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
var gridClasses = generateUtilityClasses("JoyGrid", [
  "root",
  "container",
  "item",
  "zeroMinWidth",
  ...SPACINGS.map((spacing) => `spacing-xs-${spacing}`),
  ...DIRECTIONS.map((direction) => `direction-xs-${direction}`),
  ...WRAPS.map((wrap) => `wrap-xs-${wrap}`),
  ...GRID_SIZES.map((size) => `grid-xs-${size}`),
  ...GRID_SIZES.map((size) => `grid-sm-${size}`),
  ...GRID_SIZES.map((size) => `grid-md-${size}`),
  ...GRID_SIZES.map((size) => `grid-lg-${size}`),
  ...GRID_SIZES.map((size) => `grid-xl-${size}`)
]);
var gridClasses_default = gridClasses;

// node_modules/@mui/joy/IconButton/IconButton.js
init_objectWithoutPropertiesLoose();
init_extends();
var React33 = __toESM(require_react());
var import_prop_types26 = __toESM(require_prop_types());
init_esm();
init_ButtonUnstyled();
init_utils();
init_composeClasses();

// node_modules/@mui/joy/IconButton/iconButtonClasses.js
function getIconButtonUtilityClass(slot) {
  return generateUtilityClass2("JoyIconButton", slot);
}
var iconButtonClasses = generateUtilityClasses2("JoyIconButton", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "focusVisible", "disabled", "sizeSm", "sizeMd", "sizeLg"]);
var iconButtonClasses_default = iconButtonClasses;

// node_modules/@mui/joy/IconButton/IconButton.js
var import_jsx_runtime39 = __toESM(require_jsx_runtime());
var _excluded28 = ["children", "action", "component", "color", "variant", "size"];
var useUtilityClasses22 = (ownerState) => {
  const {
    color,
    disabled,
    focusVisible,
    focusVisibleClassName,
    size,
    variant
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  const composedClasses = composeClasses(slots, getIconButtonUtilityClass, {});
  if (focusVisible && focusVisibleClassName) {
    composedClasses.root += ` ${focusVisibleClassName}`;
  }
  return composedClasses;
};
var IconButtonRoot = styled_default("button", {
  name: "JoyIconButton",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;
  return [_extends({
    "--Icon-margin": "initial",
    "--CircularProgress-size": "var(--Icon-fontSize)"
  }, ownerState.size === "sm" && {
    "--Icon-fontSize": "calc(var(--IconButton-size, 2rem) / 1.6)",
    minWidth: "var(--IconButton-size, 2rem)",
    minHeight: "var(--IconButton-size, 2rem)",
    fontSize: theme.vars.fontSize.sm,
    paddingInline: "2px"
  }, ownerState.size === "md" && {
    "--Icon-fontSize": "calc(var(--IconButton-size, 2.5rem) / 1.667)",
    minWidth: "var(--IconButton-size, 2.5rem)",
    minHeight: "var(--IconButton-size, 2.5rem)",
    fontSize: theme.vars.fontSize.md,
    paddingInline: "0.25rem"
  }, ownerState.size === "lg" && {
    "--Icon-fontSize": "calc(var(--IconButton-size, 3rem) / 1.714)",
    minWidth: "var(--IconButton-size, 3rem)",
    minHeight: "var(--IconButton-size, 3rem)",
    fontSize: theme.vars.fontSize.lg,
    paddingInline: "0.375rem"
  }, {
    WebkitTapHighlightColor: "transparent",
    paddingBlock: 0,
    fontFamily: theme.vars.fontFamily.body,
    fontWeight: theme.vars.fontWeight.md,
    margin: `var(--IconButton-margin)`,
    borderRadius: `var(--IconButton-radius, ${theme.vars.radius.sm})`,
    border: "none",
    boxSizing: "border-box",
    backgroundColor: "transparent",
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    position: "relative",
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    [theme.focus.selector]: theme.focus.default
  }), (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {
    "&:hover": (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color]
  }, {
    "&:active": (_theme$variants3 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants3[ownerState.color]
  }, {
    [`&.${iconButtonClasses_default.disabled}`]: (_theme$variants4 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants4[ownerState.color]
  }];
});
var IconButton = React33.forwardRef(function IconButton2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyIconButton"
  });
  const {
    children,
    action,
    component = "button",
    color = "primary",
    variant = "soft",
    size = "md"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded28);
  const buttonRef = React33.useRef(null);
  const handleRef = useForkRef(buttonRef, ref);
  const {
    focusVisible,
    setFocusVisible,
    getRootProps
  } = useButton(_extends({}, props, {
    ref: handleRef
  }));
  React33.useImperativeHandle(action, () => ({
    focusVisible: () => {
      var _buttonRef$current;
      setFocusVisible(true);
      (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();
    }
  }), [setFocusVisible]);
  const ownerState = _extends({}, props, {
    component,
    color,
    variant,
    size,
    focusVisible
  });
  const classes = useUtilityClasses22(ownerState);
  const rootProps = useSlotProps({
    elementType: IconButtonRoot,
    getSlotProps: getRootProps,
    externalSlotProps: {},
    externalForwardedProps: other,
    ownerState,
    additionalProps: {
      as: component
    },
    className: classes.root
  });
  return (0, import_jsx_runtime39.jsx)(IconButtonRoot, _extends({}, rootProps, {
    children
  }));
});
true ? IconButton.propTypes = {
  action: import_prop_types26.default.oneOfType([import_prop_types26.default.func, import_prop_types26.default.shape({
    current: import_prop_types26.default.shape({
      focusVisible: import_prop_types26.default.func.isRequired
    })
  })]),
  children: import_prop_types26.default.node,
  color: import_prop_types26.default.oneOfType([import_prop_types26.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types26.default.string]),
  component: import_prop_types26.default.elementType,
  disabled: import_prop_types26.default.bool,
  focusVisibleClassName: import_prop_types26.default.string,
  size: import_prop_types26.default.oneOfType([import_prop_types26.default.oneOf(["sm", "md", "lg"]), import_prop_types26.default.string]),
  sx: import_prop_types26.default.oneOfType([import_prop_types26.default.arrayOf(import_prop_types26.default.oneOfType([import_prop_types26.default.func, import_prop_types26.default.object, import_prop_types26.default.bool])), import_prop_types26.default.func, import_prop_types26.default.object]),
  tabIndex: import_prop_types26.default.number,
  variant: import_prop_types26.default.oneOfType([import_prop_types26.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types26.default.string])
} : void 0;
var IconButton_default = IconButton;

// node_modules/@mui/joy/Input/Input.js
init_objectWithoutPropertiesLoose();
init_extends();
var React35 = __toESM(require_react());
var import_prop_types27 = __toESM(require_prop_types());
init_esm();
init_composeClasses();
init_utils();

// node_modules/@mui/joy/Input/inputClasses.js
function getInputUtilityClass(slot) {
  return generateUtilityClass2("JoyInput", slot);
}
var inputClasses = generateUtilityClasses2("JoyInput", ["root", "input", "formControl", "focused", "disabled", "error", "adornedStart", "adornedEnd", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "fullWidth", "startDecorator", "endDecorator"]);
var inputClasses_default = inputClasses;

// node_modules/@mui/joy/Input/useForwardedInput.js
init_extends();
init_objectWithoutPropertiesLoose();
var React34 = __toESM(require_react());
init_InputUnstyled();
var _excluded29 = ["aria-describedby", "aria-label", "aria-labelledby", "autoComplete", "autoFocus", "className", "defaultValue", "disabled", "error", "id", "name", "onClick", "onChange", "onKeyDown", "onKeyUp", "onFocus", "onBlur", "placeholder", "readOnly", "required", "type", "value"];
function useForwardedInput(props, classes) {
  const formControl = React34.useContext(FormControlContext_default);
  const {
    "aria-describedby": ariaDescribedby,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    autoComplete,
    autoFocus,
    className,
    defaultValue,
    disabled: disabledProp,
    error: errorProp,
    id,
    name,
    onClick,
    onChange,
    onKeyDown,
    onKeyUp,
    onFocus,
    onBlur,
    placeholder,
    readOnly,
    required,
    type,
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded29);
  const {
    getRootProps,
    getInputProps,
    focused,
    error,
    disabled
  } = useInput({
    disabled: disabledProp != null ? disabledProp : formControl == null ? void 0 : formControl.disabled,
    defaultValue,
    error: errorProp,
    onBlur,
    onClick,
    onChange,
    onFocus,
    required,
    value
  });
  const rootStateClasses = {
    [classes.disabled]: disabled,
    [classes.error]: error,
    [classes.focused]: focused,
    [classes.formControl]: Boolean(formControl),
    [className]: className
  };
  const inputStateClasses = {
    [classes.disabled]: disabled
  };
  const propsToForward = {
    "aria-describedby": ariaDescribedby,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    autoComplete,
    autoFocus,
    disabled,
    id,
    onKeyDown,
    onKeyUp,
    name,
    placeholder,
    readOnly,
    type
  };
  return _extends({
    formControl,
    propsToForward,
    rootStateClasses,
    inputStateClasses,
    getRootProps,
    getInputProps,
    focused,
    error,
    disabled
  }, other);
}

// node_modules/@mui/joy/Input/Input.js
var import_jsx_runtime40 = __toESM(require_jsx_runtime());
var import_jsx_runtime41 = __toESM(require_jsx_runtime());
var _excluded30 = ["propsToForward", "rootStateClasses", "inputStateClasses", "getRootProps", "getInputProps", "component", "componentsProps", "formControl", "focused", "error", "disabled", "fullWidth", "size", "color", "variant", "startDecorator", "endDecorator"];
var useUtilityClasses23 = (ownerState) => {
  const {
    disabled,
    fullWidth,
    variant,
    color,
    size
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", fullWidth && "fullWidth", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],
    input: ["input"],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  return composeClasses(slots, getInputUtilityClass, {});
};
var InputRoot = styled_default("div", {
  name: "JoyInput",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$vars$palette, _variantStyle$backgro, _theme$variants2, _theme$variants3;
  const variantStyle = (_theme$variants = theme.variants[`${ownerState.variant}`]) == null ? void 0 : _theme$variants[ownerState.color];
  return [_extends({
    "--Input-radius": theme.vars.radius.sm,
    "--Input-gap": "0.5rem",
    "--Input-placeholderOpacity": 0.5,
    "--Input-focusedThickness": theme.vars.focus.thickness
  }, ownerState.color === "context" ? {
    "--Input-focusedHighlight": theme.vars.palette.focusVisible
  } : {
    "--Input-focusedHighlight": (_theme$vars$palette = theme.vars.palette[ownerState.color === "neutral" ? "primary" : ownerState.color]) == null ? void 0 : _theme$vars$palette[500]
  }, ownerState.size === "sm" && {
    "--Input-minHeight": "2rem",
    "--Input-paddingInline": "0.5rem",
    "--Input-decorator-childHeight": "min(1.5rem, var(--Input-minHeight))",
    "--Icon-fontSize": "1.25rem"
  }, ownerState.size === "md" && {
    "--Input-minHeight": "2.5rem",
    "--Input-paddingInline": "0.75rem",
    "--Input-decorator-childHeight": "min(2rem, var(--Input-minHeight))",
    "--Icon-fontSize": "1.5rem"
  }, ownerState.size === "lg" && {
    "--Input-minHeight": "3rem",
    "--Input-paddingInline": "1rem",
    "--Input-gap": "0.75rem",
    "--Input-decorator-childHeight": "min(2.375rem, var(--Input-minHeight))",
    "--Icon-fontSize": "1.75rem"
  }, {
    "--Input-decorator-childOffset": "min(calc(var(--Input-paddingInline) - (var(--Input-minHeight) - 2 * var(--variant-borderWidth) - var(--Input-decorator-childHeight)) / 2), var(--Input-paddingInline))",
    "--internal-paddingBlock": "max((var(--Input-minHeight) - 2 * var(--variant-borderWidth) - var(--Input-decorator-childHeight)) / 2, 0px)",
    "--Input-decorator-childRadius": "max(var(--Input-radius) - var(--internal-paddingBlock), min(var(--internal-paddingBlock) / 2, var(--Input-radius) / 2))",
    "--Button-minHeight": "var(--Input-decorator-childHeight)",
    "--IconButton-size": "var(--Input-decorator-childHeight)",
    "--Button-radius": "var(--Input-decorator-childRadius)",
    "--IconButton-radius": "var(--Input-decorator-childRadius)",
    boxSizing: "border-box",
    minWidth: 0,
    minHeight: "var(--Input-minHeight)"
  }, ownerState.fullWidth && {
    width: "100%"
  }, {
    cursor: "text",
    position: "relative",
    display: "flex",
    alignItems: "center",
    paddingInline: `var(--Input-paddingInline)`,
    borderRadius: "var(--Input-radius)",
    fontFamily: theme.vars.fontFamily.body,
    fontSize: theme.vars.fontSize.md
  }, ownerState.size === "sm" && {
    fontSize: theme.vars.fontSize.sm
  }, {
    transition: "border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    "&:before": {
      boxSizing: "border-box",
      content: '""',
      display: "block",
      position: "absolute",
      pointerEvents: "none",
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      zIndex: 1,
      borderRadius: "inherit",
      margin: "calc(var(--variant-borderWidth) * -1)"
    }
  }), _extends({}, variantStyle, {
    backgroundColor: (_variantStyle$backgro = variantStyle == null ? void 0 : variantStyle.backgroundColor) != null ? _variantStyle$backgro : theme.vars.palette.background.surface,
    [`&:hover:not(.${inputClasses_default.focused})`]: _extends({}, (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color], {
      backgroundColor: null,
      cursor: "text"
    }),
    [`&.${inputClasses_default.disabled}`]: (_theme$variants3 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants3[ownerState.color],
    [`&.${inputClasses_default.focused}`]: {
      "&:before": {
        boxShadow: `inset 0 0 0 var(--Input-focusedThickness) var(--Input-focusedHighlight)`
      }
    }
  })];
});
var InputInput = styled_default("input", {
  name: "JoyInput",
  slot: "Input",
  overridesResolver: (props, styles) => styles.input
})({
  border: "none",
  minWidth: 0,
  outline: 0,
  padding: 0,
  flex: 1,
  alignSelf: "stretch",
  color: "inherit",
  backgroundColor: "transparent",
  fontFamily: "inherit",
  fontSize: "inherit",
  fontStyle: "inherit",
  fontWeight: "inherit",
  lineHeight: "inherit",
  textOverflow: "ellipsis",
  "&:-webkit-autofill": {
    WebkitBackgroundClip: "text",
    WebkitTextFillColor: "currentColor"
  },
  "&::-webkit-input-placeholder": {
    opacity: "var(--Input-placeholderOpacity)",
    color: "inherit"
  },
  "&::-moz-placeholder": {
    opacity: "var(--Input-placeholderOpacity)",
    color: "inherit"
  },
  "&:-ms-input-placeholder": {
    opacity: "var(--Input-placeholderOpacity)",
    color: "inherit"
  },
  "&::-ms-input-placeholder": {
    opacity: "var(--Input-placeholderOpacity)",
    color: "inherit"
  }
});
var InputStartDecorator = styled_default("span", {
  name: "JoyInput",
  slot: "StartDecorator",
  overridesResolver: (props, styles) => styles.startDecorator
})(({
  theme,
  ownerState
}) => {
  var _theme$variants4, _theme$variants5, _theme$variants6, _theme$variants7;
  return _extends({
    "--Button-margin": "0 0 0 calc(var(--Input-decorator-childOffset) * -1)",
    "--IconButton-margin": "0 0 0 calc(var(--Input-decorator-childOffset) * -1)",
    "--Icon-margin": "0 0 0 calc(var(--Input-paddingInline) / -4)",
    display: "inherit",
    alignItems: "center",
    marginInlineEnd: "var(--Input-gap)",
    color: theme.vars.palette.text.tertiary,
    cursor: "initial"
  }, ownerState.focused && {
    color: (_theme$variants4 = theme.variants[ownerState.variant]) == null ? void 0 : (_theme$variants5 = _theme$variants4[ownerState.color]) == null ? void 0 : _theme$variants5.color
  }, ownerState.disabled && {
    color: (_theme$variants6 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : (_theme$variants7 = _theme$variants6[ownerState.color]) == null ? void 0 : _theme$variants7.color
  });
});
var InputEndDecorator = styled_default("span", {
  name: "JoyInput",
  slot: "EndDecorator",
  overridesResolver: (props, styles) => styles.endDecorator
})(({
  theme,
  ownerState
}) => {
  var _theme$variants8, _theme$variants9, _theme$variants10, _theme$variants11;
  return _extends({
    "--Button-margin": "0 calc(var(--Input-decorator-childOffset) * -1) 0 0",
    "--IconButton-margin": "0 calc(var(--Input-decorator-childOffset) * -1) 0 0",
    "--Icon-margin": "0 calc(var(--Input-paddingInline) / -4) 0 0",
    display: "inherit",
    alignItems: "center",
    marginInlineStart: "var(--Input-gap)",
    color: (_theme$variants8 = theme.variants[ownerState.variant]) == null ? void 0 : (_theme$variants9 = _theme$variants8[ownerState.color]) == null ? void 0 : _theme$variants9.color,
    cursor: "initial"
  }, ownerState.disabled && {
    color: (_theme$variants10 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : (_theme$variants11 = _theme$variants10[ownerState.color]) == null ? void 0 : _theme$variants11.color
  });
});
var Input = React35.forwardRef(function Input2(inProps, ref) {
  var _ref, _inProps$error, _ref2, _inProps$size, _ref3, _inProps$color;
  const props = useThemeProps2({
    props: inProps,
    name: "JoyInput"
  });
  const _useForwardedInput = useForwardedInput(props, inputClasses_default), {
    propsToForward,
    rootStateClasses,
    inputStateClasses,
    getRootProps,
    getInputProps,
    component,
    componentsProps = {},
    formControl,
    focused,
    error: errorProp = false,
    disabled,
    fullWidth = false,
    size: sizeProp = "md",
    color: colorProp = "neutral",
    variant = "outlined",
    startDecorator,
    endDecorator
  } = _useForwardedInput, other = _objectWithoutPropertiesLoose(_useForwardedInput, _excluded30);
  if (true) {
    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;
    React35.useEffect(() => {
      if (registerEffect) {
        return registerEffect();
      }
      return void 0;
    }, [registerEffect]);
  }
  const error = (_ref = (_inProps$error = inProps.error) != null ? _inProps$error : formControl == null ? void 0 : formControl.error) != null ? _ref : errorProp;
  const size = (_ref2 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref2 : sizeProp;
  const color = error ? "danger" : (_ref3 = (_inProps$color = inProps.color) != null ? _inProps$color : formControl == null ? void 0 : formControl.color) != null ? _ref3 : colorProp;
  const ownerState = _extends({}, props, {
    fullWidth,
    color,
    disabled,
    error,
    focused,
    size,
    variant
  });
  const classes = useUtilityClasses23(ownerState);
  const rootProps = useSlotProps({
    elementType: InputRoot,
    getSlotProps: getRootProps,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    ownerState,
    className: [classes.root, rootStateClasses]
  });
  const inputProps = useSlotProps({
    elementType: InputInput,
    getSlotProps: (otherHandlers) => getInputProps(_extends({}, otherHandlers, propsToForward)),
    externalSlotProps: componentsProps.input,
    ownerState,
    additionalProps: formControl ? {
      id: formControl.htmlFor,
      "aria-describedby": formControl["aria-describedby"]
    } : {},
    className: [classes.input, inputStateClasses]
  });
  const startDecoratorProps = useSlotProps({
    elementType: InputStartDecorator,
    externalSlotProps: componentsProps.startDecorator,
    ownerState,
    className: classes.startDecorator
  });
  const endDecoratorProps = useSlotProps({
    elementType: InputEndDecorator,
    externalSlotProps: componentsProps.endDecorator,
    ownerState,
    className: classes.endDecorator
  });
  return (0, import_jsx_runtime41.jsxs)(InputRoot, _extends({}, rootProps, {
    children: [startDecorator && (0, import_jsx_runtime40.jsx)(InputStartDecorator, _extends({}, startDecoratorProps, {
      children: startDecorator
    })), (0, import_jsx_runtime40.jsx)(InputInput, _extends({}, inputProps)), endDecorator && (0, import_jsx_runtime40.jsx)(InputEndDecorator, _extends({}, endDecoratorProps, {
      children: endDecorator
    }))]
  }));
});
true ? Input.propTypes = {
  autoComplete: import_prop_types27.default.string,
  autoFocus: import_prop_types27.default.bool,
  children: import_prop_types27.default.node,
  className: import_prop_types27.default.string,
  color: import_prop_types27.default.oneOfType([import_prop_types27.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types27.default.string]),
  componentsProps: import_prop_types27.default.shape({
    endDecorator: import_prop_types27.default.oneOfType([import_prop_types27.default.func, import_prop_types27.default.object]),
    input: import_prop_types27.default.oneOfType([import_prop_types27.default.func, import_prop_types27.default.object]),
    root: import_prop_types27.default.oneOfType([import_prop_types27.default.func, import_prop_types27.default.object]),
    startDecorator: import_prop_types27.default.oneOfType([import_prop_types27.default.func, import_prop_types27.default.object])
  }),
  defaultValue: import_prop_types27.default.oneOfType([import_prop_types27.default.arrayOf(import_prop_types27.default.string), import_prop_types27.default.number, import_prop_types27.default.string]),
  disabled: import_prop_types27.default.bool,
  endDecorator: import_prop_types27.default.node,
  error: import_prop_types27.default.bool,
  fullWidth: import_prop_types27.default.bool,
  id: import_prop_types27.default.string,
  name: import_prop_types27.default.string,
  onChange: import_prop_types27.default.func,
  placeholder: import_prop_types27.default.string,
  readOnly: import_prop_types27.default.bool,
  required: import_prop_types27.default.bool,
  size: import_prop_types27.default.oneOfType([import_prop_types27.default.oneOf(["sm", "md", "lg"]), import_prop_types27.default.string]),
  startDecorator: import_prop_types27.default.node,
  sx: import_prop_types27.default.oneOfType([import_prop_types27.default.arrayOf(import_prop_types27.default.oneOfType([import_prop_types27.default.func, import_prop_types27.default.object, import_prop_types27.default.bool])), import_prop_types27.default.func, import_prop_types27.default.object]),
  value: import_prop_types27.default.oneOfType([import_prop_types27.default.arrayOf(import_prop_types27.default.string), import_prop_types27.default.number, import_prop_types27.default.string]),
  variant: import_prop_types27.default.oneOfType([import_prop_types27.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types27.default.string])
} : void 0;
var Input_default = Input;

// node_modules/@mui/joy/Link/Link.js
init_objectWithoutPropertiesLoose();
init_extends();
var React36 = __toESM(require_react());
var import_prop_types28 = __toESM(require_prop_types());
init_base();
init_esm();
init_utils();
init_esm2();

// node_modules/@mui/joy/Link/linkClasses.js
function getLinkUtilityClass(slot) {
  return generateUtilityClass2("JoyLink", slot);
}
var linkClasses = generateUtilityClasses2("JoyLink", ["root", "disabled", "focusVisible", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "focusVisible", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "underlineNone", "underlineHover", "underlineAlways", "h1", "h2", "h3", "h4", "h5", "h6", "body1", "body2", "body3", "startDecorator", "endDecorator"]);
var linkClasses_default = linkClasses;

// node_modules/@mui/joy/Link/Link.js
var import_jsx_runtime42 = __toESM(require_jsx_runtime());
var import_jsx_runtime43 = __toESM(require_jsx_runtime());
var _excluded31 = ["color", "textColor"];
var _excluded210 = ["component", "componentsProps", "children", "disabled", "onBlur", "onFocus", "level", "overlay", "underline", "variant", "endDecorator", "startDecorator"];
var useUtilityClasses24 = (ownerState) => {
  const {
    level,
    color,
    variant,
    underline,
    focusVisible,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", color && `color${capitalize(color)}`, disabled && "disabled", focusVisible && "focusVisible", level, underline && `underline${capitalize(underline)}`, variant && `variant${capitalize(variant)}`],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  return composeClasses(slots, getLinkUtilityClass, {});
};
var StartDecorator2 = styled_default("span", {
  name: "JoyLink",
  slot: "StartDecorator",
  overridesResolver: (props, styles) => styles.startDecorator
})({
  display: "inline-flex",
  marginInlineEnd: "clamp(4px, var(--Link-gap, 0.25em), 0.5rem)"
});
var EndDecorator2 = styled_default("span", {
  name: "JoyLink",
  slot: "endDecorator",
  overridesResolver: (props, styles) => styles.endDecorator
})({
  display: "inline-flex",
  marginInlineStart: "clamp(4px, var(--Link-gap, 0.25em), 0.5rem)"
});
var LinkRoot = styled_default("a", {
  name: "JoyLink",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette, _theme$vars$palette2, _theme$vars$palette3, _theme$variants$owner, _theme$variants, _theme$variants2, _theme$variants3;
  return [_extends({
    "--Icon-fontSize": "1.25em",
    "--CircularProgress-size": "1em"
  }, ownerState.level && ownerState.level !== "inherit" && theme.typography[ownerState.level], ownerState.level === "inherit" && {
    fontSize: "inherit",
    fontFamily: "inherit",
    lineHeight: "inherit"
  }, ownerState.underline === "none" && {
    textDecoration: "none"
  }, ownerState.underline === "hover" && {
    textDecoration: "none",
    "&:hover": {
      textDecorationLine: "underline"
    }
  }, ownerState.underline === "always" && {
    textDecoration: "underline"
  }, ownerState.startDecorator && {
    verticalAlign: "bottom"
  }, {
    display: "inline-flex",
    alignItems: "center",
    WebkitTapHighlightColor: "transparent",
    backgroundColor: "transparent",
    outline: 0,
    border: 0,
    margin: 0,
    borderRadius: theme.vars.radius.xs,
    padding: 0,
    textDecorationColor: `rgba(${(_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette.mainChannel} / var(--Link-underlineOpacity, 0.72))`
  }, ownerState.variant ? _extends({
    paddingInline: "0.25em"
  }, !ownerState.nested && {
    marginInline: "-0.25em"
  }) : {
    color: `rgba(${(_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2.mainChannel} / 1)`,
    cursor: "pointer",
    [`&.${linkClasses_default.disabled}`]: {
      pointerEvents: "none",
      color: `rgba(${(_theme$vars$palette3 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette3.mainChannel} / 0.6)`
    }
  }, {
    userSelect: "none",
    MozAppearance: "none",
    WebkitAppearance: "none",
    "&::-moz-focus-inner": {
      borderStyle: "none"
    }
  }, ownerState.overlay ? {
    position: "initial",
    "&::after": {
      content: '""',
      display: "block",
      position: "absolute",
      top: 0,
      left: 0,
      bottom: 0,
      right: 0,
      borderRadius: `var(--internal-action-radius, inherit)`,
      margin: `var(--internal-action-margin)`
    },
    [`${theme.focus.selector}`]: {
      "&::after": theme.focus.default
    }
  } : {
    position: "relative",
    [theme.focus.selector]: theme.focus.default
  }), ownerState.variant && _extends({}, (_theme$variants$owner = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants$owner[ownerState.color], {
    "&:hover": (_theme$variants = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants[ownerState.color],
    "&:active": (_theme$variants2 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants2[ownerState.color],
    [`&.${linkClasses_default.disabled}`]: (_theme$variants3 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants3[ownerState.color]
  })];
});
var Link = React36.forwardRef(function Link2(inProps, ref) {
  const _useThemeProps = useThemeProps2({
    props: inProps,
    name: "JoyLink"
  }), {
    color = "primary",
    textColor
  } = _useThemeProps, themeProps = _objectWithoutPropertiesLoose(_useThemeProps, _excluded31);
  const nested = React36.useContext(TypographyContext);
  const props = extendSxProp(_extends({}, themeProps, {
    color: textColor
  }));
  const {
    component = "a",
    componentsProps = {},
    children,
    disabled = false,
    onBlur,
    onFocus,
    level: levelProp = "body1",
    overlay = false,
    underline = "hover",
    variant,
    endDecorator,
    startDecorator
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded210);
  const level = nested ? inProps.level || "inherit" : levelProp;
  const {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible();
  const [focusVisible, setFocusVisible] = React36.useState(false);
  const handleRef = useForkRef(ref, focusVisibleRef);
  const handleBlur = (event) => {
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }
    if (onBlur) {
      onBlur(event);
    }
  };
  const handleFocus = (event) => {
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setFocusVisible(true);
    }
    if (onFocus) {
      onFocus(event);
    }
  };
  const ownerState = _extends({}, props, {
    color,
    component,
    disabled,
    focusVisible,
    underline,
    variant,
    level,
    overlay,
    nested
  });
  const classes = useUtilityClasses24(ownerState);
  const rootProps = useSlotProps({
    elementType: LinkRoot,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: handleRef,
      as: component,
      onBlur: handleBlur,
      onFocus: handleFocus
    },
    ownerState,
    className: classes.root
  });
  const startDecoratorProps = useSlotProps({
    elementType: StartDecorator2,
    externalSlotProps: componentsProps.startDecorator,
    ownerState,
    className: classes.startDecorator
  });
  const endDecoratorProps = useSlotProps({
    elementType: EndDecorator2,
    externalSlotProps: componentsProps.endDecorator,
    ownerState,
    className: classes.endDecorator
  });
  return (0, import_jsx_runtime43.jsxs)(LinkRoot, _extends({}, rootProps, {
    children: [startDecorator && (0, import_jsx_runtime42.jsx)(StartDecorator2, _extends({}, startDecoratorProps, {
      children: startDecorator
    })), children, endDecorator && (0, import_jsx_runtime42.jsx)(EndDecorator2, _extends({}, endDecoratorProps, {
      children: endDecorator
    }))]
  }));
});
true ? Link.propTypes = {
  children: import_prop_types28.default.node,
  color: import_prop_types28.default.oneOfType([import_prop_types28.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types28.default.string]),
  component: import_prop_types28.default.elementType,
  componentsProps: import_prop_types28.default.shape({
    endDecorator: import_prop_types28.default.oneOfType([import_prop_types28.default.func, import_prop_types28.default.object]),
    root: import_prop_types28.default.oneOfType([import_prop_types28.default.func, import_prop_types28.default.object]),
    startDecorator: import_prop_types28.default.oneOfType([import_prop_types28.default.func, import_prop_types28.default.object])
  }),
  disabled: import_prop_types28.default.bool,
  endDecorator: import_prop_types28.default.node,
  level: import_prop_types28.default.oneOfType([import_prop_types28.default.oneOf(["body1", "body2", "body3", "h1", "h2", "h3", "h4", "h5", "h6", "inherit"]), import_prop_types28.default.string]),
  onBlur: import_prop_types28.default.func,
  onFocus: import_prop_types28.default.func,
  overlay: import_prop_types28.default.bool,
  startDecorator: import_prop_types28.default.node,
  sx: import_prop_types28.default.oneOfType([import_prop_types28.default.arrayOf(import_prop_types28.default.oneOfType([import_prop_types28.default.func, import_prop_types28.default.object, import_prop_types28.default.bool])), import_prop_types28.default.func, import_prop_types28.default.object]),
  textColor: import_prop_types28.default.any,
  underline: import_prop_types28.default.oneOf(["always", "hover", "none"]),
  variant: import_prop_types28.default.oneOfType([import_prop_types28.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types28.default.string])
} : void 0;
var Link_default = Link;

// node_modules/@mui/joy/List/List.js
init_objectWithoutPropertiesLoose();
init_extends();
var React43 = __toESM(require_react());
var import_prop_types29 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_composeClasses();
init_MenuUnstyled();
init_SelectUnstyled();

// node_modules/@mui/joy/List/listClasses.js
function getListUtilityClass(slot) {
  return generateUtilityClass2("JoyList", slot);
}
var listClasses = generateUtilityClasses2("JoyList", ["root", "nesting", "row", "scoped", "sizeSm", "sizeMd", "sizeLg", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var listClasses_default = listClasses;

// node_modules/@mui/joy/List/NestedListContext.js
var React37 = __toESM(require_react());
var NestedListContext = React37.createContext(false);
var NestedListContext_default = NestedListContext;

// node_modules/@mui/joy/List/ComponentListContext.js
var React38 = __toESM(require_react());
var ComponentListContext = React38.createContext(void 0);
var ComponentListContext_default = ComponentListContext;

// node_modules/@mui/joy/List/ListProvider.js
init_extends();
var React41 = __toESM(require_react());

// node_modules/@mui/joy/List/RowListContext.js
var React39 = __toESM(require_react());
var RowListContext = React39.createContext(false);
var RowListContext_default = RowListContext;

// node_modules/@mui/joy/List/WrapListContext.js
var React40 = __toESM(require_react());
var WrapListContext = React40.createContext(false);
var WrapListContext_default = WrapListContext;

// node_modules/@mui/joy/List/ListProvider.js
var import_jsx_runtime44 = __toESM(require_jsx_runtime());
var scopedVariables = {
  "--NestedList-marginRight": "0px",
  "--NestedList-marginLeft": "0px",
  "--NestedList-item-paddingLeft": "var(--List-item-paddingX)",
  "--List-itemButton-marginBlock": "0px",
  "--List-itemButton-marginInline": "0px",
  "--List-item-marginBlock": "0px",
  "--List-item-marginInline": "0px"
};
function ListProvider({
  children,
  nested,
  row = false,
  wrap = false
}) {
  const baseProviders = (0, import_jsx_runtime44.jsx)(RowListContext_default.Provider, {
    value: row,
    children: (0, import_jsx_runtime44.jsx)(WrapListContext_default.Provider, {
      value: wrap,
      children: React41.Children.map(children, (child, index) => React41.isValidElement(child) ? React41.cloneElement(child, _extends({}, index === 0 && {
        "data-first-child": ""
      })) : child)
    })
  });
  if (nested === void 0) {
    return baseProviders;
  }
  return (0, import_jsx_runtime44.jsx)(NestedListContext_default.Provider, {
    value: nested,
    children: baseProviders
  });
}
var ListProvider_default = ListProvider;

// node_modules/@mui/joy/RadioGroup/RadioGroupContext.js
var React42 = __toESM(require_react());
var RadioGroupContext = React42.createContext(void 0);
if (true) {
  RadioGroupContext.displayName = "RadioGroupContext";
}
var RadioGroupContext_default = RadioGroupContext;

// node_modules/@mui/joy/List/List.js
var import_jsx_runtime45 = __toESM(require_jsx_runtime());
var _excluded32 = ["component", "className", "children", "size", "row", "wrap", "variant", "color", "role"];
var useUtilityClasses25 = (ownerState) => {
  const {
    variant,
    color,
    size,
    nesting,
    row,
    instanceSize
  } = ownerState;
  const slots = {
    root: ["root", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, !instanceSize && !nesting && size && `size${capitalize(size)}`, instanceSize && `size${capitalize(instanceSize)}`, nesting && "nesting", row && "row"]
  };
  return composeClasses(slots, getListUtilityClass, {});
};
var ListRoot = styled_default("ul", {
  name: "JoyList",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  function applySizeVars(size) {
    if (size === "sm") {
      return {
        "--List-divider-gap": "0.25rem",
        "--List-item-minHeight": "2rem",
        "--List-item-paddingY": "0.25rem",
        "--List-item-paddingX": "0.5rem",
        "--List-item-fontSize": theme.vars.fontSize.sm,
        "--List-decorator-size": ownerState.row ? "1.5rem" : "2rem",
        "--Icon-fontSize": "1.125rem"
      };
    }
    if (size === "md") {
      return {
        "--List-divider-gap": "0.375rem",
        "--List-item-minHeight": "2.5rem",
        "--List-item-paddingY": "0.375rem",
        "--List-item-paddingX": "0.75rem",
        "--List-item-fontSize": theme.vars.fontSize.md,
        "--List-decorator-size": ownerState.row ? "1.75rem" : "2.5rem",
        "--Icon-fontSize": "1.25rem"
      };
    }
    if (size === "lg") {
      return {
        "--List-divider-gap": "0.5rem",
        "--List-item-minHeight": "3rem",
        "--List-item-paddingY": "0.5rem",
        "--List-item-paddingX": "1rem",
        "--List-item-fontSize": theme.vars.fontSize.md,
        "--List-decorator-size": ownerState.row ? "2.25rem" : "3rem",
        "--Icon-fontSize": "1.5rem"
      };
    }
    return {};
  }
  return [ownerState.nesting && _extends({}, applySizeVars(ownerState.instanceSize), {
    "--List-item-paddingRight": "var(--List-item-paddingX)",
    "--List-item-paddingLeft": "var(--NestedList-item-paddingLeft)",
    "--List-itemButton-marginBlock": "0px",
    "--List-itemButton-marginInline": "0px",
    "--List-item-marginBlock": "0px",
    "--List-item-marginInline": "0px",
    padding: 0,
    marginInlineStart: "var(--NestedList-marginLeft)",
    marginInlineEnd: "var(--NestedList-marginRight)",
    marginBlockStart: "var(--List-gap)",
    marginBlockEnd: "initial"
  }), !ownerState.nesting && _extends({}, applySizeVars(ownerState.size), {
    "--List-gap": "0px",
    "--List-decorator-color": theme.vars.palette.text.tertiary,
    "--List-nestedInsetStart": "0px",
    "--List-item-paddingLeft": "var(--List-item-paddingX)",
    "--List-item-paddingRight": "var(--List-item-paddingX)",
    "--internal-child-radius": "max(var(--List-radius) - var(--List-padding), min(var(--List-padding) / 2, var(--List-radius) / 2))",
    "--List-item-radius": "var(--internal-child-radius)",
    "--List-item-startActionTranslateX": "calc(0.5 * var(--List-item-paddingLeft))",
    "--List-item-endActionTranslateX": "calc(-0.5 * var(--List-item-paddingRight))",
    margin: "initial"
  }, ownerState.row ? _extends({}, ownerState.wrap ? {
    padding: "var(--List-padding)",
    marginInlineStart: "calc(-1 * var(--List-gap))",
    marginBlockStart: "calc(-1 * var(--List-gap))"
  } : {
    paddingInline: "var(--List-padding, var(--List-divider-gap))",
    paddingBlock: "var(--List-padding)"
  }) : {
    paddingBlock: "var(--List-padding, var(--List-divider-gap))",
    paddingInline: "var(--List-padding)"
  }), _extends({
    boxSizing: "border-box",
    borderRadius: "var(--List-radius)",
    listStyle: "none",
    display: "flex",
    flexDirection: ownerState.row ? "row" : "column"
  }, ownerState.wrap && {
    flexWrap: "wrap"
  }, {
    flexGrow: 1,
    position: "relative"
  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color])];
});
var List = React43.forwardRef(function List2(inProps, ref) {
  var _inProps$size;
  const nesting = React43.useContext(NestedListContext_default);
  const menuContext = React43.useContext(MenuUnstyledContext_default);
  const selectContext = React43.useContext(SelectUnstyledContext);
  const radioGroupContext = React43.useContext(RadioGroupContext_default);
  const props = useThemeProps2({
    props: inProps,
    name: "JoyList"
  });
  const {
    component,
    className,
    children,
    size = (_inProps$size = inProps.size) != null ? _inProps$size : "md",
    row = false,
    wrap = false,
    variant = "plain",
    color = "neutral",
    role: roleProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded32);
  let role;
  if (menuContext || selectContext) {
    role = "group";
  }
  if (radioGroupContext) {
    role = "presentation";
  }
  if (roleProp) {
    role = roleProp;
  }
  const ownerState = _extends({}, props, {
    instanceSize: inProps.size,
    size,
    nesting,
    row,
    wrap,
    variant,
    color,
    role
  });
  const classes = useUtilityClasses25(ownerState);
  return (0, import_jsx_runtime45.jsx)(ListRoot, _extends({
    ref,
    as: component,
    className: clsx_m_default(classes.root, className),
    ownerState,
    role,
    "aria-labelledby": typeof nesting === "string" ? nesting : void 0
  }, other, {
    children: (0, import_jsx_runtime45.jsx)(ComponentListContext_default.Provider, {
      value: `${typeof component === "string" ? component : ""}:${role || ""}`,
      children: (0, import_jsx_runtime45.jsx)(ListProvider_default, {
        row,
        wrap,
        children
      })
    })
  }));
});
true ? List.propTypes = {
  children: import_prop_types29.default.node,
  className: import_prop_types29.default.string,
  color: import_prop_types29.default.oneOfType([import_prop_types29.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types29.default.string]),
  component: import_prop_types29.default.elementType,
  role: import_prop_types29.default.string,
  row: import_prop_types29.default.bool,
  size: import_prop_types29.default.oneOfType([import_prop_types29.default.oneOf(["sm", "md", "lg"]), import_prop_types29.default.string]),
  sx: import_prop_types29.default.oneOfType([import_prop_types29.default.arrayOf(import_prop_types29.default.oneOfType([import_prop_types29.default.func, import_prop_types29.default.object, import_prop_types29.default.bool])), import_prop_types29.default.func, import_prop_types29.default.object]),
  variant: import_prop_types29.default.oneOfType([import_prop_types29.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types29.default.string]),
  wrap: import_prop_types29.default.bool
} : void 0;
var List_default = List;

// node_modules/@mui/joy/ListDivider/ListDivider.js
init_objectWithoutPropertiesLoose();
init_extends();
var React44 = __toESM(require_react());
var import_prop_types30 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_composeClasses();

// node_modules/@mui/joy/ListDivider/listDividerClasses.js
function getListDividerUtilityClass(slot) {
  return generateUtilityClass2("JoyListDivider", slot);
}
var listDividerClasses = generateUtilityClasses2("JoyListDivider", ["root", "insetGutter", "insetStartDecorator", "insetStartContent"]);
var listDividerClasses_default = listDividerClasses;

// node_modules/@mui/joy/ListDivider/ListDivider.js
var import_jsx_runtime46 = __toESM(require_jsx_runtime());
var _excluded33 = ["component", "className", "children", "inset", "orientation"];
var useUtilityClasses26 = (ownerState) => {
  const slots = {
    root: [
      "root",
      ownerState.inset && ownerState.inset !== "context" && `inset${capitalize(ownerState.inset)}`
    ]
  };
  return composeClasses(slots, getListDividerUtilityClass, {});
};
var ListDividerRoot = styled_default(Divider_default, {
  name: "JoyListDivider",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  ownerState
}) => _extends({}, ownerState.inset === "context" && {
  "--Divider-inset": "calc(-1 * var(--List-padding))"
}, ownerState.row && _extends({
  marginInline: "var(--List-divider-gap)"
}, ownerState.inset === "gutter" && {
  marginBlock: "var(--List-item-paddingY)"
}, ownerState["data-first-child"] === void 0 && {
  marginInlineStart: "calc(var(--List-gap) + var(--List-divider-gap))"
}), !ownerState.row && _extends({}, ownerState["data-first-child"] === void 0 && {
  marginBlockStart: "calc(var(--List-gap) + var(--List-divider-gap))"
}, {
  marginBlockEnd: "var(--List-divider-gap)"
}, ownerState.inset === "gutter" && {
  marginInlineStart: "var(--List-item-paddingLeft)",
  marginInlineEnd: "var(--List-item-paddingRight)"
}, ownerState.inset === "startDecorator" && {
  marginInlineStart: "var(--List-item-paddingLeft)"
}, ownerState.inset === "startContent" && {
  marginInlineStart: "calc(var(--List-item-paddingLeft) + var(--List-decorator-size))"
})));
var ListDivider = React44.forwardRef(function ListDivider2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyListDivider"
  });
  const row = React44.useContext(RowListContext_default);
  const {
    component = "li",
    className,
    children,
    inset = "context",
    orientation = row ? "vertical" : "horizontal"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded33);
  const ownerState = _extends({}, props, {
    inset,
    row,
    orientation
  });
  const classes = useUtilityClasses26(ownerState);
  return (0, import_jsx_runtime46.jsx)(
    ListDividerRoot,
    _extends({
      ref
    }, inset === "context" && {
      inset
    }, {
      component,
      className: clsx_m_default(classes.root, className),
      ownerState,
      orientation
    }, other, {
      children
    })
  );
});
true ? ListDivider.propTypes = {
  children: import_prop_types30.default.node,
  classes: import_prop_types30.default.object,
  className: import_prop_types30.default.string,
  component: import_prop_types30.default.elementType,
  inset: import_prop_types30.default.oneOfType([import_prop_types30.default.oneOf(["gutter", "startDecorator", "startContent"]), import_prop_types30.default.string]),
  orientation: import_prop_types30.default.oneOf(["horizontal", "vertical"]),
  sx: import_prop_types30.default.oneOfType([import_prop_types30.default.arrayOf(import_prop_types30.default.oneOfType([import_prop_types30.default.func, import_prop_types30.default.object, import_prop_types30.default.bool])), import_prop_types30.default.func, import_prop_types30.default.object])
} : void 0;
var ListDivider_default = ListDivider;

// node_modules/@mui/joy/ListItem/ListItem.js
init_objectWithoutPropertiesLoose();
init_extends();
var React46 = __toESM(require_react());
var import_prop_types31 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_composeClasses();
init_MenuUnstyled();

// node_modules/@mui/joy/ListItem/listItemClasses.js
function getListItemUtilityClass(slot) {
  return generateUtilityClass2("JoyListItem", slot);
}
var listItemClasses = generateUtilityClasses2("JoyListItem", ["root", "startAction", "endAction", "nested", "nesting", "sticky", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantSoft", "variantOutlined", "variantSolid"]);
var listItemClasses_default = listItemClasses;

// node_modules/@mui/joy/ListSubheader/ListSubheaderContext.js
var React45 = __toESM(require_react());
var ListSubheaderDispatch = React45.createContext(void 0);
var ListSubheaderContext_default = ListSubheaderDispatch;

// node_modules/@mui/joy/ListItem/ListItem.js
var import_jsx_runtime47 = __toESM(require_jsx_runtime());
var import_jsx_runtime48 = __toESM(require_jsx_runtime());
var _excluded34 = ["component", "className", "children", "nested", "sticky", "variant", "color", "startAction", "endAction", "role"];
var useUtilityClasses27 = (ownerState) => {
  const {
    sticky,
    nested,
    nesting,
    variant,
    color
  } = ownerState;
  const slots = {
    root: ["root", nested && "nested", nesting && "nesting", sticky && "sticky", color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`],
    startAction: ["startAction"],
    endAction: ["endAction"]
  };
  return composeClasses(slots, getListItemUtilityClass, {});
};
var ListItemRoot = styled_default("li", {
  name: "JoyListItem",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  return [
    !ownerState.nested && {
      "--List-itemButton-marginInline": `calc(-1 * var(--List-item-paddingLeft)) calc(-1 * var(--List-item-paddingRight))`,
      "--List-itemButton-marginBlock": "calc(-1 * var(--List-item-paddingY))",
      alignItems: "center",
      marginInline: "var(--List-item-marginInline)"
    },
    ownerState.nested && {
      "--NestedList-marginRight": "calc(-1 * var(--List-item-paddingRight))",
      "--NestedList-marginLeft": "calc(-1 * var(--List-item-paddingLeft))",
      "--NestedList-item-paddingLeft": `calc(var(--List-item-paddingLeft) + var(--List-nestedInsetStart))`,
      "--List-itemButton-marginBlock": "0px",
      "--List-itemButton-marginInline": "calc(-1 * var(--List-item-paddingLeft)) calc(-1 * var(--List-item-paddingRight))",
      "--List-item-marginInline": "calc(-1 * var(--List-item-paddingLeft)) calc(-1 * var(--List-item-paddingRight))",
      flexDirection: "column"
    },
    _extends({
      "--internal-action-radius": "calc(var(--List-item-radius) - var(--variant-borderWidth, 0px))"
    }, ownerState.startAction && {
      "--internal-startActionWidth": "2rem"
    }, ownerState.endAction && {
      "--internal-endActionWidth": "2.5rem"
    }, {
      boxSizing: "border-box",
      borderRadius: "var(--List-item-radius)",
      display: "flex",
      flex: "none",
      position: "relative",
      paddingBlockStart: ownerState.nested ? 0 : "var(--List-item-paddingY)",
      paddingBlockEnd: ownerState.nested ? 0 : "var(--List-item-paddingY)",
      paddingInlineStart: "var(--List-item-paddingLeft)",
      paddingInlineEnd: "var(--List-item-paddingRight)"
    }, ownerState["data-first-child"] === void 0 && _extends({}, ownerState.row ? {
      marginInlineStart: "var(--List-gap)"
    } : {
      marginBlockStart: "var(--List-gap)"
    }), ownerState.row && ownerState.wrap && {
      marginInlineStart: "var(--List-gap)",
      marginBlockStart: "var(--List-gap)"
    }, {
      minBlockSize: "var(--List-item-minHeight)",
      fontSize: "var(--List-item-fontSize)",
      fontFamily: theme.vars.fontFamily.body
    }, ownerState.sticky && {
      position: "sticky",
      top: "var(--List-item-stickyTop, 0px)",
      zIndex: 1,
      background: "var(--List-item-stickyBackground)"
    }),
    (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]
  ];
});
var ListItemStartAction = styled_default("div", {
  name: "JoyListItem",
  slot: "StartAction",
  overridesResolver: (props, styles) => styles.startAction
})(({
  ownerState
}) => ({
  display: "inherit",
  position: "absolute",
  top: ownerState.nested ? "calc(var(--List-item-minHeight) / 2)" : "50%",
  left: 0,
  transform: "translate(var(--List-item-startActionTranslateX), -50%)",
  zIndex: 1
}));
var ListItemEndAction = styled_default("div", {
  name: "JoyListItem",
  slot: "StartAction",
  overridesResolver: (props, styles) => styles.startAction
})(({
  ownerState
}) => ({
  display: "inherit",
  position: "absolute",
  top: ownerState.nested ? "calc(var(--List-item-minHeight) / 2)" : "50%",
  right: 0,
  transform: "translate(var(--List-item-endActionTranslateX), -50%)"
}));
var ListItem = React46.forwardRef(function ListItem2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyListItem"
  });
  const menuContext = React46.useContext(MenuUnstyledContext_default);
  const listComponent = React46.useContext(ComponentListContext_default);
  const row = React46.useContext(RowListContext_default);
  const wrap = React46.useContext(WrapListContext_default);
  const nesting = React46.useContext(NestedListContext_default);
  const {
    component: componentProp,
    className,
    children,
    nested = false,
    sticky = false,
    variant = "plain",
    color = "neutral",
    startAction,
    endAction,
    role: roleProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded34);
  const [subheaderId, setSubheaderId] = React46.useState("");
  const [listElement, listRole] = (listComponent == null ? void 0 : listComponent.split(":")) || ["", ""];
  const component = componentProp || (listElement && !listElement.match(/^(ul|ol|menu)$/) ? "div" : void 0);
  let role = menuContext ? "none" : void 0;
  if (listComponent) {
    role = {
      menu: "none",
      menubar: "none",
      group: "presentation"
    }[listRole];
  }
  if (roleProp) {
    role = roleProp;
  }
  const ownerState = _extends({
    sticky,
    startAction,
    endAction,
    row,
    wrap,
    variant,
    color,
    nesting,
    nested,
    component,
    role
  }, props);
  const classes = useUtilityClasses27(ownerState);
  return (0, import_jsx_runtime47.jsx)(ListSubheaderContext_default.Provider, {
    value: setSubheaderId,
    children: (0, import_jsx_runtime47.jsx)(NestedListContext_default.Provider, {
      value: nested ? subheaderId || true : false,
      children: (0, import_jsx_runtime48.jsxs)(ListItemRoot, _extends({
        ref,
        as: component,
        className: clsx_m_default(classes.root, className),
        ownerState,
        role
      }, other, {
        children: [startAction && (0, import_jsx_runtime47.jsx)(ListItemStartAction, {
          className: classes.startAction,
          ownerState,
          children: startAction
        }), React46.Children.map(children, (child, index) => React46.isValidElement(child) ? React46.cloneElement(child, _extends({}, index === 0 && {
          "data-first-child": ""
        }, isMuiElement(child, ["ListItem"]) && {
          component: child.props.component || "div"
        })) : child), endAction && (0, import_jsx_runtime47.jsx)(ListItemEndAction, {
          className: classes.endAction,
          ownerState,
          children: endAction
        })]
      }))
    })
  });
});
true ? ListItem.propTypes = {
  children: import_prop_types31.default.node,
  className: import_prop_types31.default.string,
  color: import_prop_types31.default.oneOfType([import_prop_types31.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types31.default.string]),
  component: import_prop_types31.default.elementType,
  endAction: import_prop_types31.default.node,
  nested: import_prop_types31.default.bool,
  role: import_prop_types31.default.string,
  startAction: import_prop_types31.default.node,
  sticky: import_prop_types31.default.bool,
  sx: import_prop_types31.default.oneOfType([import_prop_types31.default.arrayOf(import_prop_types31.default.oneOfType([import_prop_types31.default.func, import_prop_types31.default.object, import_prop_types31.default.bool])), import_prop_types31.default.func, import_prop_types31.default.object]),
  variant: import_prop_types31.default.oneOfType([import_prop_types31.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types31.default.string])
} : void 0;
ListItem.muiName = "ListItem";
var ListItem_default = ListItem;

// node_modules/@mui/joy/ListItemButton/ListItemButton.js
init_objectWithoutPropertiesLoose();
init_extends();
var React48 = __toESM(require_react());
var import_prop_types32 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_composeClasses();
init_ButtonUnstyled();

// node_modules/@mui/joy/ListItemButton/listItemButtonClasses.js
function getListItemButtonUtilityClass(slot) {
  return generateUtilityClass2("JoyListItemButton", slot);
}
var listItemButtonClasses = generateUtilityClasses2("JoyListItemButton", ["root", "horizontal", "vertical", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "colorContext", "focusVisible", "disabled", "selected", "variantPlain", "variantSoft", "variantOutlined", "variantSolid"]);
var listItemButtonClasses_default = listItemButtonClasses;

// node_modules/@mui/joy/ListItemButton/ListItemButtonOrientationContext.js
var React47 = __toESM(require_react());
var ListItemButtonOrientationContext = React47.createContext("horizontal");
var ListItemButtonOrientationContext_default = ListItemButtonOrientationContext;

// node_modules/@mui/joy/ListItemButton/ListItemButton.js
var import_jsx_runtime49 = __toESM(require_jsx_runtime());
var _excluded35 = ["children", "className", "action", "component", "orientation", "role", "selected", "color", "variant"];
var useUtilityClasses28 = (ownerState) => {
  const {
    color,
    disabled,
    focusVisible,
    focusVisibleClassName,
    selected,
    variant
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", color && `color${capitalize(color)}`, selected && "selected", variant && `variant${capitalize(variant)}`]
  };
  const composedClasses = composeClasses(slots, getListItemButtonUtilityClass, {});
  if (focusVisible && focusVisibleClassName) {
    composedClasses.root += ` ${focusVisibleClassName}`;
  }
  return composedClasses;
};
var ListItemButtonRoot = styled_default("div", {
  name: "JoyListItemButton",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette, _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;
  return [_extends({}, ownerState.selected && {
    "--List-decorator-color": "initial"
  }, ownerState.disabled && {
    "--List-decorator-color": (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette[`${ownerState.variant}DisabledColor`]
  }, {
    WebkitTapHighlightColor: "transparent",
    boxSizing: "border-box",
    position: "relative",
    display: "flex",
    flexDirection: ownerState.orientation === "vertical" ? "column" : "row",
    alignItems: "center",
    textAlign: "initial",
    textDecoration: "initial",
    backgroundColor: "initial",
    marginInline: "var(--List-itemButton-marginInline)",
    marginBlock: "var(--List-itemButton-marginBlock)"
  }, ownerState["data-first-child"] === void 0 && {
    marginInlineStart: ownerState.row ? "var(--List-gap)" : void 0,
    marginBlockStart: ownerState.row ? void 0 : "var(--List-gap)"
  }, {
    paddingBlock: "calc(var(--List-item-paddingY) - var(--variant-borderWidth))",
    paddingInlineStart: "calc(var(--List-item-paddingLeft) + var(--List-item-startActionWidth, var(--internal-startActionWidth, 0px)))",
    paddingInlineEnd: "calc(var(--List-item-paddingRight) + var(--List-item-endActionWidth, var(--internal-endActionWidth, 0px)))",
    minBlockSize: "var(--List-item-minHeight)",
    border: "none",
    borderRadius: "var(--List-item-radius)",
    flexGrow: ownerState.row ? 0 : 1,
    flexBasis: ownerState.row ? "auto" : "0%",
    flexShrink: 0,
    minInlineSize: 0,
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    fontSize: "var(--List-item-fontSize)",
    fontFamily: theme.vars.fontFamily.body
  }, ownerState.selected && {
    fontWeight: theme.vars.fontWeight.md
  }, {
    [theme.focus.selector]: theme.focus.default
  }), (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {
    "&:hover": (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color]
  }, {
    "&:active": (_theme$variants3 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants3[ownerState.color]
  }, {
    [`&.${listItemButtonClasses_default.disabled}`]: (_theme$variants4 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants4[ownerState.color]
  }];
});
var ListItemButton = React48.forwardRef(function ListItemButton2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyListItemButton"
  });
  const row = React48.useContext(RowListContext_default);
  const {
    children,
    className,
    action,
    component = "div",
    orientation = "horizontal",
    role,
    selected = false,
    color = selected ? "primary" : "neutral",
    variant = "plain"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded35);
  const buttonRef = React48.useRef(null);
  const handleRef = useForkRef(buttonRef, ref);
  const {
    focusVisible,
    setFocusVisible,
    getRootProps
  } = useButton(_extends({}, props, {
    ref: handleRef
  }));
  React48.useImperativeHandle(action, () => ({
    focusVisible: () => {
      var _buttonRef$current;
      setFocusVisible(true);
      (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();
    }
  }), [setFocusVisible]);
  const ownerState = _extends({}, props, {
    component,
    color,
    focusVisible,
    orientation,
    row,
    selected,
    variant
  });
  const classes = useUtilityClasses28(ownerState);
  const rootProps = getRootProps();
  return (0, import_jsx_runtime49.jsx)(ListItemButtonOrientationContext_default.Provider, {
    value: orientation,
    children: (0, import_jsx_runtime49.jsx)(ListItemButtonRoot, _extends({
      as: component,
      className: clsx_m_default(classes.root, className),
      ownerState
    }, other, rootProps, {
      role: role != null ? role : rootProps.role,
      children
    }))
  });
});
true ? ListItemButton.propTypes = {
  action: import_prop_types32.default.oneOfType([import_prop_types32.default.func, import_prop_types32.default.shape({
    current: import_prop_types32.default.shape({
      focusVisible: import_prop_types32.default.func.isRequired
    })
  })]),
  autoFocus: import_prop_types32.default.bool,
  children: import_prop_types32.default.node,
  classes: import_prop_types32.default.object,
  className: import_prop_types32.default.string,
  color: import_prop_types32.default.oneOfType([import_prop_types32.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types32.default.string]),
  component: import_prop_types32.default.elementType,
  disabled: import_prop_types32.default.bool,
  focusVisibleClassName: import_prop_types32.default.string,
  orientation: import_prop_types32.default.oneOf(["horizontal", "vertical"]),
  role: import_prop_types32.default.string,
  selected: import_prop_types32.default.bool,
  sx: import_prop_types32.default.oneOfType([import_prop_types32.default.arrayOf(import_prop_types32.default.oneOfType([import_prop_types32.default.func, import_prop_types32.default.object, import_prop_types32.default.bool])), import_prop_types32.default.func, import_prop_types32.default.object]),
  tabIndex: import_prop_types32.default.number,
  variant: import_prop_types32.default.oneOfType([import_prop_types32.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types32.default.string])
} : void 0;
var ListItemButton_default = ListItemButton;

// node_modules/@mui/joy/ListItemContent/ListItemContent.js
init_extends();
init_objectWithoutPropertiesLoose();
var React49 = __toESM(require_react());
var import_prop_types33 = __toESM(require_prop_types());
init_clsx_m();
init_composeClasses();

// node_modules/@mui/joy/ListItemContent/listItemContentClasses.js
function getListItemContentUtilityClass(slot) {
  return generateUtilityClass2("JoyListItemContent", slot);
}
var listItemContentClasses = generateUtilityClasses2("JoyListItemContent", ["root"]);
var listItemContentClasses_default = listItemContentClasses;

// node_modules/@mui/joy/ListItemContent/ListItemContent.js
var import_jsx_runtime50 = __toESM(require_jsx_runtime());
var _excluded36 = ["component", "className", "children"];
var useUtilityClasses29 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getListItemContentUtilityClass, {});
};
var ListItemContentRoot = styled_default("div", {
  name: "JoyListItemContent",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})({
  flex: "1 1 auto",
  minWidth: 0
});
var ListItemContent = React49.forwardRef(function ListItemContent2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyListItemContent"
  });
  const {
    component,
    className,
    children
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded36);
  const ownerState = _extends({}, props);
  const classes = useUtilityClasses29();
  return (0, import_jsx_runtime50.jsx)(ListItemContentRoot, _extends({
    ref,
    as: component,
    className: clsx_m_default(classes.root, className),
    ownerState
  }, other, {
    children
  }));
});
true ? ListItemContent.propTypes = {
  children: import_prop_types33.default.node,
  classes: import_prop_types33.default.object,
  className: import_prop_types33.default.string,
  component: import_prop_types33.default.elementType,
  sx: import_prop_types33.default.oneOfType([import_prop_types33.default.arrayOf(import_prop_types33.default.oneOfType([import_prop_types33.default.func, import_prop_types33.default.object, import_prop_types33.default.bool])), import_prop_types33.default.func, import_prop_types33.default.object])
} : void 0;
var ListItemContent_default = ListItemContent;

// node_modules/@mui/joy/ListItemDecorator/ListItemDecorator.js
init_objectWithoutPropertiesLoose();
init_extends();
var React50 = __toESM(require_react());
var import_prop_types34 = __toESM(require_prop_types());
init_clsx_m();
init_composeClasses();

// node_modules/@mui/joy/ListItemDecorator/listItemDecoratorClasses.js
function getListItemDecoratorUtilityClass(slot) {
  return generateUtilityClass2("JoyListItemDecorator", slot);
}
var listItemDecoratorClasses = generateUtilityClasses2("JoyListItemDecorator", ["root"]);
var listItemDecoratorClasses_default = listItemDecoratorClasses;

// node_modules/@mui/joy/ListItemDecorator/ListItemDecorator.js
var import_jsx_runtime51 = __toESM(require_jsx_runtime());
var _excluded37 = ["component", "className", "children"];
var useUtilityClasses30 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getListItemDecoratorUtilityClass, {});
};
var ListItemDecoratorRoot = styled_default("span", {
  name: "JoyListItemDecorator",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  ownerState
}) => _extends({
  boxSizing: "border-box",
  display: "inline-flex",
  alignItems: "center",
  color: `var(--List-decorator-color)`
}, ownerState.parentOrientation === "horizontal" ? {
  minInlineSize: "var(--List-decorator-size)"
} : {
  minBlockSize: "var(--List-decorator-size)"
}));
var ListItemDecorator = React50.forwardRef(function ListItemDecorator2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyListItemDecorator"
  });
  const {
    component,
    className,
    children
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded37);
  const parentOrientation = React50.useContext(ListItemButtonOrientationContext_default);
  const ownerState = _extends({
    parentOrientation
  }, props);
  const classes = useUtilityClasses30();
  return (0, import_jsx_runtime51.jsx)(ListItemDecoratorRoot, _extends({
    ref,
    as: component,
    className: clsx_m_default(classes.root, className),
    ownerState
  }, other, {
    children
  }));
});
true ? ListItemDecorator.propTypes = {
  children: import_prop_types34.default.node,
  classes: import_prop_types34.default.object,
  className: import_prop_types34.default.string,
  component: import_prop_types34.default.elementType,
  sx: import_prop_types34.default.oneOfType([import_prop_types34.default.arrayOf(import_prop_types34.default.oneOfType([import_prop_types34.default.func, import_prop_types34.default.object, import_prop_types34.default.bool])), import_prop_types34.default.func, import_prop_types34.default.object])
} : void 0;
var ListItemDecorator_default = ListItemDecorator;

// node_modules/@mui/joy/Menu/Menu.js
init_objectWithoutPropertiesLoose();
init_extends();
var React51 = __toESM(require_react());
var import_prop_types35 = __toESM(require_prop_types());
init_esm();
init_composeClasses();
init_utils();
init_MenuUnstyled();
init_PopperUnstyled();

// node_modules/@mui/joy/Menu/menuClasses.js
function getMenuUtilityClass(slot) {
  return generateUtilityClass2("JoyMenu", slot);
}
var menuClasses = generateUtilityClasses2("JoyMenu", ["root", "expanded", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg"]);
var menuClasses_default = menuClasses;

// node_modules/@mui/joy/Menu/Menu.js
var import_jsx_runtime52 = __toESM(require_jsx_runtime());
var _excluded38 = ["actions", "anchorEl", "children", "component", "color", "disablePortal", "keepMounted", "id", "onClose", "open", "modifiers", "variant", "size"];
var useUtilityClasses31 = (ownerState) => {
  const {
    open,
    variant,
    color,
    size
  } = ownerState;
  const slots = {
    root: ["root", open && "expanded", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getMenuUtilityClass, {});
};
var MenuRoot = styled_default(ListRoot, {
  name: "JoyMenu",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  const variantStyle = (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color];
  return _extends({
    "--focus-outline-offset": `calc(${theme.vars.focus.thickness} * -1)`,
    "--List-radius": theme.vars.radius.sm,
    "--List-item-stickyBackground": (variantStyle == null ? void 0 : variantStyle.backgroundColor) || (variantStyle == null ? void 0 : variantStyle.background) || theme.vars.palette.background.surface,
    "--List-item-stickyTop": "calc(var(--List-padding, var(--List-divider-gap)) * -1)"
  }, scopedVariables, {
    boxShadow: theme.vars.shadow.md,
    overflow: "auto",
    zIndex: 1300
  }, !(variantStyle != null && variantStyle.backgroundColor) && {
    backgroundColor: theme.vars.palette.background.surface
  });
});
var Menu = React51.forwardRef(function Menu2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyMenu"
  });
  const {
    actions,
    anchorEl,
    children,
    component,
    color = "neutral",
    disablePortal = false,
    keepMounted = false,
    id,
    onClose,
    open = false,
    modifiers,
    variant = "outlined",
    size = "md"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded38);
  const cachedModifiers = React51.useMemo(() => [{
    name: "offset",
    options: {
      offset: [0, 4]
    }
  }, ...modifiers || []], [modifiers]);
  const {
    registerItem,
    unregisterItem,
    getListboxProps,
    getItemProps,
    getItemState,
    highlightFirstItem,
    highlightLastItem
  } = useMenu({
    open,
    onClose,
    listboxId: id
  });
  React51.useImperativeHandle(actions, () => ({
    highlightFirstItem,
    highlightLastItem
  }), [highlightFirstItem, highlightLastItem]);
  const ownerState = _extends({}, props, {
    disablePortal,
    color,
    variant,
    size,
    modifiers,
    open,
    nesting: false,
    row: false
  });
  const classes = useUtilityClasses31(ownerState);
  const rootProps = useSlotProps({
    elementType: MenuRoot,
    externalForwardedProps: other,
    getSlotProps: getListboxProps,
    externalSlotProps: {},
    additionalProps: {
      anchorEl,
      open,
      disablePortal,
      keepMounted,
      ref,
      component: MenuRoot,
      as: component,
      modifiers: cachedModifiers
    },
    className: classes.root,
    ownerState
  });
  const contextValue = React51.useMemo(() => ({
    registerItem,
    unregisterItem,
    getItemState,
    getItemProps,
    open
  }), [getItemProps, getItemState, open, registerItem, unregisterItem]);
  return (0, import_jsx_runtime52.jsx)(PopperUnstyled_default, _extends({}, rootProps, {
    children: (0, import_jsx_runtime52.jsx)(MenuUnstyledContext_default.Provider, {
      value: contextValue,
      children: (0, import_jsx_runtime52.jsx)(ListProvider_default, {
        nested: true,
        children
      })
    })
  }));
});
true ? Menu.propTypes = {
  actions: refType_default,
  anchorEl: import_prop_types35.default.oneOfType([HTMLElementType, import_prop_types35.default.func]),
  children: import_prop_types35.default.node,
  color: import_prop_types35.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]),
  component: import_prop_types35.default.elementType,
  disablePortal: import_prop_types35.default.bool,
  id: import_prop_types35.default.string,
  keepMounted: import_prop_types35.default.bool,
  modifiers: import_prop_types35.default.arrayOf(import_prop_types35.default.shape({
    data: import_prop_types35.default.object,
    effect: import_prop_types35.default.func,
    enabled: import_prop_types35.default.bool,
    fn: import_prop_types35.default.func,
    name: import_prop_types35.default.any,
    options: import_prop_types35.default.object,
    phase: import_prop_types35.default.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: import_prop_types35.default.arrayOf(import_prop_types35.default.string),
    requiresIfExists: import_prop_types35.default.arrayOf(import_prop_types35.default.string)
  })),
  onClose: import_prop_types35.default.func,
  open: import_prop_types35.default.bool,
  size: import_prop_types35.default.oneOfType([import_prop_types35.default.oneOf(["sm", "md", "lg"]), import_prop_types35.default.string]),
  sx: import_prop_types35.default.oneOfType([import_prop_types35.default.arrayOf(import_prop_types35.default.oneOfType([import_prop_types35.default.func, import_prop_types35.default.object, import_prop_types35.default.bool])), import_prop_types35.default.func, import_prop_types35.default.object]),
  variant: import_prop_types35.default.oneOfType([import_prop_types35.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types35.default.string])
} : void 0;
var Menu_default = Menu;

// node_modules/@mui/joy/MenuItem/MenuItem.js
init_extends();
init_objectWithoutPropertiesLoose();
var React52 = __toESM(require_react());
var import_prop_types36 = __toESM(require_prop_types());
init_esm();
init_composeClasses();
init_utils();
init_MenuItemUnstyled();

// node_modules/@mui/joy/MenuItem/menuItemClasses.js
function getMenuItemUtilityClass(slot) {
  return generateUtilityClass2("JoyMenuItem", slot);
}
var menuItemClasses = generateUtilityClasses2("JoyMenuItem", ["root", "focusVisible", "disabled", "selected", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantSoft", "variantOutlined", "variantSolid"]);
var menuItemClasses_default = menuItemClasses;

// node_modules/@mui/joy/MenuItem/MenuItem.js
var import_jsx_runtime53 = __toESM(require_jsx_runtime());
var _excluded39 = ["children", "disabled", "component", "selected", "color", "variant"];
var useUtilityClasses32 = (ownerState) => {
  const {
    focusVisible,
    disabled,
    selected,
    color,
    variant
  } = ownerState;
  const slots = {
    root: ["root", focusVisible && "focusVisible", disabled && "disabled", selected && "selected", color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`]
  };
  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, {});
  return composedClasses;
};
var MenuItemRoot = styled_default(ListItemButtonRoot, {
  name: "JoyMenuItem",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})({});
var MenuItem = React52.forwardRef(function MenuItem2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyMenuItem"
  });
  const row = React52.useContext(RowListContext_default);
  const {
    children,
    disabled: disabledProp = false,
    component = "li",
    selected = false,
    color = selected ? "primary" : "neutral",
    variant = "plain"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded39);
  const {
    getRootProps,
    disabled,
    focusVisible
  } = useMenuItem({
    disabled: disabledProp,
    ref
  });
  const ownerState = _extends({}, props, {
    component,
    color,
    disabled,
    focusVisible,
    selected,
    row,
    variant
  });
  const classes = useUtilityClasses32(ownerState);
  const rootProps = useSlotProps({
    elementType: MenuItemRoot,
    getSlotProps: getRootProps,
    externalSlotProps: {},
    additionalProps: {
      as: component
    },
    externalForwardedProps: other,
    className: classes.root,
    ownerState
  });
  return (0, import_jsx_runtime53.jsx)(MenuItemRoot, _extends({}, rootProps, {
    children
  }));
});
true ? MenuItem.propTypes = {
  children: import_prop_types36.default.node,
  color: import_prop_types36.default.oneOfType([import_prop_types36.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types36.default.string]),
  component: import_prop_types36.default.elementType,
  disabled: import_prop_types36.default.bool,
  selected: import_prop_types36.default.bool,
  variant: import_prop_types36.default.oneOfType([import_prop_types36.default.oneOf(["contained", "light", "outlined", "text"]), import_prop_types36.default.string])
} : void 0;
var MenuItem_default = MenuItem;

// node_modules/@mui/joy/MenuList/MenuList.js
init_objectWithoutPropertiesLoose();
init_extends();
var React53 = __toESM(require_react());
var import_prop_types37 = __toESM(require_prop_types());
init_esm();
init_composeClasses();
init_utils();
init_MenuUnstyled();

// node_modules/@mui/joy/MenuList/menuListClasses.js
function getMenuListUtilityClass(slot) {
  return generateUtilityClass2("JoyMenuList", slot);
}
var menuClasses2 = generateUtilityClasses2("JoyMenuList", ["root", "nested", "sizeSm", "sizeMd", "sizeLg", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var menuListClasses_default = menuClasses2;

// node_modules/@mui/joy/MenuList/MenuList.js
var import_jsx_runtime54 = __toESM(require_jsx_runtime());
var _excluded40 = ["actions", "id", "component", "children", "size", "variant", "color"];
var useUtilityClasses33 = (ownerState) => {
  const {
    variant,
    color,
    size
  } = ownerState;
  const slots = {
    root: ["root", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getMenuListUtilityClass, {});
};
var MenuListRoot = styled_default(ListRoot, {
  name: "MuiMenuList",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  const variantStyle = (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color];
  return _extends({
    "--focus-outline-offset": `calc(${theme.vars.focus.thickness} * -1)`,
    "--List-radius": theme.vars.radius.sm,
    "--List-item-stickyBackground": (variantStyle == null ? void 0 : variantStyle.backgroundColor) || (variantStyle == null ? void 0 : variantStyle.background) || theme.vars.palette.background.surface,
    "--List-item-stickyTop": "calc(var(--List-padding, var(--List-divider-gap)) * -1)"
  }, scopedVariables, {
    overflow: "auto"
  }, !(variantStyle != null && variantStyle.backgroundColor) && {
    backgroundColor: theme.vars.palette.background.surface
  });
});
var MenuList = React53.forwardRef(function MenuList2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiMenuList"
  });
  const {
    actions,
    id: idProp,
    component,
    children,
    size = "md",
    variant = "outlined",
    color = "neutral"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded40);
  const {
    registerItem,
    unregisterItem,
    getListboxProps,
    getItemProps,
    getItemState,
    highlightFirstItem,
    highlightLastItem
  } = useMenu({
    listboxRef: ref,
    listboxId: idProp
  });
  React53.useImperativeHandle(actions, () => ({
    highlightFirstItem,
    highlightLastItem
  }), [highlightFirstItem, highlightLastItem]);
  const ownerState = _extends({}, props, {
    variant,
    color,
    size,
    nesting: false,
    row: false
  });
  const classes = useUtilityClasses33(ownerState);
  const listboxProps = useSlotProps({
    elementType: MenuListRoot,
    getSlotProps: getListboxProps,
    externalSlotProps: {},
    externalForwardedProps: other,
    additionalProps: {
      as: component
    },
    ownerState,
    className: classes.root
  });
  const contextValue = React53.useMemo(() => ({
    registerItem,
    unregisterItem,
    getItemState,
    getItemProps,
    getListboxProps,
    open: true
  }), [getItemProps, getItemState, getListboxProps, registerItem, unregisterItem]);
  return (0, import_jsx_runtime54.jsx)(MenuListRoot, _extends({}, listboxProps, {
    children: (0, import_jsx_runtime54.jsx)(MenuUnstyledContext_default.Provider, {
      value: contextValue,
      children: (0, import_jsx_runtime54.jsx)(ListProvider_default, {
        nested: true,
        children
      })
    })
  }));
});
true ? MenuList.propTypes = {
  actions: import_prop_types37.default.oneOfType([import_prop_types37.default.func, import_prop_types37.default.shape({
    current: import_prop_types37.default.shape({
      highlightFirstItem: import_prop_types37.default.func.isRequired,
      highlightLastItem: import_prop_types37.default.func.isRequired
    })
  })]),
  children: import_prop_types37.default.node,
  color: import_prop_types37.default.oneOfType([import_prop_types37.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types37.default.string]),
  component: import_prop_types37.default.elementType,
  id: import_prop_types37.default.string,
  size: import_prop_types37.default.oneOfType([import_prop_types37.default.oneOf(["sm", "md", "lg"]), import_prop_types37.default.string]),
  sx: import_prop_types37.default.oneOfType([import_prop_types37.default.arrayOf(import_prop_types37.default.oneOfType([import_prop_types37.default.func, import_prop_types37.default.object, import_prop_types37.default.bool])), import_prop_types37.default.func, import_prop_types37.default.object]),
  variant: import_prop_types37.default.oneOfType([import_prop_types37.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types37.default.string])
} : void 0;
var MenuList_default = MenuList;

// node_modules/@mui/joy/Modal/Modal.js
init_objectWithoutPropertiesLoose();
init_extends();
var React55 = __toESM(require_react());
var import_prop_types38 = __toESM(require_prop_types());
init_esm();
init_utils();
init_composeClasses();
init_Portal();
init_FocusTrap();
init_ModalUnstyled();

// node_modules/@mui/joy/Modal/modalClasses.js
function getModalUtilityClass(slot) {
  return generateUtilityClass2("JoyModal", slot);
}
var modalClasses = generateUtilityClasses2("JoyModal", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var modalClasses_default = modalClasses;

// node_modules/@mui/joy/Modal/CloseModalContext.js
var React54 = __toESM(require_react());
var CloseModalContext = React54.createContext(void 0);
var CloseModalContext_default = CloseModalContext;

// node_modules/@mui/joy/Modal/Modal.js
var import_jsx_runtime55 = __toESM(require_jsx_runtime());
var import_jsx_runtime56 = __toESM(require_jsx_runtime());
var _excluded41 = ["children", "component", "componentsProps", "container", "disableAutoFocus", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "onClose", "onKeyDown", "open"];
function ariaHidden(element, show) {
  if (show) {
    element.setAttribute("aria-hidden", "true");
  } else {
    element.removeAttribute("aria-hidden");
  }
}
var useUtilityClasses34 = (ownerState) => {
  const {
    open
  } = ownerState;
  const slots = {
    root: ["root", !open && "hidden"]
  };
  return composeClasses(slots, getModalUtilityClass, {});
};
function getContainer(container) {
  return typeof container === "function" ? container() : container;
}
var manager = new ModalManager();
var ModalRoot = styled_default("div", {
  name: "JoyModal",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  ownerState
}) => _extends({
  position: "fixed",
  zIndex: 9999,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0
}, !ownerState.open && {
  visibility: "hidden"
}));
var ModalBackdrop = styled_default("div", {
  name: "JoyModal",
  slot: "Backdrop",
  overridesResolver: (props, styles) => styles.backdrop
})(({
  theme,
  ownerState
}) => _extends({
  zIndex: -1,
  position: "fixed",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: theme.vars.palette.background.backdrop,
  WebkitTapHighlightColor: "transparent"
}, ownerState.open && {
  backdropFilter: "blur(8px)"
}));
var ModalUnstyled = React55.forwardRef(function ModalUnstyled2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyModal"
  });
  const {
    children,
    component = "div",
    componentsProps = {},
    container,
    disableAutoFocus = false,
    disableEnforceFocus = false,
    disableEscapeKeyDown = false,
    disablePortal = false,
    disableRestoreFocus = false,
    disableScrollLock = false,
    hideBackdrop = false,
    keepMounted = false,
    onClose,
    onKeyDown,
    open
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded41);
  const modal = React55.useRef({});
  const mountNodeRef = React55.useRef(null);
  const modalRef = React55.useRef(null);
  const handleRef = useForkRef(modalRef, ref);
  let ariaHiddenProp = true;
  if (props["aria-hidden"] === "false" || typeof props["aria-hidden"] === "boolean" && !props["aria-hidden"]) {
    ariaHiddenProp = false;
  }
  const getDoc = () => ownerDocument(mountNodeRef.current);
  const getModal = () => {
    modal.current.modalRef = modalRef.current;
    modal.current.mount = mountNodeRef.current;
    return modal.current;
  };
  const handleMounted = () => {
    manager.mount(getModal(), {
      disableScrollLock
    });
    if (modalRef.current) {
      modalRef.current.scrollTop = 0;
    }
  };
  const handleOpen = useEventCallback(() => {
    const resolvedContainer = getContainer(container) || getDoc().body;
    manager.add(getModal(), resolvedContainer);
    if (modalRef.current) {
      handleMounted();
    }
  });
  const isTopModal = () => manager.isTopModal(getModal());
  const handlePortalRef = useEventCallback((node) => {
    mountNodeRef.current = node;
    if (!node) {
      return;
    }
    if (open && isTopModal()) {
      handleMounted();
    } else if (modalRef.current) {
      ariaHidden(modalRef.current, ariaHiddenProp);
    }
  });
  const handleClose = React55.useCallback(() => {
    manager.remove(getModal(), ariaHiddenProp);
  }, [ariaHiddenProp]);
  React55.useEffect(() => {
    return () => {
      handleClose();
    };
  }, [handleClose]);
  React55.useEffect(() => {
    if (open) {
      handleOpen();
    } else {
      handleClose();
    }
  }, [open, handleClose, handleOpen]);
  const ownerState = _extends({}, props, {
    disableAutoFocus,
    disableEnforceFocus,
    disableEscapeKeyDown,
    disablePortal,
    disableRestoreFocus,
    disableScrollLock,
    hideBackdrop,
    keepMounted
  });
  const classes = useUtilityClasses34(ownerState);
  const handleBackdropClick = (event) => {
    if (event.target !== event.currentTarget) {
      return;
    }
    if (onClose) {
      onClose(event, "backdropClick");
    }
  };
  const handleKeyDown = (event) => {
    if (onKeyDown) {
      onKeyDown(event);
    }
    if (event.key !== "Escape" || !isTopModal()) {
      return;
    }
    if (!disableEscapeKeyDown) {
      event.stopPropagation();
      if (onClose) {
        onClose(event, "escapeKeyDown");
      }
    }
  };
  const rootProps = useSlotProps({
    elementType: ModalRoot,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      as: component,
      ref: handleRef,
      role: "presentation",
      onKeyDown: handleKeyDown
    },
    className: classes.root,
    ownerState
  });
  const backdropProps = useSlotProps({
    elementType: ModalBackdrop,
    externalSlotProps: componentsProps.backdrop,
    additionalProps: {
      "aria-hidden": true,
      onClick: handleBackdropClick,
      open
    },
    ownerState
  });
  if (!keepMounted && !open) {
    return null;
  }
  return (0, import_jsx_runtime55.jsx)(CloseModalContext_default.Provider, {
    value: onClose,
    children: (0, import_jsx_runtime55.jsx)(Portal_default, {
      ref: handlePortalRef,
      container,
      disablePortal,
      children: (0, import_jsx_runtime56.jsxs)(ModalRoot, _extends({}, rootProps, {
        children: [!hideBackdrop ? (0, import_jsx_runtime55.jsx)(ModalBackdrop, _extends({}, backdropProps)) : null, (0, import_jsx_runtime55.jsx)(FocusTrap_default, {
          disableEnforceFocus,
          disableAutoFocus,
          disableRestoreFocus,
          isEnabled: isTopModal,
          open,
          children: React55.Children.only(children) && React55.cloneElement(children, _extends({}, children.props.tabIndex === void 0 && {
            tabIndex: -1
          }))
        })]
      }))
    })
  });
});
true ? ModalUnstyled.propTypes = {
  children: elementAcceptingRef_default.isRequired,
  classes: import_prop_types38.default.object,
  closeAfterTransition: import_prop_types38.default.bool,
  component: import_prop_types38.default.elementType,
  components: import_prop_types38.default.shape({
    Backdrop: import_prop_types38.default.elementType,
    Root: import_prop_types38.default.elementType
  }),
  componentsProps: import_prop_types38.default.shape({
    backdrop: import_prop_types38.default.oneOfType([import_prop_types38.default.func, import_prop_types38.default.object]),
    root: import_prop_types38.default.oneOfType([import_prop_types38.default.func, import_prop_types38.default.object])
  }),
  container: import_prop_types38.default.oneOfType([HTMLElementType, import_prop_types38.default.func]),
  disableAutoFocus: import_prop_types38.default.bool,
  disableEnforceFocus: import_prop_types38.default.bool,
  disableEscapeKeyDown: import_prop_types38.default.bool,
  disablePortal: import_prop_types38.default.bool,
  disableRestoreFocus: import_prop_types38.default.bool,
  disableScrollLock: import_prop_types38.default.bool,
  hideBackdrop: import_prop_types38.default.bool,
  keepMounted: import_prop_types38.default.bool,
  onBackdropClick: import_prop_types38.default.func,
  onClose: import_prop_types38.default.func,
  onKeyDown: import_prop_types38.default.func,
  open: import_prop_types38.default.bool.isRequired
} : void 0;
var Modal_default = ModalUnstyled;

// node_modules/@mui/joy/ModalClose/ModalClose.js
init_objectWithoutPropertiesLoose();
init_extends();
var React59 = __toESM(require_react());
var import_prop_types39 = __toESM(require_prop_types());
init_base();
init_esm();
init_utils();
init_ButtonUnstyled();

// node_modules/@mui/joy/ModalClose/modalCloseClasses.js
function getModalCloseUtilityClass(slot) {
  return generateUtilityClass2("JoyModalClose", slot);
}
var modalCloseClasses = generateUtilityClasses2("JoyModalClose", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg"]);
var modalCloseClasses_default = modalCloseClasses;

// node_modules/@mui/joy/internal/svg-icons/Close.js
var React56 = __toESM(require_react());
var import_jsx_runtime57 = __toESM(require_jsx_runtime());
var Close_default = createSvgIcon((0, import_jsx_runtime57.jsx)("path", {
  d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close");

// node_modules/@mui/joy/ModalDialog/ModalDialogSizeContext.js
var React57 = __toESM(require_react());
var ModalDialogSizeContext = React57.createContext(void 0);
var ModalDialogSizeContext_default = ModalDialogSizeContext;

// node_modules/@mui/joy/ModalDialog/ModalDialogVariantColorContext.js
var React58 = __toESM(require_react());
var ModalDialogVariantColorContext = React58.createContext(void 0);
var ModalDialogVariantColorContext_default = ModalDialogVariantColorContext;

// node_modules/@mui/joy/ModalClose/ModalClose.js
var import_jsx_runtime58 = __toESM(require_jsx_runtime());
var _CloseIcon;
var _excluded42 = ["component", "color", "variant", "size", "onClick"];
var useUtilityClasses35 = (ownerState) => {
  const {
    variant,
    color,
    disabled,
    focusVisible,
    size
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getModalCloseUtilityClass, {});
};
var ModalCloseRoot = styled_default(IconButtonRoot, {
  name: "JoyModalClose",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  ownerState,
  theme
}) => {
  var _theme$variants, _theme$variants2;
  return _extends({}, ownerState.size === "sm" && {
    "--IconButton-size": "28px"
  }, ownerState.size === "md" && {
    "--IconButton-size": "36px"
  }, ownerState.size === "lg" && {
    "--IconButton-size": "40px"
  }, {
    position: "absolute",
    top: `var(--ModalClose-inset, ${theme.spacing(1)})`,
    right: `var(--ModalClose-inset, ${theme.spacing(1)})`,
    borderRadius: `var(--ModalClose-radius, ${theme.vars.radius.sm})`
  }, !((_theme$variants = theme.variants[ownerState.variant]) != null && (_theme$variants2 = _theme$variants[ownerState.color]) != null && _theme$variants2.backgroundColor) && {
    color: theme.vars.palette.text.secondary
  });
});
var modalDialogVariantMapping = {
  plain: "plain",
  outlined: "plain",
  soft: "soft",
  solid: "solid"
};
var ModalClose = React59.forwardRef(function ModalClose2(inProps, ref) {
  var _ref, _inProps$color, _ref2, _inProps$variant, _ref3, _inProps$size;
  const props = useThemeProps2({
    props: inProps,
    name: "JoyModalClose"
  });
  const {
    component = "button",
    color: colorProp = "neutral",
    variant: variantProp = "plain",
    size: sizeProp = "md",
    onClick
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded42);
  const closeModalContext = React59.useContext(CloseModalContext_default);
  const modalDialogVariantColor = React59.useContext(ModalDialogVariantColorContext_default);
  const color = (_ref = (_inProps$color = inProps.color) != null ? _inProps$color : modalDialogVariantColor == null ? void 0 : modalDialogVariantColor.color) != null ? _ref : colorProp;
  const variant = (_ref2 = (_inProps$variant = inProps.variant) != null ? _inProps$variant : modalDialogVariantMapping[modalDialogVariantColor == null ? void 0 : modalDialogVariantColor.variant]) != null ? _ref2 : variantProp;
  const modalDialogSize = React59.useContext(ModalDialogSizeContext_default);
  const size = (_ref3 = (_inProps$size = inProps.size) != null ? _inProps$size : modalDialogSize) != null ? _ref3 : sizeProp;
  const {
    focusVisible,
    getRootProps
  } = useButton(_extends({}, props, {
    ref
  }));
  const ownerState = _extends({}, props, {
    color,
    component,
    variant,
    size,
    focusVisible
  });
  const classes = useUtilityClasses35(ownerState);
  const rootProps = useSlotProps({
    elementType: ModalCloseRoot,
    getSlotProps: getRootProps,
    externalSlotProps: _extends({
      onClick: (event) => {
        closeModalContext == null ? void 0 : closeModalContext(event, "closeClick");
        onClick == null ? void 0 : onClick(event);
      }
    }, other),
    additionalProps: {
      as: component
    },
    className: classes.root,
    ownerState
  });
  return (0, import_jsx_runtime58.jsx)(ModalCloseRoot, _extends({}, rootProps, {
    children: _CloseIcon || (_CloseIcon = (0, import_jsx_runtime58.jsx)(Close_default, {}))
  }));
});
true ? ModalClose.propTypes = {
  children: import_prop_types39.default.node,
  color: import_prop_types39.default.oneOfType([import_prop_types39.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types39.default.string]),
  component: import_prop_types39.default.elementType,
  onClick: import_prop_types39.default.func,
  size: import_prop_types39.default.oneOfType([import_prop_types39.default.oneOf(["sm", "md", "lg"]), import_prop_types39.default.string]),
  sx: import_prop_types39.default.oneOfType([import_prop_types39.default.arrayOf(import_prop_types39.default.oneOfType([import_prop_types39.default.func, import_prop_types39.default.object, import_prop_types39.default.bool])), import_prop_types39.default.func, import_prop_types39.default.object]),
  variant: import_prop_types39.default.oneOfType([import_prop_types39.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types39.default.string])
} : void 0;
var ModalClose_default = ModalClose;

// node_modules/@mui/joy/ModalDialog/ModalDialog.js
init_objectWithoutPropertiesLoose();
init_extends();
var React61 = __toESM(require_react());
var import_prop_types41 = __toESM(require_prop_types());
init_clsx_m();
init_base();
init_esm();

// node_modules/@mui/joy/Sheet/Sheet.js
init_objectWithoutPropertiesLoose();
init_extends();
init_base();
init_esm();
init_clsx_m();
var import_prop_types40 = __toESM(require_prop_types());
var React60 = __toESM(require_react());

// node_modules/@mui/joy/Sheet/sheetClasses.js
function getSheetUtilityClass(slot) {
  return generateUtilityClass2("JoySheet", slot);
}
var sheetClasses = generateUtilityClasses2("JoySheet", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var sheetClasses_default = sheetClasses;

// node_modules/@mui/joy/Sheet/Sheet.js
var import_jsx_runtime59 = __toESM(require_jsx_runtime());
var _excluded43 = ["className", "color", "component", "variant", "invertedColors"];
var useUtilityClasses36 = (ownerState) => {
  const {
    variant,
    color
  } = ownerState;
  const slots = {
    root: ["root", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]
  };
  return composeClasses(slots, getSheetUtilityClass, {});
};
var SheetRoot = styled_default("div", {
  name: "JoySheet",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$colorInversion;
  const variantStyle = (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color];
  const childRadius = resolveSxValue({
    theme,
    ownerState
  }, "borderRadius");
  return [_extends({
    "--List-item-stickyBackground": (variantStyle == null ? void 0 : variantStyle.backgroundColor) || (variantStyle == null ? void 0 : variantStyle.background) || theme.vars.palette.background.surface
  }, childRadius !== void 0 && {
    "--List-radius": `calc(${childRadius} - var(--variant-borderWidth, 0px))`,
    "--internal-action-radius": `calc(${childRadius} - var(--variant-borderWidth, 0px))`
  }, {
    transition: "box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    backgroundColor: theme.vars.palette.background.surface,
    position: "relative"
  }), variantStyle, ownerState.invertedColors && ((_theme$colorInversion = theme.colorInversion[ownerState.variant]) == null ? void 0 : _theme$colorInversion[ownerState.color])];
});
var Sheet = React60.forwardRef(function Sheet2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoySheet"
  });
  const {
    className,
    color: colorProp = "neutral",
    component = "div",
    variant = "plain",
    invertedColors = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded43);
  const {
    getColor
  } = useColorInversion(variant);
  const color = getColor(inProps.color, colorProp);
  const ownerState = _extends({}, props, {
    color,
    component,
    invertedColors,
    variant
  });
  const classes = useUtilityClasses36(ownerState);
  const result = (0, import_jsx_runtime59.jsx)(SheetRoot, _extends({
    as: component,
    ownerState,
    className: clsx_m_default(classes.root, className),
    ref
  }, other));
  if (invertedColors) {
    return (0, import_jsx_runtime59.jsx)(ColorInversionProvider, {
      variant,
      children: result
    });
  }
  return result;
});
true ? Sheet.propTypes = {
  children: import_prop_types40.default.node,
  className: import_prop_types40.default.string,
  color: import_prop_types40.default.oneOfType([import_prop_types40.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types40.default.string]),
  component: import_prop_types40.default.elementType,
  invertedColors: import_prop_types40.default.bool,
  sx: import_prop_types40.default.oneOfType([import_prop_types40.default.arrayOf(import_prop_types40.default.oneOfType([import_prop_types40.default.func, import_prop_types40.default.object, import_prop_types40.default.bool])), import_prop_types40.default.func, import_prop_types40.default.object]),
  variant: import_prop_types40.default.oneOfType([import_prop_types40.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types40.default.string])
} : void 0;
var Sheet_default = Sheet;

// node_modules/@mui/joy/ModalDialog/modalDialogClasses.js
function getModalDialogUtilityClass(slot) {
  return generateUtilityClass2("JoyModalDialog", slot);
}
var modalDialogClasses = generateUtilityClasses2("JoyModalDialog", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg", "layoutCenter", "layoutFullscreen"]);
var modalDialogClasses_default = modalDialogClasses;

// node_modules/@mui/joy/ModalDialog/ModalDialog.js
var import_jsx_runtime60 = __toESM(require_jsx_runtime());
var _excluded44 = ["className", "children", "color", "component", "variant", "size", "layout"];
var useUtilityClasses37 = (ownerState) => {
  const {
    variant,
    color,
    size,
    layout
  } = ownerState;
  const slots = {
    root: ["root", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`, layout && `layout${capitalize(layout)}`]
  };
  return composeClasses(slots, getModalDialogUtilityClass, {});
};
var ModalDialogRoot = styled_default(SheetRoot, {
  name: "JoyModalDialog",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => _extends({
  "--Divider-inset": "calc(-1 * var(--ModalDialog-padding))",
  "--ModalClose-radius": "max((var(--ModalDialog-radius) - var(--variant-borderWidth)) - var(--ModalClose-inset), min(var(--ModalClose-inset) / 2, (var(--ModalDialog-radius) - var(--variant-borderWidth)) / 2))"
}, ownerState.size === "sm" && {
  "--ModalDialog-padding": theme.spacing(1.25),
  "--ModalDialog-radius": theme.vars.radius.sm,
  "--ModalClose-inset": theme.spacing(0.75),
  fontSize: theme.vars.fontSize.sm
}, ownerState.size === "md" && {
  "--ModalDialog-padding": theme.spacing(2),
  "--ModalDialog-radius": theme.vars.radius.md,
  "--ModalClose-inset": theme.spacing(1),
  fontSize: theme.vars.fontSize.md
}, ownerState.size === "lg" && {
  "--ModalDialog-padding": theme.spacing(3),
  "--ModalDialog-radius": theme.vars.radius.md,
  "--ModalClose-inset": theme.spacing(1.5),
  fontSize: theme.vars.fontSize.md
}, {
  boxSizing: "border-box",
  boxShadow: theme.vars.shadow.md,
  borderRadius: "var(--ModalDialog-radius)",
  fontFamily: theme.vars.fontFamily.body,
  lineHeight: theme.vars.lineHeight.md,
  padding: "var(--ModalDialog-padding)",
  minWidth: "min(calc(100vw - 2 * var(--ModalDialog-padding)), var(--ModalDialog-minWidth, 300px))",
  outline: "none",
  position: "absolute"
}, ownerState.layout === "fullscreen" && {
  top: 0,
  left: 0,
  right: 0,
  bottom: 0,
  border: 0,
  borderRadius: 0
}, ownerState.layout === "center" && {
  top: "50%",
  left: "50%",
  transform: "translate(-50%, -50%)"
}));
var ModalDialog = React61.forwardRef(function ModalDialog2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyModalDialog"
  });
  const {
    className,
    children,
    color = "neutral",
    component = "div",
    variant = "outlined",
    size = "md",
    layout = "center"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded44);
  const ownerState = _extends({}, props, {
    color,
    component,
    layout,
    size,
    variant
  });
  const classes = useUtilityClasses37(ownerState);
  const contextValue = React61.useMemo(() => ({
    variant,
    color
  }), [color, variant]);
  return (0, import_jsx_runtime60.jsx)(ModalDialogSizeContext_default.Provider, {
    value: size,
    children: (0, import_jsx_runtime60.jsx)(ModalDialogVariantColorContext_default.Provider, {
      value: contextValue,
      children: (0, import_jsx_runtime60.jsx)(ModalDialogRoot, _extends({
        as: component,
        ownerState,
        className: clsx_m_default(classes.root, className),
        ref,
        role: "dialog",
        "aria-modal": "true"
      }, other, {
        children: React61.Children.map(children, (child) => {
          if (!React61.isValidElement(child)) {
            return child;
          }
          if (isMuiElement(child, ["Divider"])) {
            const extraProps = {};
            extraProps.inset = "inset" in child.props ? child.props.inset : "context";
            return React61.cloneElement(child, extraProps);
          }
          return child;
        })
      }))
    })
  });
});
true ? ModalDialog.propTypes = {
  children: import_prop_types41.default.node,
  className: import_prop_types41.default.string,
  color: import_prop_types41.default.oneOfType([import_prop_types41.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types41.default.string]),
  component: import_prop_types41.default.elementType,
  layout: import_prop_types41.default.oneOfType([import_prop_types41.default.oneOf(["center", "fullscreen"]), import_prop_types41.default.string]),
  size: import_prop_types41.default.oneOfType([import_prop_types41.default.oneOf(["sm", "md", "lg"]), import_prop_types41.default.string]),
  sx: import_prop_types41.default.oneOfType([import_prop_types41.default.arrayOf(import_prop_types41.default.oneOfType([import_prop_types41.default.func, import_prop_types41.default.object, import_prop_types41.default.bool])), import_prop_types41.default.func, import_prop_types41.default.object]),
  variant: import_prop_types41.default.oneOfType([import_prop_types41.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types41.default.string])
} : void 0;
var ModalDialog_default = ModalDialog;

// node_modules/@mui/joy/Option/Option.js
init_extends();
init_objectWithoutPropertiesLoose();
var React62 = __toESM(require_react());
var import_prop_types42 = __toESM(require_prop_types());
init_esm();
init_composeClasses();
init_utils();
init_SelectUnstyled();

// node_modules/@mui/joy/Option/optionClasses.js
function getOptionUtilityClass(slot) {
  return generateUtilityClass2("JoyOption", slot);
}
var optionClasses = generateUtilityClasses2("JoyOption", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "colorContext", "focusVisible", "disabled", "selected", "highlighted", "variantPlain", "variantSoft", "variantOutlined", "variantSolid"]);
var optionClasses_default = optionClasses;

// node_modules/@mui/joy/Option/Option.js
var import_jsx_runtime61 = __toESM(require_jsx_runtime());
var _excluded45 = ["component", "children", "disabled", "value", "label", "variant", "color"];
var useUtilityClasses38 = (ownerState) => {
  const {
    disabled,
    highlighted,
    selected
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", highlighted && "highlighted", selected && "selected"]
  };
  return composeClasses(slots, getOptionUtilityClass, {});
};
var OptionRoot = styled_default(ListItemButtonRoot, {
  name: "JoyOption",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette;
  return {
    [`&.${optionClasses_default.highlighted}`]: {
      backgroundColor: (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette[`${ownerState.variant}HoverBg`]
    }
  };
});
var Option = React62.forwardRef(function Option2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyOption"
  });
  const {
    component = "li",
    children,
    disabled,
    value,
    label,
    variant = "plain",
    color: colorProp = "neutral"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded45);
  const row = React62.useContext(RowListContext_default);
  const selectContext = React62.useContext(SelectUnstyledContext);
  if (!selectContext) {
    throw new Error("OptionUnstyled must be used within a SelectUnstyled");
  }
  const selectOption = {
    value,
    label: label || children,
    disabled
  };
  const optionState = selectContext.getOptionState(selectOption);
  const optionProps = selectContext.getOptionProps(selectOption);
  const listboxRef = selectContext.listboxRef;
  let color = colorProp;
  if (optionState.selected && !inProps.color) {
    color = "primary";
  }
  const ownerState = _extends({}, props, optionState, {
    component,
    variant,
    color,
    row
  });
  const optionRef = React62.useRef(null);
  const handleRef = useForkRef(ref, optionRef);
  React62.useEffect(() => {
    if (optionState.highlighted) {
      if (!listboxRef.current || !optionRef.current) {
        return;
      }
      const listboxClientRect = listboxRef.current.getBoundingClientRect();
      const optionClientRect = optionRef.current.getBoundingClientRect();
      if (optionClientRect.top < listboxClientRect.top) {
        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;
      } else if (optionClientRect.bottom > listboxClientRect.bottom) {
        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;
      }
    }
  }, [optionState.highlighted, listboxRef]);
  const classes = useUtilityClasses38(ownerState);
  const rootProps = useSlotProps({
    elementType: OptionRoot,
    externalSlotProps: {},
    externalForwardedProps: other,
    additionalProps: _extends({}, optionProps, {
      ref: handleRef,
      as: component
    }),
    className: classes.root,
    ownerState
  });
  return (0, import_jsx_runtime61.jsx)(OptionRoot, _extends({}, rootProps, {
    children
  }));
});
true ? Option.propTypes = {
  children: import_prop_types42.default.node,
  color: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types42.default.string]),
  component: import_prop_types42.default.elementType,
  disabled: import_prop_types42.default.bool,
  label: import_prop_types42.default.oneOfType([import_prop_types42.default.element, import_prop_types42.default.string]),
  sx: import_prop_types42.default.oneOfType([import_prop_types42.default.arrayOf(import_prop_types42.default.oneOfType([import_prop_types42.default.func, import_prop_types42.default.object, import_prop_types42.default.bool])), import_prop_types42.default.func, import_prop_types42.default.object]),
  value: import_prop_types42.default.any,
  variant: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types42.default.string])
} : void 0;
var Option_default = Option;

// node_modules/@mui/joy/Radio/Radio.js
init_objectWithoutPropertiesLoose();
init_extends();
var React63 = __toESM(require_react());
var import_prop_types43 = __toESM(require_prop_types());
init_esm();
init_base();
init_utils();
init_SwitchUnstyled();

// node_modules/@mui/joy/Radio/radioClasses.js
function getRadioUtilityClass(slot) {
  return generateUtilityClass2("JoyRadio", slot);
}
var radioClasses = generateUtilityClasses2("JoyRadio", ["root", "radio", "icon", "action", "input", "label", "checked", "disabled", "focusVisible", "colorPrimary", "colorDanger", "colorInfo", "colorNeutral", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantOutlined", "variantSoft", "variantSolid"]);
var radioClasses_default = radioClasses;

// node_modules/@mui/joy/Radio/Radio.js
var import_jsx_runtime62 = __toESM(require_jsx_runtime());
var import_jsx_runtime63 = __toESM(require_jsx_runtime());
var _excluded46 = ["checked", "checkedIcon", "component", "componentsProps", "defaultChecked", "disabled", "disableIcon", "overlay", "label", "id", "name", "onBlur", "onChange", "onFocus", "onFocusVisible", "readOnly", "required", "color", "variant", "size", "uncheckedIcon", "value"];
var useUtilityClasses39 = (ownerState) => {
  const {
    checked,
    disabled,
    disableIcon,
    focusVisible,
    color,
    variant,
    size
  } = ownerState;
  const slots = {
    root: ["root", checked && "checked", disabled && "disabled", focusVisible && "focusVisible", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],
    radio: ["radio", checked && "checked", disabled && "disabled"],
    icon: ["icon"],
    action: [
      "action",
      checked && "checked",
      disableIcon && disabled && "disabled",
      focusVisible && "focusVisible"
    ],
    input: ["input"],
    label: ["label"]
  };
  return composeClasses(slots, getRadioUtilityClass, {});
};
function areEqualValues(a, b) {
  if (typeof b === "object" && b !== null) {
    return a === b;
  }
  return String(a) === String(b);
}
var RadioRoot = styled_default("span", {
  name: "JoyRadio",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  ownerState,
  theme
}) => {
  var _theme$vars$palette, _theme$vars$palette2, _theme$vars$palette3;
  return [_extends({
    "--Icon-fontSize": "var(--Radio-size)"
  }, ownerState.size === "sm" && {
    "--Radio-size": "1rem",
    "--Radio-gap": "0.375rem",
    fontSize: theme.vars.fontSize.sm
  }, ownerState.size === "md" && {
    "--Radio-size": "1.25rem",
    "--Radio-gap": "0.5rem",
    fontSize: theme.vars.fontSize.md
  }, ownerState.size === "lg" && {
    "--Radio-size": "1.5rem",
    "--Radio-gap": "0.625rem",
    fontSize: theme.vars.fontSize.lg
  }, {
    position: ownerState.overlay ? "initial" : "relative",
    display: "inline-flex",
    boxSizing: "border-box",
    minWidth: 0,
    fontFamily: theme.vars.fontFamily.body,
    lineHeight: "var(--Radio-size)",
    color: theme.vars.palette.text.primary,
    [`&.${radioClasses_default.disabled}`]: {
      color: (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette.plainDisabledColor
    }
  }, ownerState.disableIcon && {
    color: (_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2[`${ownerState.variant}Color`],
    [`&.${radioClasses_default.disabled}`]: {
      color: (_theme$vars$palette3 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette3[`${ownerState.variant}DisabledColor`]
    }
  }, ownerState["data-parent"] === "RadioGroup" && ownerState["data-first-child"] === void 0 && {
    marginInlineStart: ownerState.row ? "var(--RadioGroup-gap)" : void 0,
    marginBlockStart: ownerState.row ? void 0 : "var(--RadioGroup-gap)"
  })];
});
var RadioRadio = styled_default("span", {
  name: "JoyRadio",
  slot: "Radio",
  overridesResolver: (props, styles) => styles.radio
})(({
  ownerState,
  theme
}) => {
  var _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;
  return [_extends({
    margin: 0,
    boxSizing: "border-box",
    width: "var(--Radio-size)",
    height: "var(--Radio-size)",
    borderRadius: "var(--Radio-size)",
    display: "inline-flex",
    justifyContent: "center",
    alignItems: "center",
    flexShrink: 0,
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"
  }, ownerState.disableIcon && {
    display: "contents"
  }), ...!ownerState.disableIcon ? [(_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {
    "&:hover": (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color]
  }, {
    "&:active": (_theme$variants3 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants3[ownerState.color]
  }, {
    [`&.${radioClasses_default.disabled}`]: (_theme$variants4 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants4[ownerState.color]
  }] : []];
});
var RadioAction = styled_default("span", {
  name: "JoyRadio",
  slot: "Action",
  overridesResolver: (props, styles) => styles.action
})(({
  theme,
  ownerState
}) => {
  var _theme$variants5, _theme$variants6, _theme$variants7, _theme$variants8;
  return [{
    position: "absolute",
    borderRadius: `var(--Radio-action-radius, ${ownerState.overlay ? "var(--internal-action-radius, inherit)" : "inherit"})`,
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    zIndex: 1,
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    [theme.focus.selector]: theme.focus.default
  }, ...ownerState.disableIcon ? [(_theme$variants5 = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants5[ownerState.color], {
    "&:hover": (_theme$variants6 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants6[ownerState.color]
  }, {
    "&:active": (_theme$variants7 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants7[ownerState.color]
  }, {
    [`&.${radioClasses_default.disabled}`]: (_theme$variants8 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants8[ownerState.color]
  }] : []];
});
var RadioInput = styled_default("input", {
  name: "JoyRadio",
  slot: "Input",
  overridesResolver: (props, styles) => styles.input
})(() => ({
  margin: 0,
  opacity: 0,
  position: "absolute",
  height: "100%",
  width: "100%",
  cursor: "pointer"
}));
var RadioLabel = styled_default("label", {
  name: "JoyRadio",
  slot: "Label",
  overridesResolver: (props, styles) => styles.label
})(({
  ownerState
}) => _extends({
  flex: 1,
  minWidth: 0
}, ownerState.disableIcon ? {
  zIndex: 1,
  pointerEvents: "none"
} : {
  marginInlineStart: "var(--Radio-gap)"
}));
var RadioIcon = styled_default("span", {
  name: "JoyRadio",
  slot: "Icon",
  overridesResolver: (props, styles) => styles.icon
})(({
  ownerState
}) => ({
  width: "50%",
  height: "50%",
  borderRadius: "inherit",
  color: "inherit",
  backgroundColor: "currentColor",
  transition: "transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
  transform: ownerState.checked ? "scale(1)" : "scale(0)"
}));
var Radio = React63.forwardRef(function Radio2(inProps, ref) {
  var _ref, _ref2, _inProps$color, _ref3, _ref4, _inProps$color2;
  const props = useThemeProps2({
    props: inProps,
    name: "JoyRadio"
  });
  const {
    checked: checkedProp,
    checkedIcon,
    component,
    componentsProps = {},
    defaultChecked,
    disabled: disabledProp,
    disableIcon: disableIconProp = false,
    overlay: overlayProp = false,
    label,
    id: idOverride,
    name: nameProp,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible,
    readOnly,
    required,
    color,
    variant = "outlined",
    size: sizeProp = "md",
    uncheckedIcon,
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded46);
  const formControl = React63.useContext(FormControlContext_default);
  if (true) {
    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;
    React63.useEffect(() => {
      if (registerEffect) {
        return registerEffect();
      }
      return void 0;
    }, [registerEffect]);
  }
  const id = useId(idOverride != null ? idOverride : formControl == null ? void 0 : formControl.htmlFor);
  const radioGroup = React63.useContext(RadioGroupContext_default);
  const activeColor = formControl != null && formControl.error ? "danger" : (_ref = (_ref2 = (_inProps$color = inProps.color) != null ? _inProps$color : formControl == null ? void 0 : formControl.color) != null ? _ref2 : color) != null ? _ref : "primary";
  const inactiveColor = formControl != null && formControl.error ? "danger" : (_ref3 = (_ref4 = (_inProps$color2 = inProps.color) != null ? _inProps$color2 : formControl == null ? void 0 : formControl.color) != null ? _ref4 : color) != null ? _ref3 : "neutral";
  const size = inProps.size || (formControl == null ? void 0 : formControl.size) || (radioGroup == null ? void 0 : radioGroup.size) || sizeProp;
  const name = inProps.name || (radioGroup == null ? void 0 : radioGroup.name) || nameProp;
  const disableIcon = inProps.disableIcon || (radioGroup == null ? void 0 : radioGroup.disableIcon) || disableIconProp;
  const overlay = inProps.overlay || (radioGroup == null ? void 0 : radioGroup.overlay) || overlayProp;
  const radioChecked = typeof checkedProp === "undefined" && !!value ? areEqualValues(radioGroup == null ? void 0 : radioGroup.value, value) : checkedProp;
  const useRadioProps = {
    checked: radioChecked,
    defaultChecked,
    disabled: disabledProp != null ? disabledProp : formControl == null ? void 0 : formControl.disabled,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible
  };
  const {
    getInputProps,
    checked,
    disabled,
    focusVisible
  } = useSwitch(useRadioProps);
  const ownerState = _extends({}, props, {
    checked,
    disabled,
    focusVisible,
    color: checked ? activeColor : inactiveColor,
    variant,
    size,
    disableIcon,
    overlay,
    row: radioGroup == null ? void 0 : radioGroup.row
  });
  const classes = useUtilityClasses39(ownerState);
  const rootProps = useSlotProps({
    elementType: RadioRoot,
    externalForwardedProps: other,
    externalSlotProps: componentsProps.root,
    additionalProps: {
      as: component,
      ref
    },
    className: classes.root,
    ownerState
  });
  const radioProps = useSlotProps({
    elementType: RadioRadio,
    externalSlotProps: componentsProps.radio,
    className: classes.radio,
    ownerState
  });
  const radioIconProps = useSlotProps({
    elementType: RadioIcon,
    externalSlotProps: componentsProps.icon,
    className: classes.icon,
    ownerState
  });
  const radioActionProps = useSlotProps({
    elementType: RadioAction,
    externalSlotProps: componentsProps.action,
    className: classes.action,
    ownerState
  });
  const radioInputProps = useSlotProps({
    elementType: RadioInput,
    getSlotProps: () => getInputProps({
      onChange: radioGroup == null ? void 0 : radioGroup.onChange
    }),
    externalSlotProps: componentsProps.input,
    className: classes.input,
    additionalProps: {
      type: "radio",
      id,
      name,
      readOnly,
      required,
      value: String(value),
      "aria-describedby": formControl == null ? void 0 : formControl["aria-describedby"]
    },
    ownerState
  });
  const radioLabelProps = useSlotProps({
    elementType: RadioLabel,
    externalSlotProps: componentsProps.label,
    className: classes.label,
    ownerState,
    additionalProps: {
      htmlFor: id
    }
  });
  return (0, import_jsx_runtime63.jsxs)(RadioRoot, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime63.jsxs)(RadioRadio, _extends({}, radioProps, {
      children: [checked && !disableIcon && checkedIcon, !checked && !disableIcon && uncheckedIcon, !checkedIcon && !uncheckedIcon && !disableIcon && (0, import_jsx_runtime62.jsx)(RadioIcon, _extends({}, radioIconProps)), (0, import_jsx_runtime62.jsx)(RadioAction, _extends({}, radioActionProps, {
        children: (0, import_jsx_runtime62.jsx)(RadioInput, _extends({}, radioInputProps))
      }))]
    })), label && (0, import_jsx_runtime62.jsx)(RadioLabel, _extends({}, radioLabelProps, {
      children: (0, import_jsx_runtime62.jsx)(TypographyContext.Provider, {
        value: true,
        children: label
      })
    }))]
  }));
});
true ? Radio.propTypes = {
  checked: import_prop_types43.default.bool,
  checkedIcon: import_prop_types43.default.node,
  children: import_prop_types43.default.node,
  className: import_prop_types43.default.string,
  color: import_prop_types43.default.oneOfType([import_prop_types43.default.oneOf(["danger", "info", "primary", "success", "warning"]), import_prop_types43.default.string]),
  component: import_prop_types43.default.elementType,
  componentsProps: import_prop_types43.default.shape({
    action: import_prop_types43.default.oneOfType([import_prop_types43.default.func, import_prop_types43.default.object]),
    icon: import_prop_types43.default.oneOfType([import_prop_types43.default.func, import_prop_types43.default.object]),
    input: import_prop_types43.default.oneOfType([import_prop_types43.default.func, import_prop_types43.default.object]),
    label: import_prop_types43.default.oneOfType([import_prop_types43.default.func, import_prop_types43.default.object]),
    radio: import_prop_types43.default.oneOfType([import_prop_types43.default.func, import_prop_types43.default.object]),
    root: import_prop_types43.default.oneOfType([import_prop_types43.default.func, import_prop_types43.default.object])
  }),
  defaultChecked: import_prop_types43.default.bool,
  disabled: import_prop_types43.default.bool,
  disableIcon: import_prop_types43.default.bool,
  id: import_prop_types43.default.string,
  label: import_prop_types43.default.node,
  name: import_prop_types43.default.string,
  onBlur: import_prop_types43.default.func,
  onChange: import_prop_types43.default.func,
  onFocus: import_prop_types43.default.func,
  onFocusVisible: import_prop_types43.default.func,
  overlay: import_prop_types43.default.bool,
  readOnly: import_prop_types43.default.bool,
  required: import_prop_types43.default.bool,
  size: import_prop_types43.default.oneOfType([import_prop_types43.default.oneOf(["sm", "md", "lg"]), import_prop_types43.default.string]),
  sx: import_prop_types43.default.oneOfType([import_prop_types43.default.arrayOf(import_prop_types43.default.oneOfType([import_prop_types43.default.func, import_prop_types43.default.object, import_prop_types43.default.bool])), import_prop_types43.default.func, import_prop_types43.default.object]),
  uncheckedIcon: import_prop_types43.default.node,
  value: import_prop_types43.default.any,
  variant: import_prop_types43.default.oneOfType([import_prop_types43.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types43.default.string])
} : void 0;
var Radio_default = Radio;

// node_modules/@mui/joy/RadioGroup/RadioGroup.js
init_objectWithoutPropertiesLoose();
init_extends();
var React64 = __toESM(require_react());
var import_prop_types44 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();

// node_modules/@mui/joy/RadioGroup/radioGroupClasses.js
function getRadioGroupUtilityClass(slot) {
  return generateUtilityClass2("JoyRadioGroup", slot);
}
var radioGroupClasses = generateUtilityClasses2("JoyRadioGroup", ["root", "row", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg"]);
var radioGroupClasses_default = radioGroupClasses;

// node_modules/@mui/joy/RadioGroup/RadioGroup.js
var import_jsx_runtime64 = __toESM(require_jsx_runtime());
var _excluded47 = ["className", "component", "children", "name", "defaultValue", "disableIcon", "overlay", "value", "onChange", "color", "variant", "size", "row", "role"];
var useUtilityClasses40 = (ownerState) => {
  const {
    row,
    size,
    variant,
    color
  } = ownerState;
  const slots = {
    root: ["root", row && "row", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getRadioGroupUtilityClass, {});
};
var RadioGroupRoot = styled_default("div", {
  name: "JoyRadioGroup",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  ownerState,
  theme
}) => {
  var _theme$variants;
  return _extends({}, ownerState.size === "sm" && {
    "--RadioGroup-gap": "0.625rem"
  }, ownerState.size === "md" && {
    "--RadioGroup-gap": "0.875rem"
  }, ownerState.size === "lg" && {
    "--RadioGroup-gap": "1.25rem"
  }, {
    display: "flex",
    flexDirection: ownerState.row ? "row" : "column",
    borderRadius: theme.vars.radius.sm
  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]);
});
var RadioGroup = React64.forwardRef(function RadioGroup2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyRadioGroup"
  });
  const {
    className,
    component,
    children,
    name: nameProp,
    defaultValue,
    disableIcon = false,
    overlay,
    value: valueProp,
    onChange,
    color = "neutral",
    variant = "plain",
    size = "md",
    row = false,
    role = "radiogroup"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded47);
  const [value, setValueState] = useControlled({
    controlled: valueProp,
    default: defaultValue,
    name: "RadioGroup"
  });
  const ownerState = _extends({
    row,
    size,
    variant,
    color,
    role
  }, props);
  const classes = useUtilityClasses40(ownerState);
  const name = useId(nameProp);
  const formControl = React64.useContext(FormControlContext_default);
  if (true) {
    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;
    React64.useEffect(() => {
      if (registerEffect) {
        return registerEffect();
      }
      return void 0;
    }, [registerEffect]);
  }
  const contextValue = React64.useMemo(() => ({
    disableIcon,
    overlay,
    row,
    size,
    name,
    value,
    onChange: (event) => {
      setValueState(event.target.value);
      if (onChange) {
        onChange(event);
      }
    }
  }), [disableIcon, name, onChange, overlay, row, setValueState, size, value]);
  return (0, import_jsx_runtime64.jsx)(RadioGroupContext_default.Provider, {
    value: contextValue,
    children: (0, import_jsx_runtime64.jsx)(RadioGroupRoot, _extends({
      ref,
      role,
      as: component,
      ownerState,
      className: clsx_m_default(classes.root, className),
      id: formControl == null ? void 0 : formControl.htmlFor,
      "aria-labelledby": formControl == null ? void 0 : formControl.labelId,
      "aria-describedby": formControl == null ? void 0 : formControl["aria-describedby"]
    }, other, {
      children: (0, import_jsx_runtime64.jsx)(FormControlContext_default.Provider, {
        value: void 0,
        children: React64.Children.map(children, (child, index) => React64.isValidElement(child) ? React64.cloneElement(child, _extends({}, index === 0 && {
          "data-first-child": ""
        }, index === React64.Children.count(children) - 1 && {
          "data-last-child": ""
        }, {
          "data-parent": "RadioGroup"
        })) : child)
      })
    }))
  });
});
true ? RadioGroup.propTypes = {
  children: import_prop_types44.default.node,
  className: import_prop_types44.default.string,
  color: import_prop_types44.default.oneOfType([import_prop_types44.default.oneOf(["danger", "info", "primary", "success", "warning"]), import_prop_types44.default.string]),
  component: import_prop_types44.default.elementType,
  defaultValue: import_prop_types44.default.any,
  disableIcon: import_prop_types44.default.bool,
  name: import_prop_types44.default.string,
  onChange: import_prop_types44.default.func,
  overlay: import_prop_types44.default.bool,
  role: import_prop_types44.default.string,
  row: import_prop_types44.default.bool,
  size: import_prop_types44.default.oneOfType([import_prop_types44.default.oneOf(["sm", "md", "lg"]), import_prop_types44.default.string]),
  sx: import_prop_types44.default.oneOfType([import_prop_types44.default.arrayOf(import_prop_types44.default.oneOfType([import_prop_types44.default.func, import_prop_types44.default.object, import_prop_types44.default.bool])), import_prop_types44.default.func, import_prop_types44.default.object]),
  value: import_prop_types44.default.any,
  variant: import_prop_types44.default.oneOfType([import_prop_types44.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types44.default.string])
} : void 0;
var RadioGroup_default = RadioGroup;

// node_modules/@mui/joy/Select/Select.js
init_objectWithoutPropertiesLoose();
init_extends();
var React66 = __toESM(require_react());
var import_prop_types45 = __toESM(require_prop_types());
init_esm();
init_PopperUnstyled();
init_SelectUnstyled();
init_utils();
init_composeClasses();

// node_modules/@mui/joy/internal/svg-icons/Unfold.js
var React65 = __toESM(require_react());
var import_jsx_runtime65 = __toESM(require_jsx_runtime());
var Unfold_default = createSvgIcon((0, import_jsx_runtime65.jsx)("path", {
  d: "m12 5.83 2.46 2.46c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L12.7 3.7a.9959.9959 0 0 0-1.41 0L8.12 6.88c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 5.83zm0 12.34-2.46-2.46a.9959.9959 0 0 0-1.41 0c-.39.39-.39 1.02 0 1.41l3.17 3.18c.39.39 1.02.39 1.41 0l3.17-3.17c.39-.39.39-1.02 0-1.41a.9959.9959 0 0 0-1.41 0L12 18.17z"
}), "Unfold");

// node_modules/@mui/joy/Select/selectClasses.js
function getSelectUtilityClass(slot) {
  return generateUtilityClass2("JoySelect", slot);
}
var selectClasses = generateUtilityClasses2("JoySelect", ["root", "button", "indicator", "startDecorator", "endDecorator", "popper", "listbox", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg", "focusVisible", "disabled", "expanded"]);
var selectClasses_default = selectClasses;

// node_modules/@mui/joy/Select/Select.js
var import_jsx_runtime66 = __toESM(require_jsx_runtime());
var import_jsx_runtime67 = __toESM(require_jsx_runtime());
var _Unfold;
var _excluded48 = ["action", "autoFocus", "children", "componentsProps", "defaultValue", "defaultListboxOpen", "disabled", "getSerializedValue", "placeholder", "listboxId", "listboxOpen", "onChange", "onListboxOpenChange", "onClose", "renderValue", "value", "size", "variant", "color", "startDecorator", "endDecorator", "indicator", "aria-describedby", "aria-label", "aria-labelledby", "id", "name"];
var _excluded211 = ["component"];
function defaultRenderSingleValue(selectedOption) {
  var _selectedOption$label;
  return (_selectedOption$label = selectedOption == null ? void 0 : selectedOption.label) != null ? _selectedOption$label : "";
}
function defaultFormValueProvider(selectedOption) {
  if ((selectedOption == null ? void 0 : selectedOption.value) == null) {
    return "";
  }
  if (typeof selectedOption.value === "string" || typeof selectedOption.value === "number") {
    return selectedOption.value;
  }
  return JSON.stringify(selectedOption.value);
}
var useUtilityClasses41 = (ownerState) => {
  const {
    color,
    disabled,
    focusVisible,
    size,
    variant,
    open
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", open && "expanded", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],
    button: ["button"],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"],
    indicator: ["indicator", open && "expanded"],
    listbox: ["listbox", open && "expanded", disabled && "disabled", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getSelectUtilityClass, {});
};
var SelectRoot = styled_default("div", {
  name: "JoySelect",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$vars$palette, _theme$variants2, _theme$variants3;
  const variantStyle = (_theme$variants = theme.variants[`${ownerState.variant}`]) == null ? void 0 : _theme$variants[ownerState.color];
  return [_extends({
    "--focus-outline-offset": `calc(${theme.vars.focus.thickness} * -1)`,
    "--Select-radius": theme.vars.radius.sm,
    "--Select-gap": "0.5rem",
    "--Select-placeholderOpacity": 0.5,
    "--Select-focusedThickness": theme.vars.focus.thickness,
    "--Select-focusedHighlight": (_theme$vars$palette = theme.vars.palette[ownerState.color === "neutral" ? "primary" : ownerState.color]) == null ? void 0 : _theme$vars$palette[500],
    "--Select-indicator-color": theme.vars.palette.text.tertiary
  }, ownerState.size === "sm" && {
    "--Select-minHeight": "2rem",
    "--Select-paddingInline": "0.5rem",
    "--Select-decorator-childHeight": "min(1.5rem, var(--Select-minHeight))",
    "--Icon-fontSize": "1.25rem"
  }, ownerState.size === "md" && {
    "--Select-minHeight": "2.5rem",
    "--Select-paddingInline": "0.75rem",
    "--Select-decorator-childHeight": "min(2rem, var(--Select-minHeight))",
    "--Icon-fontSize": "1.5rem"
  }, ownerState.size === "lg" && {
    "--Select-minHeight": "3rem",
    "--Select-paddingInline": "1rem",
    "--Select-decorator-childHeight": "min(2.375rem, var(--Select-minHeight))",
    "--Icon-fontSize": "1.75rem"
  }, {
    "--Select-decorator-childOffset": "min(calc(var(--Select-paddingInline) - (var(--Select-minHeight) - 2 * var(--variant-borderWidth) - var(--Select-decorator-childHeight)) / 2), var(--Select-paddingInline))",
    "--internal-paddingBlock": "max((var(--Select-minHeight) - 2 * var(--variant-borderWidth) - var(--Select-decorator-childHeight)) / 2, 0px)",
    "--Select-decorator-childRadius": "max(var(--Select-radius) - var(--internal-paddingBlock), min(var(--internal-paddingBlock) / 2, var(--Select-radius) / 2))",
    "--Button-minHeight": "var(--Select-decorator-childHeight)",
    "--IconButton-size": "var(--Select-decorator-childHeight)",
    "--Button-radius": "var(--Select-decorator-childRadius)",
    "--IconButton-radius": "var(--Select-decorator-childRadius)",
    boxSizing: "border-box",
    minWidth: 0,
    minHeight: "var(--Select-minHeight)",
    position: "relative",
    display: "flex",
    alignItems: "center",
    borderRadius: "var(--Select-radius)"
  }, !variantStyle.backgroundColor && {
    backgroundColor: theme.vars.palette.background.surface
  }, {
    paddingInline: `var(--Select-paddingInline)`,
    fontFamily: theme.vars.fontFamily.body,
    fontSize: theme.vars.fontSize.md
  }, ownerState.size === "sm" && {
    fontSize: theme.vars.fontSize.sm
  }, {
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    "&:before": {
      boxSizing: "border-box",
      content: '""',
      display: "block",
      position: "absolute",
      pointerEvents: "none",
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      zIndex: 1,
      borderRadius: "inherit",
      margin: "calc(var(--variant-borderWidth) * -1)"
    },
    [`&.${selectClasses_default.focusVisible}`]: {
      "--Select-indicator-color": "var(--Select-focusedHighlight)"
    },
    [`&.${selectClasses_default.disabled}`]: {
      "--Select-indicator-color": "inherit"
    }
  }, ownerState.variant !== "solid" && {
    [`&.${selectClasses_default.focusVisible}`]: {
      "&:before": {
        boxShadow: `inset 0 0 0 var(--Select-focusedThickness) var(--Select-focusedHighlight)`
      }
    }
  }), _extends({}, variantStyle, {
    "&:hover": (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color],
    [`&.${selectClasses_default.disabled}`]: (_theme$variants3 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants3[ownerState.color]
  })];
});
var SelectButton = styled_default("button", {
  name: "JoySelect",
  slot: "Button",
  overridesResolver: (props, styles) => styles.button
})(({
  ownerState
}) => _extends({
  border: 0,
  outline: "none",
  background: "none",
  padding: 0,
  fontSize: "inherit",
  color: "inherit",
  alignSelf: "stretch",
  display: "flex",
  alignItems: "center",
  flex: 1,
  cursor: "pointer"
}, (ownerState.value === null || ownerState.value === void 0) && {
  opacity: "var(--Select-placeholderOpacity)"
}));
var SelectListbox = styled_default(ListRoot, {
  name: "JoySelect",
  slot: "Listbox",
  overridesResolver: (props, styles) => styles.listbox
})(({
  theme,
  ownerState
}) => {
  var _theme$variants4;
  const variantStyle = (_theme$variants4 = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants4[ownerState.color];
  return _extends({
    "--List-radius": theme.vars.radius.sm,
    "--List-item-stickyBackground": (variantStyle == null ? void 0 : variantStyle.backgroundColor) || (variantStyle == null ? void 0 : variantStyle.background) || theme.vars.palette.background.surface,
    "--List-item-stickyTop": "calc(var(--List-padding, var(--List-divider-gap)) * -1)"
  }, scopedVariables, {
    outline: "none",
    boxShadow: theme.vars.shadow.md,
    zIndex: 1e3
  }, !variantStyle.backgroundColor && {
    backgroundColor: theme.vars.palette.background.surface
  });
});
var SelectStartDecorator = styled_default("span", {
  name: "JoySelect",
  slot: "StartDecorator",
  overridesResolver: (props, styles) => styles.startDecorator
})(({
  theme,
  ownerState
}) => _extends({
  "--Button-margin": "0 0 0 calc(var(--Select-decorator-childOffset) * -1)",
  "--IconButton-margin": "0 0 0 calc(var(--Select-decorator-childOffset) * -1)",
  "--Icon-margin": "0 0 0 calc(var(--Select-paddingInline) / -4)",
  pointerEvents: "none",
  display: "inherit",
  alignItems: "center",
  marginInlineEnd: "var(--Select-gap)",
  color: theme.vars.palette.text.tertiary
}, ownerState.focusVisible && {
  color: "var(--Select-focusedHighlight)"
}));
var SelectEndDecorator = styled_default("span", {
  name: "JoySelect",
  slot: "EndDecorator",
  overridesResolver: (props, styles) => styles.endDecorator
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette2;
  return {
    "--Button-margin": "0 calc(var(--Select-decorator-childOffset) * -1) 0 0",
    "--IconButton-margin": "0 calc(var(--Select-decorator-childOffset) * -1) 0 0",
    "--Icon-margin": "0 calc(var(--Select-paddingInline) / -4) 0 0",
    display: "inherit",
    alignItems: "center",
    marginInlineStart: "var(--Select-gap)",
    color: (_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2[`${ownerState.variant}Color`]
  };
});
var SelectIndicator = styled_default("span", {
  name: "JoySelect",
  slot: "Indicator"
})(({
  ownerState
}) => _extends({}, ownerState.size === "sm" && {
  "--Icon-fontSize": "1.125rem"
}, ownerState.size === "md" && {
  "--Icon-fontSize": "1.25rem"
}, ownerState.size === "lg" && {
  "--Icon-fontSize": "1.5rem"
}, {
  color: "var(--Select-indicator-color)",
  display: "inherit",
  alignItems: "center",
  marginInlineStart: "var(--Select-gap)",
  marginInlineEnd: "calc(var(--Select-paddingInline) / -4)",
  [`.${selectClasses_default.endDecorator} + &`]: {
    marginInlineStart: "calc(var(--Select-gap) / 2)"
  }
}));
var Select = React66.forwardRef(function Select2(inProps, ref) {
  var _ref2, _inProps$disabled, _ref3, _inProps$size, _ref4, _inProps$color;
  const props = useThemeProps2({
    props: inProps,
    name: "JoySelect"
  });
  const _ref = props, {
    action,
    autoFocus,
    children,
    componentsProps = {},
    defaultValue,
    defaultListboxOpen = false,
    disabled: disabledExternalProp,
    getSerializedValue = defaultFormValueProvider,
    placeholder,
    listboxId,
    listboxOpen: listboxOpenProp,
    onChange,
    onListboxOpenChange,
    onClose,
    renderValue: renderValueProp,
    value: valueProp,
    size: sizeProp = "md",
    variant = "outlined",
    color: colorProp = "neutral",
    startDecorator,
    endDecorator,
    indicator = _Unfold || (_Unfold = (0, import_jsx_runtime66.jsx)(Unfold_default, {})),
    "aria-describedby": ariaDescribedby,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    id,
    name
  } = _ref, other = _objectWithoutPropertiesLoose(_ref, _excluded48);
  const formControl = React66.useContext(FormControlContext_default);
  if (true) {
    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;
    React66.useEffect(() => {
      if (registerEffect) {
        return registerEffect();
      }
      return void 0;
    }, [registerEffect]);
  }
  const disabledProp = (_ref2 = (_inProps$disabled = inProps.disabled) != null ? _inProps$disabled : formControl == null ? void 0 : formControl.disabled) != null ? _ref2 : disabledExternalProp;
  const size = (_ref3 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref3 : sizeProp;
  const color = formControl != null && formControl.error ? "danger" : (_ref4 = (_inProps$color = inProps.color) != null ? _inProps$color : formControl == null ? void 0 : formControl.color) != null ? _ref4 : colorProp;
  const renderValue = renderValueProp != null ? renderValueProp : defaultRenderSingleValue;
  const [anchorEl, setAnchorEl] = React66.useState(null);
  const [groupedOptions, setGroupedOptions] = React66.useState([]);
  const options = React66.useMemo(() => flattenOptionGroups(groupedOptions), [groupedOptions]);
  const [listboxOpen, setListboxOpen] = useControlled({
    controlled: listboxOpenProp,
    default: defaultListboxOpen,
    name: "SelectUnstyled",
    state: "listboxOpen"
  });
  const rootRef = React66.useRef(null);
  const buttonRef = React66.useRef(null);
  const listboxRef = React66.useRef(null);
  const handleRef = useForkRef(ref, rootRef);
  React66.useImperativeHandle(action, () => ({
    focusVisible: () => {
      var _buttonRef$current;
      (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();
    }
  }), []);
  React66.useEffect(() => {
    setGroupedOptions(getOptionsFromChildren(children));
  }, [children]);
  React66.useEffect(() => {
    setAnchorEl(rootRef.current);
  }, []);
  React66.useEffect(() => {
    if (autoFocus) {
      buttonRef.current.focus();
    }
  }, [autoFocus]);
  const handleOpenChange = (isOpen) => {
    setListboxOpen(isOpen);
    onListboxOpenChange == null ? void 0 : onListboxOpenChange(isOpen);
    if (!isOpen) {
      onClose == null ? void 0 : onClose();
    }
  };
  const {
    buttonActive,
    buttonFocusVisible,
    disabled,
    getButtonProps,
    getListboxProps,
    getOptionProps,
    getOptionState,
    value
  } = useSelect_default({
    buttonRef,
    defaultValue,
    disabled: disabledProp,
    listboxId,
    multiple: false,
    onChange,
    onOpenChange: handleOpenChange,
    open: listboxOpen,
    options,
    value: valueProp
  });
  const ownerState = _extends({}, props, {
    active: buttonActive,
    defaultListboxOpen,
    disabled,
    focusVisible: buttonFocusVisible,
    open: listboxOpen,
    renderValue,
    value,
    size,
    variant,
    color
  });
  const classes = useUtilityClasses41(ownerState);
  const selectedOption = React66.useMemo(() => {
    var _options$find;
    return (_options$find = options.find((o) => value === o.value)) != null ? _options$find : null;
  }, [options, value]);
  const rootProps = useSlotProps({
    elementType: SelectRoot,
    getSlotProps: (handlers) => ({
      onMouseDown: (event) => {
        var _handlers$onClick;
        if (!listboxOpen && event.target !== buttonRef.current && !event.isPropagationStopped()) {
          handleOpenChange(true);
        }
        (_handlers$onClick = handlers.onClick) == null ? void 0 : _handlers$onClick.call(handlers, event);
      }
    }),
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: handleRef
    },
    ownerState,
    className: classes.root
  });
  const buttonProps = useSlotProps({
    elementType: SelectButton,
    getSlotProps: getButtonProps,
    externalSlotProps: componentsProps.button,
    additionalProps: {
      "aria-describedby": ariaDescribedby != null ? ariaDescribedby : formControl == null ? void 0 : formControl["aria-describedby"],
      "aria-label": ariaLabel,
      "aria-labelledby": ariaLabelledby != null ? ariaLabelledby : formControl == null ? void 0 : formControl.labelId,
      id: id != null ? id : formControl == null ? void 0 : formControl.htmlFor,
      name
    },
    ownerState,
    className: classes.button
  });
  const resolveListboxProps = typeof componentsProps.listbox === "function" ? componentsProps.listbox(ownerState) : componentsProps.listbox;
  const cachedModifiers = React66.useMemo(() => [{
    name: "offset",
    options: {
      offset: [0, 4]
    }
  }, {
    name: "equalWidth",
    enabled: true,
    phase: "beforeWrite",
    requires: ["computeStyles"],
    fn: ({
      state
    }) => {
      state.styles.popper.width = `${state.rects.reference.width}px`;
    }
  }, ...(resolveListboxProps == null ? void 0 : resolveListboxProps.modifiers) || []], [resolveListboxProps == null ? void 0 : resolveListboxProps.modifiers]);
  const _useSlotProps = useSlotProps({
    elementType: SelectListbox,
    getSlotProps: getListboxProps,
    externalSlotProps: componentsProps.listbox,
    additionalProps: {
      ref: listboxRef,
      anchorEl,
      disablePortal: true,
      open: listboxOpen,
      placement: "bottom",
      modifiers: cachedModifiers
    },
    ownerState: _extends({}, ownerState, {
      nesting: false,
      row: false,
      wrap: false
    }),
    className: classes.listbox
  }), {
    component: listboxComponent
  } = _useSlotProps, listboxProps = _objectWithoutPropertiesLoose(_useSlotProps, _excluded211);
  const startDecoratorProps = useSlotProps({
    elementType: SelectStartDecorator,
    externalSlotProps: componentsProps.startDecorator,
    ownerState,
    className: classes.startDecorator
  });
  const endDecoratorProps = useSlotProps({
    elementType: SelectEndDecorator,
    externalSlotProps: componentsProps.endDecorator,
    ownerState,
    className: classes.endDecorator
  });
  const indicatorProps = useSlotProps({
    elementType: SelectIndicator,
    externalSlotProps: componentsProps.indicator,
    ownerState,
    className: classes.indicator
  });
  const context = React66.useMemo(() => ({
    getOptionProps,
    getOptionState,
    listboxRef,
    color
  }), [color, getOptionProps, getOptionState]);
  return (0, import_jsx_runtime67.jsxs)(React66.Fragment, {
    children: [(0, import_jsx_runtime67.jsxs)(SelectRoot, _extends({}, rootProps, {
      children: [startDecorator && (0, import_jsx_runtime66.jsx)(SelectStartDecorator, _extends({}, startDecoratorProps, {
        children: startDecorator
      })), (0, import_jsx_runtime66.jsx)(SelectButton, _extends({}, buttonProps, {
        children: selectedOption ? renderValue(selectedOption) : placeholder
      })), endDecorator && (0, import_jsx_runtime66.jsx)(SelectEndDecorator, _extends({}, endDecoratorProps, {
        children: endDecorator
      })), indicator && (0, import_jsx_runtime66.jsx)(SelectIndicator, _extends({}, indicatorProps, {
        children: indicator
      }))]
    })), anchorEl && (0, import_jsx_runtime66.jsx)(PopperUnstyled_default, _extends({}, listboxProps, {
      as: listboxComponent,
      component: SelectListbox,
      children: (0, import_jsx_runtime66.jsx)(SelectUnstyledContext.Provider, {
        value: context,
        children: (0, import_jsx_runtime66.jsx)(ListProvider_default, {
          nested: true,
          children
        })
      })
    })), name && (0, import_jsx_runtime66.jsx)("input", {
      type: "hidden",
      name,
      value: getSerializedValue(selectedOption)
    })]
  });
});
true ? Select.propTypes = {
  action: import_prop_types45.default.oneOfType([import_prop_types45.default.func, import_prop_types45.default.shape({
    current: import_prop_types45.default.shape({
      focusVisible: import_prop_types45.default.func.isRequired
    })
  })]),
  children: import_prop_types45.default.node,
  color: import_prop_types45.default.oneOfType([import_prop_types45.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types45.default.string]),
  component: import_prop_types45.default.elementType,
  componentsProps: import_prop_types45.default.shape({
    button: import_prop_types45.default.oneOfType([import_prop_types45.default.func, import_prop_types45.default.object]),
    endDecorator: import_prop_types45.default.oneOfType([import_prop_types45.default.func, import_prop_types45.default.object]),
    indicator: import_prop_types45.default.oneOfType([import_prop_types45.default.func, import_prop_types45.default.object]),
    listbox: import_prop_types45.default.oneOfType([import_prop_types45.default.func, import_prop_types45.default.object]),
    root: import_prop_types45.default.oneOfType([import_prop_types45.default.func, import_prop_types45.default.object]),
    startDecorator: import_prop_types45.default.oneOfType([import_prop_types45.default.func, import_prop_types45.default.object])
  }),
  defaultValue: import_prop_types45.default.any,
  disabled: import_prop_types45.default.bool,
  endDecorator: import_prop_types45.default.node,
  getSerializedValue: import_prop_types45.default.func,
  indicator: import_prop_types45.default.node,
  onChange: import_prop_types45.default.func,
  onClose: import_prop_types45.default.func,
  placeholder: import_prop_types45.default.node,
  renderValue: import_prop_types45.default.func,
  size: import_prop_types45.default.oneOfType([import_prop_types45.default.oneOf(["sm", "md", "lg"]), import_prop_types45.default.string]),
  startDecorator: import_prop_types45.default.node,
  sx: import_prop_types45.default.oneOfType([import_prop_types45.default.arrayOf(import_prop_types45.default.oneOfType([import_prop_types45.default.func, import_prop_types45.default.object, import_prop_types45.default.bool])), import_prop_types45.default.func, import_prop_types45.default.object]),
  value: import_prop_types45.default.any,
  variant: import_prop_types45.default.oneOfType([import_prop_types45.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types45.default.string])
} : void 0;
var Select_default = Select;

// node_modules/@mui/joy/Slider/Slider.js
init_objectWithoutPropertiesLoose();
init_extends();
var React67 = __toESM(require_react());
var import_prop_types46 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_SliderUnstyled();
init_utils();

// node_modules/@mui/joy/Slider/sliderClasses.js
function getSliderUtilityClass(slot) {
  return generateUtilityClass2("JoySlider", slot);
}
var sliderClasses = generateUtilityClasses2("JoySlider", ["root", "disabled", "dragging", "marked", "vertical", "trackInverted", "trackFalse", "rail", "track", "mark", "markActive", "markLabel", "thumb", "thumbStart", "thumbEnd", "valueLabel", "valueLabelOpen", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "disabled", "sizeSm", "sizeMd", "sizeLg"]);
var sliderClasses_default = sliderClasses;

// node_modules/@mui/joy/Slider/Slider.js
var import_jsx_runtime68 = __toESM(require_jsx_runtime());
var import_jsx_runtime69 = __toESM(require_jsx_runtime());
var _excluded49 = ["aria-label", "aria-valuetext", "component", "componentsProps", "classes", "disableSwap", "disabled", "defaultValue", "getAriaLabel", "getAriaValueText", "marks", "max", "min", "name", "onChange", "onChangeCommitted", "onMouseDown", "orientation", "scale", "step", "tabIndex", "track", "value", "valueLabelDisplay", "valueLabelFormat", "isRtl", "color", "size", "variant"];
var valueToPercent = (value, min, max) => (value - min) * 100 / (max - min);
var Identity = (x) => x;
var useUtilityClasses42 = (ownerState) => {
  const {
    disabled,
    dragging,
    marked,
    orientation,
    track,
    color,
    size
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", dragging && "dragging", marked && "marked", orientation === "vertical" && "vertical", track === "inverted" && "trackInverted", track === false && "trackFalse", color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],
    rail: ["rail"],
    track: ["track"],
    mark: ["mark"],
    markActive: ["markActive"],
    markLabel: ["markLabel"],
    markLabelActive: ["markLabelActive"],
    valueLabel: ["valueLabel"],
    valueLabelOpen: ["valueLabelOpen"],
    thumb: ["thumb", disabled && "disabled"],
    active: ["active"],
    focusVisible: ["focusVisible"]
  };
  return composeClasses(slots, getSliderUtilityClass, {});
};
var sliderColorVariables = ({
  theme,
  ownerState
}) => (data = {}) => {
  var _theme$variants;
  const styles = ((_theme$variants = theme.variants[`${ownerState.variant}${data.state || ""}`]) == null ? void 0 : _theme$variants[ownerState.color]) || {};
  return _extends({}, styles.border && {
    "--variant-borderWidth": styles["--variant-borderWidth"]
  }, {
    "--Slider-track-color": styles.color,
    "--Slider-thumb-background": styles.color,
    "--Slider-thumb-color": styles.backgroundColor || theme.vars.palette.background.surface,
    "--Slider-track-background": styles.backgroundColor || theme.vars.palette.background.surface,
    "--Slider-track-borderColor": styles.borderColor,
    "--Slider-rail-background": theme.vars.palette.background.level2
  });
};
var SliderRoot = styled_default("span", {
  name: "JoySlider",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  const getColorVariables = sliderColorVariables({
    theme,
    ownerState
  });
  return [_extends({
    "--variant-borderWidth": "0px",
    "--Slider-size": "max(42px, max(var(--Slider-thumb-size), var(--Slider-track-size)))",
    "--Slider-track-radius": "var(--Slider-size)",
    "--Slider-mark-background": theme.vars.palette.text.tertiary,
    [`& .${sliderClasses_default.markActive}`]: {
      "--Slider-mark-background": "var(--Slider-track-color)"
    }
  }, ownerState.size === "sm" && {
    "--Slider-mark-size": "2px",
    "--Slider-track-size": "4px",
    "--Slider-thumb-size": "10px",
    "--Slider-valueLabel-arrowSize": "6px"
  }, ownerState.size === "md" && {
    "--Slider-mark-size": "2px",
    "--Slider-track-size": "6px",
    "--Slider-thumb-size": "14px",
    "--Slider-valueLabel-arrowSize": "8px"
  }, ownerState.size === "lg" && {
    "--Slider-mark-size": "3px",
    "--Slider-track-size": "10px",
    "--Slider-thumb-size": "20px",
    "--Slider-valueLabel-arrowSize": "10px"
  }, {
    "--Slider-thumb-radius": "calc(var(--Slider-thumb-size) / 2)",
    "--Slider-thumb-width": "var(--Slider-thumb-size)"
  }, getColorVariables(), {
    "&:hover": _extends({}, getColorVariables({
      state: "Hover"
    })),
    "&:active": _extends({}, getColorVariables({
      state: "Active"
    })),
    [`&.${sliderClasses_default.disabled}`]: _extends({
      pointerEvents: "none",
      color: theme.vars.palette.text.tertiary
    }, getColorVariables({
      state: "Disabled"
    })),
    [`&.${sliderClasses_default.dragging}`]: {
      [`& .${sliderClasses_default.track}, & .${sliderClasses_default.thumb}`]: {
        transition: "none"
      }
    },
    boxSizing: "border-box",
    display: "inline-block",
    position: "relative",
    cursor: "pointer",
    touchAction: "none",
    WebkitTapHighlightColor: "transparent"
  }, ownerState.orientation === "horizontal" && {
    padding: "calc(var(--Slider-size) / 2) 0",
    width: "100%"
  }, ownerState.orientation === "vertical" && {
    padding: "0 calc(var(--Slider-size) / 2)",
    height: "100%"
  }, {
    "@media print": {
      colorAdjust: "exact"
    }
  })];
});
var SliderRail = styled_default("span", {
  name: "JoySlider",
  slot: "Rail",
  overridesResolver: (props, styles) => styles.rail
})(({
  ownerState
}) => [_extends({
  display: "block",
  position: "absolute",
  backgroundColor: ownerState.track === "inverted" ? "var(--Slider-track-background)" : "var(--Slider-rail-background)",
  border: ownerState.track === "inverted" ? "var(--variant-borderWidth) solid var(--Slider-track-borderColor)" : "initial",
  borderRadius: "var(--Slider-track-radius)"
}, ownerState.orientation === "horizontal" && {
  height: "var(--Slider-track-size)",
  top: "50%",
  left: 0,
  right: 0,
  transform: "translateY(-50%)"
}, ownerState.orientation === "vertical" && {
  width: "var(--Slider-track-size)",
  top: 0,
  bottom: 0,
  left: "50%",
  transform: "translateX(-50%)"
}, ownerState.track === "inverted" && {
  opacity: 1
})]);
var SliderTrack = styled_default("span", {
  name: "JoySlider",
  slot: "Track",
  overridesResolver: (props, styles) => styles.track
})(({
  ownerState
}) => {
  return [_extends({
    display: "block",
    position: "absolute",
    color: "var(--Slider-track-color)",
    border: ownerState.track === "inverted" ? "initial" : "var(--variant-borderWidth) solid var(--Slider-track-borderColor)",
    backgroundColor: ownerState.track === "inverted" ? "var(--Slider-rail-background)" : "var(--Slider-track-background)",
    transition: "left 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, width 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, bottom 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, height 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"
  }, ownerState.orientation === "horizontal" && {
    height: "var(--Slider-track-size)",
    top: "50%",
    transform: "translateY(-50%)",
    borderRadius: "var(--Slider-track-radius) 0 0 var(--Slider-track-radius)"
  }, ownerState.orientation === "vertical" && {
    width: "var(--Slider-track-size)",
    left: "50%",
    transform: "translateX(-50%)",
    borderRadius: "0 0 var(--Slider-track-radius) var(--Slider-track-radius)"
  }, ownerState.track === false && {
    display: "none"
  })];
});
var SliderThumb = styled_default("span", {
  name: "JoySlider",
  slot: "Thumb",
  overridesResolver: (props, styles) => styles.thumb
})(({
  ownerState,
  theme
}) => _extends({
  position: "absolute",
  boxSizing: "border-box",
  outline: 0,
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  width: "var(--Slider-thumb-width)",
  height: "var(--Slider-thumb-size)",
  border: "var(--variant-borderWidth) solid var(--Slider-track-borderColor)",
  borderRadius: "var(--Slider-thumb-radius)",
  boxShadow: "var(--Slider-thumb-shadow)",
  color: "var(--Slider-thumb-color)",
  backgroundColor: "var(--Slider-thumb-background)",
  transition: "left 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,bottom 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
  [theme.focus.selector]: theme.focus.default
}, ownerState.orientation === "horizontal" && {
  top: "50%",
  transform: "translate(-50%, -50%)"
}, ownerState.orientation === "vertical" && {
  left: "50%",
  transform: "translate(-50%, 50%)"
}, {
  "&::before": {
    content: '""',
    display: "block",
    position: "absolute",
    background: "transparent",
    top: 0,
    left: 0,
    width: "100%",
    height: "100%",
    border: "2px solid",
    borderColor: "var(--Slider-thumb-color)",
    borderRadius: "inherit"
  }
}));
var SliderMark = styled_default("span", {
  name: "JoySlider",
  slot: "Mark",
  overridesResolver: (props, styles) => styles.mark
})(({
  ownerState
}) => {
  return _extends({
    position: "absolute",
    width: "var(--Slider-mark-size)",
    height: "var(--Slider-mark-size)",
    borderRadius: "var(--Slider-mark-size)",
    backgroundColor: "var(--Slider-mark-background)"
  }, ownerState.orientation === "horizontal" && _extends({
    top: "50%",
    transform: `translate(calc(var(--Slider-mark-size) / -2), -50%)`
  }, ownerState.percent === 0 && {
    transform: `translate(min(var(--Slider-mark-size), 3px), -50%)`
  }, ownerState.percent === 100 && {
    transform: `translate(calc(var(--Slider-mark-size) * -1 - min(var(--Slider-mark-size), 3px)), -50%)`
  }), ownerState.orientation === "vertical" && _extends({
    left: "50%",
    transform: "translate(-50%, calc(var(--Slider-mark-size) / 2))"
  }, ownerState.percent === 0 && {
    transform: `translate(-50%, calc(min(var(--Slider-mark-size), 3px) * -1))`
  }, ownerState.percent === 100 && {
    transform: `translate(-50%, calc(var(--Slider-mark-size) * 1 + min(var(--Slider-mark-size), 3px)))`
  }));
});
var SliderValueLabel = styled_default("span", {
  name: "JoySlider",
  slot: "ValueLabel",
  overridesResolver: (props, styles) => styles.valueLabel
})(({
  theme,
  ownerState
}) => _extends({}, ownerState.size === "sm" && {
  fontSize: theme.fontSize.xs,
  lineHeight: theme.lineHeight.md,
  paddingInline: "0.25rem",
  minWidth: "20px"
}, ownerState.size === "md" && {
  fontSize: theme.fontSize.sm,
  lineHeight: theme.lineHeight.md,
  paddingInline: "0.375rem",
  minWidth: "24px"
}, ownerState.size === "lg" && {
  fontSize: theme.fontSize.md,
  lineHeight: theme.lineHeight.md,
  paddingInline: "0.5rem",
  minWidth: "28px"
}, {
  zIndex: 1,
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  whiteSpace: "nowrap",
  fontFamily: theme.vars.fontFamily.body,
  fontWeight: theme.vars.fontWeight.md,
  bottom: 0,
  transformOrigin: "bottom center",
  transform: "translateY(calc((var(--Slider-thumb-size) + var(--Slider-valueLabel-arrowSize)) * -1)) scale(0)",
  position: "absolute",
  backgroundColor: theme.vars.palette.background.tooltip,
  boxShadow: theme.vars.shadow.sm,
  borderRadius: theme.vars.radius.xs,
  color: "#fff",
  "&::before": {
    display: "var(--Slider-valueLabel-arrowDisplay)",
    position: "absolute",
    content: '""',
    color: theme.vars.palette.background.tooltip,
    bottom: 0,
    border: "calc(var(--Slider-valueLabel-arrowSize) / 2) solid",
    borderColor: "currentColor",
    borderRightColor: "transparent",
    borderBottomColor: "transparent",
    borderLeftColor: "transparent",
    left: "50%",
    transform: "translate(-50%, 100%)",
    backgroundColor: "transparent"
  },
  [`&.${sliderClasses_default.valueLabelOpen}`]: {
    transform: "translateY(calc((var(--Slider-thumb-size) + var(--Slider-valueLabel-arrowSize)) * -1)) scale(1)"
  }
}));
var SliderMarkLabel = styled_default("span", {
  name: "JoySlider",
  slot: "MarkLabel",
  overridesResolver: (props, styles) => styles.markLabel
})(({
  theme,
  ownerState
}) => _extends({
  fontFamily: theme.vars.fontFamily.body
}, ownerState.size === "sm" && {
  fontSize: theme.vars.fontSize.xs
}, ownerState.size === "md" && {
  fontSize: theme.vars.fontSize.sm
}, ownerState.size === "lg" && {
  fontSize: theme.vars.fontSize.md
}, {
  color: theme.palette.text.tertiary,
  position: "absolute",
  whiteSpace: "nowrap"
}, ownerState.orientation === "horizontal" && {
  top: "calc(50% + 4px + (max(var(--Slider-track-size), var(--Slider-thumb-size)) / 2))",
  transform: "translateX(-50%)"
}, ownerState.orientation === "vertical" && {
  left: "calc(50% + 8px + (max(var(--Slider-track-size), var(--Slider-thumb-size)) / 2))",
  transform: "translateY(50%)"
}));
var SliderInput = styled_default("input", {
  name: "JoySlider",
  slot: "Input",
  overridesResolver: (props, styles) => styles.input
})({});
var Slider = React67.forwardRef(function Slider2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoySlider"
  });
  const {
    "aria-label": ariaLabel,
    "aria-valuetext": ariaValuetext,
    component,
    componentsProps = {},
    classes: classesProp,
    disableSwap = false,
    disabled = false,
    defaultValue,
    getAriaLabel,
    getAriaValueText,
    marks: marksProp = false,
    max = 100,
    min = 0,
    orientation = "horizontal",
    scale = Identity,
    step = 1,
    track = "normal",
    valueLabelDisplay = "off",
    valueLabelFormat = Identity,
    isRtl = false,
    color = "primary",
    size = "md",
    variant = "solid"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded49);
  const ownerState = _extends({}, props, {
    marks: marksProp,
    classes: classesProp,
    disabled,
    defaultValue,
    isRtl,
    max,
    min,
    orientation,
    scale,
    step,
    track,
    valueLabelDisplay,
    valueLabelFormat,
    color,
    size,
    variant
  });
  const {
    axisProps,
    getRootProps,
    getHiddenInputProps,
    getThumbProps,
    open,
    active,
    axis,
    focusedThumbIndex,
    range,
    dragging,
    marks,
    values,
    trackOffset,
    trackLeap
  } = useSlider(_extends({}, ownerState, {
    ref
  }));
  ownerState.marked = marks.length > 0 && marks.some((mark) => mark.label);
  ownerState.dragging = dragging;
  const trackStyle = _extends({}, axisProps[axis].offset(trackOffset), axisProps[axis].leap(trackLeap));
  const classes = useUtilityClasses42(ownerState);
  const rootProps = useSlotProps({
    elementType: SliderRoot,
    getSlotProps: getRootProps,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      as: component
    },
    ownerState,
    className: classes.root
  });
  const railProps = useSlotProps({
    elementType: SliderRail,
    externalSlotProps: componentsProps.rail,
    ownerState,
    className: classes.rail
  });
  const trackProps = useSlotProps({
    elementType: SliderTrack,
    externalSlotProps: componentsProps.track,
    additionalProps: {
      style: trackStyle
    },
    ownerState,
    className: classes.track
  });
  const markProps = useSlotProps({
    elementType: SliderMark,
    externalSlotProps: componentsProps.mark,
    ownerState,
    className: classes.mark
  });
  const markLabelProps = useSlotProps({
    elementType: SliderMarkLabel,
    externalSlotProps: componentsProps.markLabel,
    ownerState,
    className: classes.markLabel
  });
  const thumbProps = useSlotProps({
    elementType: SliderThumb,
    getSlotProps: getThumbProps,
    externalSlotProps: componentsProps.thumb,
    ownerState,
    className: classes.thumb
  });
  const inputProps = useSlotProps({
    elementType: SliderInput,
    getSlotProps: getHiddenInputProps,
    externalSlotProps: componentsProps.input,
    ownerState
  });
  const valueLabelProps = useSlotProps({
    elementType: SliderValueLabel,
    externalSlotProps: componentsProps.valueLabel,
    ownerState,
    className: classes.valueLabel
  });
  return (0, import_jsx_runtime69.jsxs)(SliderRoot, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime68.jsx)(SliderRail, _extends({}, railProps)), (0, import_jsx_runtime68.jsx)(SliderTrack, _extends({}, trackProps)), marks.filter((mark) => mark.value >= min && mark.value <= max).map((mark, index) => {
      const percent = valueToPercent(mark.value, min, max);
      const style = axisProps[axis].offset(percent);
      let markActive;
      if (track === false) {
        markActive = values.indexOf(mark.value) !== -1;
      } else {
        markActive = track === "normal" && (range ? mark.value >= values[0] && mark.value <= values[values.length - 1] : mark.value <= values[0]) || track === "inverted" && (range ? mark.value <= values[0] || mark.value >= values[values.length - 1] : mark.value >= values[0]);
      }
      return (0, import_jsx_runtime69.jsxs)(React67.Fragment, {
        children: [(0, import_jsx_runtime68.jsx)(SliderMark, _extends({
          "data-index": index
        }, markProps, {
          style: _extends({}, style, markProps.style),
          ownerState: _extends({}, ownerState, {
            percent
          }),
          className: clsx_m_default(markProps.className, markActive && classes.markActive)
        })), mark.label != null ? (0, import_jsx_runtime68.jsx)(SliderMarkLabel, _extends({
          "aria-hidden": true,
          "data-index": index
        }, markLabelProps, {
          ownerState,
          style: _extends({}, style, markLabelProps.style),
          className: clsx_m_default(classes.markLabel, markLabelProps.className, markActive && classes.markLabelActive),
          children: mark.label
        })) : null]
      }, mark.value);
    }), values.map((value, index) => {
      const percent = valueToPercent(value, min, max);
      const style = axisProps[axis].offset(percent);
      return (0, import_jsx_runtime69.jsxs)(SliderThumb, _extends({
        "data-index": index
      }, thumbProps, {
        className: clsx_m_default(thumbProps.className, active === index && classes.active, focusedThumbIndex === index && classes.focusVisible),
        style: _extends({}, style, {
          pointerEvents: disableSwap && active !== index ? "none" : void 0
        }, thumbProps.style),
        children: [(0, import_jsx_runtime68.jsx)(SliderInput, _extends({
          "data-index": index,
          "aria-label": getAriaLabel ? getAriaLabel(index) : ariaLabel,
          "aria-valuenow": scale(value),
          "aria-valuetext": getAriaValueText ? getAriaValueText(scale(value), index) : ariaValuetext,
          value: values[index]
        }, inputProps)), valueLabelDisplay !== "off" ? (0, import_jsx_runtime68.jsx)(SliderValueLabel, _extends({}, valueLabelProps, {
          className: clsx_m_default(valueLabelProps.className, (open === index || active === index || valueLabelDisplay === "on") && classes.valueLabelOpen),
          children: typeof valueLabelFormat === "function" ? valueLabelFormat(scale(value), index) : valueLabelFormat
        })) : null]
      }), index);
    })]
  }));
});
true ? Slider.propTypes = {
  "aria-label": import_prop_types46.default.string,
  "aria-valuetext": import_prop_types46.default.string,
  children: import_prop_types46.default.node,
  classes: import_prop_types46.default.object,
  color: import_prop_types46.default.oneOfType([import_prop_types46.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types46.default.string]),
  component: import_prop_types46.default.elementType,
  componentsProps: import_prop_types46.default.shape({
    input: import_prop_types46.default.oneOfType([import_prop_types46.default.func, import_prop_types46.default.object]),
    mark: import_prop_types46.default.oneOfType([import_prop_types46.default.func, import_prop_types46.default.object]),
    markLabel: import_prop_types46.default.oneOfType([import_prop_types46.default.func, import_prop_types46.default.object]),
    rail: import_prop_types46.default.oneOfType([import_prop_types46.default.func, import_prop_types46.default.object]),
    root: import_prop_types46.default.oneOfType([import_prop_types46.default.func, import_prop_types46.default.object]),
    thumb: import_prop_types46.default.oneOfType([import_prop_types46.default.func, import_prop_types46.default.object]),
    track: import_prop_types46.default.oneOfType([import_prop_types46.default.func, import_prop_types46.default.object]),
    valueLabel: import_prop_types46.default.oneOfType([import_prop_types46.default.func, import_prop_types46.default.object])
  }),
  defaultValue: import_prop_types46.default.oneOfType([import_prop_types46.default.arrayOf(import_prop_types46.default.number), import_prop_types46.default.number]),
  disabled: import_prop_types46.default.bool,
  disableSwap: import_prop_types46.default.bool,
  getAriaLabel: import_prop_types46.default.func,
  getAriaValueText: import_prop_types46.default.func,
  isRtl: import_prop_types46.default.bool,
  marks: import_prop_types46.default.oneOfType([import_prop_types46.default.arrayOf(import_prop_types46.default.shape({
    label: import_prop_types46.default.node,
    value: import_prop_types46.default.number.isRequired
  })), import_prop_types46.default.bool]),
  max: import_prop_types46.default.number,
  min: import_prop_types46.default.number,
  name: import_prop_types46.default.string,
  onChange: import_prop_types46.default.func,
  onChangeCommitted: import_prop_types46.default.func,
  onMouseDown: import_prop_types46.default.func,
  orientation: import_prop_types46.default.oneOf(["horizontal", "vertical"]),
  scale: import_prop_types46.default.func,
  size: import_prop_types46.default.oneOfType([import_prop_types46.default.oneOf(["sm", "md", "lg"]), import_prop_types46.default.string]),
  step: import_prop_types46.default.number,
  sx: import_prop_types46.default.oneOfType([import_prop_types46.default.arrayOf(import_prop_types46.default.oneOfType([import_prop_types46.default.func, import_prop_types46.default.object, import_prop_types46.default.bool])), import_prop_types46.default.func, import_prop_types46.default.object]),
  tabIndex: import_prop_types46.default.number,
  track: import_prop_types46.default.oneOf(["inverted", "normal", false]),
  value: import_prop_types46.default.oneOfType([import_prop_types46.default.arrayOf(import_prop_types46.default.number), import_prop_types46.default.number]),
  valueLabelDisplay: import_prop_types46.default.oneOf(["auto", "off", "on"]),
  valueLabelFormat: import_prop_types46.default.oneOfType([import_prop_types46.default.func, import_prop_types46.default.string]),
  variant: import_prop_types46.default.oneOfType([import_prop_types46.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types46.default.string])
} : void 0;
var Slider_default = Slider;

// node_modules/@mui/joy/Stack/Stack.js
init_esm2();
var import_prop_types47 = __toESM(require_prop_types());
var Stack = createStack({
  componentName: "JoyStack",
  createStyledComponent: styled_default("div", {
    name: "JoyStack",
    slot: "Root",
    overridesResolver: (props, styles) => styles.root
  }),
  useThemeProps: (inProps) => useThemeProps2({
    props: inProps,
    name: "JoyStack"
  })
});
true ? Stack.propTypes = {
  children: import_prop_types47.default.node,
  direction: import_prop_types47.default.oneOfType([import_prop_types47.default.oneOf(["column-reverse", "column", "row-reverse", "row"]), import_prop_types47.default.arrayOf(import_prop_types47.default.oneOf(["column-reverse", "column", "row-reverse", "row"])), import_prop_types47.default.object]),
  divider: import_prop_types47.default.node,
  spacing: import_prop_types47.default.oneOfType([import_prop_types47.default.arrayOf(import_prop_types47.default.oneOfType([import_prop_types47.default.number, import_prop_types47.default.string])), import_prop_types47.default.number, import_prop_types47.default.object, import_prop_types47.default.string]),
  sx: import_prop_types47.default.oneOfType([import_prop_types47.default.arrayOf(import_prop_types47.default.oneOfType([import_prop_types47.default.func, import_prop_types47.default.object, import_prop_types47.default.bool])), import_prop_types47.default.func, import_prop_types47.default.object])
} : void 0;
var Stack_default = Stack;

// node_modules/@mui/joy/Stack/stackClasses.js
function getStackUtilityClass(slot) {
  return generateUtilityClass2("JoyStack", slot);
}
var stackClasses = generateUtilityClasses2("JoyStack", ["root"]);
var stackClasses_default = stackClasses;

// node_modules/@mui/joy/Switch/Switch.js
init_objectWithoutPropertiesLoose();
init_extends();
var React68 = __toESM(require_react());
var import_prop_types48 = __toESM(require_prop_types());
init_esm();
init_composeClasses();
init_utils();
init_SwitchUnstyled();

// node_modules/@mui/joy/Switch/switchClasses.js
function getSwitchUtilityClass(slot) {
  return generateUtilityClass2("JoySwitch", slot);
}
var switchClasses = generateUtilityClasses2("JoySwitch", ["root", "checked", "disabled", "action", "input", "thumb", "track", "focusVisible", "readOnly", "colorPrimary", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantOutlined", "variantSoft", "variantSolid"]);
var switchClasses_default = switchClasses;

// node_modules/@mui/joy/Switch/Switch.js
var import_jsx_runtime70 = __toESM(require_jsx_runtime());
var import_jsx_runtime71 = __toESM(require_jsx_runtime());
var _excluded50 = ["checked", "component", "componentsProps", "defaultChecked", "disabled", "onBlur", "onChange", "onFocus", "onFocusVisible", "readOnly", "required", "id", "color", "variant", "size", "startDecorator", "endDecorator"];
var useUtilityClasses43 = (ownerState) => {
  const {
    checked,
    disabled,
    focusVisible,
    readOnly,
    color,
    variant
  } = ownerState;
  const slots = {
    root: ["root", checked && "checked", disabled && "disabled", focusVisible && "focusVisible", readOnly && "readOnly", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`],
    thumb: ["thumb", checked && "checked"],
    track: ["track", checked && "checked"],
    action: ["action", focusVisible && "focusVisible"],
    input: ["input"],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  return composeClasses(slots, getSwitchUtilityClass, {});
};
var switchColorVariables = ({
  theme,
  ownerState
}) => (data = {}) => {
  var _theme$vars$palette, _theme$vars$palette2, _theme$vars$palette3, _theme$vars$palette4, _theme$vars$palette5;
  const variant = ownerState.variant;
  const color = ownerState.color;
  return {
    "--Switch-track-background": (_theme$vars$palette = theme.vars.palette[color]) == null ? void 0 : _theme$vars$palette[`${variant}${data.state || ""}Bg`],
    "--Switch-track-color": (_theme$vars$palette2 = theme.vars.palette[color]) == null ? void 0 : _theme$vars$palette2[`${variant}Color`],
    "--Switch-track-borderColor": variant === "outlined" ? (_theme$vars$palette3 = theme.vars.palette[color]) == null ? void 0 : _theme$vars$palette3[`${variant}${data.state || ""}Border`] : "currentColor",
    "--Switch-thumb-background": (_theme$vars$palette4 = theme.vars.palette[color]) == null ? void 0 : _theme$vars$palette4[`${variant}${data.state || ""}Color`],
    "--Switch-thumb-color": (_theme$vars$palette5 = theme.vars.palette[color]) == null ? void 0 : _theme$vars$palette5[`${variant}Bg`]
  };
};
var SwitchRoot = styled_default("div", {
  name: "JoySwitch",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$variants2;
  const getColorVariables = switchColorVariables({
    theme,
    ownerState
  });
  return _extends({
    "--variant-borderWidth": (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : (_theme$variants2 = _theme$variants[ownerState.color]) == null ? void 0 : _theme$variants2["--variant-borderWidth"],
    "--Switch-track-radius": theme.vars.radius.lg,
    "--Switch-thumb-shadow": ownerState.variant === "soft" ? "none" : "0 0 0 1px var(--Switch-track-background)"
  }, ownerState.size === "sm" && {
    "--Switch-track-width": "40px",
    "--Switch-track-height": "20px",
    "--Switch-thumb-size": "12px",
    "--Switch-gap": "6px",
    fontSize: theme.vars.fontSize.sm
  }, ownerState.size === "md" && {
    "--Switch-track-width": "48px",
    "--Switch-track-height": "24px",
    "--Switch-thumb-size": "16px",
    "--Switch-gap": "8px",
    fontSize: theme.vars.fontSize.md
  }, ownerState.size === "lg" && {
    "--Switch-track-width": "64px",
    "--Switch-track-height": "32px",
    "--Switch-thumb-size": "24px",
    "--Switch-gap": "12px"
  }, {
    "--internal-paddingBlock": `max((var(--Switch-track-height) - 2 * var(--variant-borderWidth) - var(--Switch-thumb-size)) / 2, 0px)`,
    "--Switch-thumb-radius": `max(var(--Switch-track-radius) - var(--internal-paddingBlock), min(var(--internal-paddingBlock) / 2, var(--Switch-track-radius) / 2))`,
    "--Switch-thumb-width": "var(--Switch-thumb-size)",
    "--Switch-thumb-offset": `max((var(--Switch-track-height) - var(--Switch-thumb-size)) / 2, 0px)`
  }, getColorVariables(), {
    "&:hover": _extends({}, getColorVariables({
      state: "Hover"
    })),
    [`&.${switchClasses_default.checked}`]: _extends({}, getColorVariables(), {
      "&:hover": _extends({}, getColorVariables({
        state: "Hover"
      }))
    }),
    [`&.${switchClasses_default.disabled}`]: _extends({
      pointerEvents: "none",
      color: theme.vars.palette.text.tertiary
    }, getColorVariables({
      state: "Disabled"
    })),
    display: "inline-flex",
    alignItems: "center",
    alignSelf: "center",
    fontFamily: theme.vars.fontFamily.body,
    position: "relative",
    padding: "calc((var(--Switch-thumb-size) / 2) - (var(--Switch-track-height) / 2)) calc(-1 * var(--Switch-thumb-offset))",
    backgroundColor: "initial",
    border: "none"
  });
});
var SwitchAction = styled_default("div", {
  name: "JoySwitch",
  slot: "Action",
  overridesResolver: (props, styles) => styles.action
})(({
  theme
}) => ({
  borderRadius: "var(--Switch-track-radius)",
  position: "absolute",
  top: 0,
  left: 0,
  bottom: 0,
  right: 0,
  [theme.focus.selector]: theme.focus.default
}));
var SwitchInput = styled_default("input", {
  name: "JoySwitch",
  slot: "Input",
  overridesResolver: (props, styles) => styles.input
})({
  margin: 0,
  height: "100%",
  width: "100%",
  opacity: 0,
  position: "absolute",
  cursor: "pointer"
});
var SwitchTrack = styled_default("span", {
  name: "JoySwitch",
  slot: "Track",
  overridesResolver: (props, styles) => styles.track
})(({
  theme,
  ownerState
}) => _extends({
  position: "relative",
  color: "var(--Switch-track-color)",
  height: "var(--Switch-track-height)",
  width: "var(--Switch-track-width)",
  display: "flex",
  flexShrink: 0,
  justifyContent: "space-between",
  alignItems: "center",
  boxSizing: "border-box",
  border: "var(--variant-borderWidth) solid",
  borderColor: "var(--Switch-track-borderColor)",
  backgroundColor: "var(--Switch-track-background)",
  borderRadius: "var(--Switch-track-radius)",
  fontFamily: theme.vars.fontFamily.body
}, ownerState.size === "sm" && {
  fontSize: theme.vars.fontSize.xs
}, ownerState.size === "md" && {
  fontSize: theme.vars.fontSize.sm
}, ownerState.size === "lg" && {
  fontSize: theme.vars.fontSize.md
}));
var SwitchThumb = styled_default("span", {
  name: "JoySwitch",
  slot: "Thumb",
  overridesResolver: (props, styles) => styles.thumb
})({
  "--Icon-fontSize": "calc(var(--Switch-thumb-size) * 0.75)",
  transition: "left 0.2s",
  display: "inline-flex",
  justifyContent: "center",
  alignItems: "center",
  position: "absolute",
  top: "50%",
  left: "calc(50% - var(--Switch-track-width) / 2 + var(--Switch-thumb-width) / 2 + var(--Switch-thumb-offset))",
  transform: "translate(-50%, -50%)",
  width: "var(--Switch-thumb-width)",
  height: "var(--Switch-thumb-size)",
  borderRadius: "var(--Switch-thumb-radius)",
  boxShadow: "var(--Switch-thumb-shadow)",
  color: "var(--Switch-thumb-color)",
  backgroundColor: "var(--Switch-thumb-background)",
  [`&.${switchClasses_default.checked}`]: {
    left: "calc(50% + var(--Switch-track-width) / 2 - var(--Switch-thumb-width) / 2 - var(--Switch-thumb-offset))"
  }
});
var SwitchStartDecorator = styled_default("span", {
  name: "JoySwitch",
  slot: "StartDecorator",
  overridesResolver: (props, styles) => styles.startDecorator
})({
  display: "inline-flex",
  marginInlineEnd: "var(--Switch-gap)"
});
var SwitchEndDecorator = styled_default("span", {
  name: "JoySwitch",
  slot: "EndDecorator",
  overridesResolver: (props, styles) => styles.endDecorator
})({
  display: "inline-flex",
  marginInlineStart: "var(--Switch-gap)"
});
var Switch = React68.forwardRef(function Switch2(inProps, ref) {
  var _ref, _inProps$disabled, _ref2, _inProps$size, _ref3, _inProps$color;
  const props = useThemeProps2({
    props: inProps,
    name: "JoySwitch"
  });
  const {
    checked: checkedProp,
    component = "div",
    componentsProps = {},
    defaultChecked,
    disabled: disabledExternalProp,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible,
    readOnly: readOnlyProp,
    id,
    color: colorProp,
    variant = "solid",
    size: sizeProp = "md",
    startDecorator,
    endDecorator
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded50);
  const formControl = React68.useContext(FormControlContext_default);
  if (true) {
    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;
    React68.useEffect(() => {
      if (registerEffect) {
        return registerEffect();
      }
      return void 0;
    }, [registerEffect]);
  }
  const disabledProp = (_ref = (_inProps$disabled = inProps.disabled) != null ? _inProps$disabled : formControl == null ? void 0 : formControl.disabled) != null ? _ref : disabledExternalProp;
  const size = (_ref2 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref2 : sizeProp;
  const color = formControl != null && formControl.error ? "danger" : (_ref3 = (_inProps$color = inProps.color) != null ? _inProps$color : formControl == null ? void 0 : formControl.color) != null ? _ref3 : colorProp;
  const useSwitchProps = {
    checked: checkedProp,
    defaultChecked,
    disabled: disabledProp,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible,
    readOnly: readOnlyProp
  };
  const {
    getInputProps,
    checked,
    disabled,
    focusVisible,
    readOnly
  } = useSwitch(useSwitchProps);
  const ownerState = _extends({}, props, {
    id,
    checked,
    disabled,
    focusVisible,
    readOnly,
    color: checked ? color || "primary" : color || "neutral",
    variant,
    size
  });
  const classes = useUtilityClasses43(ownerState);
  const rootProps = useSlotProps({
    elementType: SwitchRoot,
    externalSlotProps: componentsProps.root,
    ownerState,
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    className: classes.root
  });
  const startDecoratorProps = useSlotProps({
    elementType: SwitchStartDecorator,
    externalSlotProps: componentsProps.startDecorator,
    ownerState,
    additionalProps: {
      "aria-hidden": true
    },
    className: classes.startDecorator
  });
  const endDecoratorProps = useSlotProps({
    elementType: SwitchEndDecorator,
    externalSlotProps: componentsProps.endDecorator,
    ownerState,
    additionalProps: {
      "aria-hidden": true
    },
    className: classes.endDecorator
  });
  const trackProps = useSlotProps({
    elementType: SwitchTrack,
    externalSlotProps: componentsProps.track,
    ownerState,
    className: classes.track
  });
  const thumbProps = useSlotProps({
    elementType: SwitchThumb,
    externalSlotProps: componentsProps.thumb,
    ownerState,
    className: classes.thumb
  });
  const actionProps = useSlotProps({
    elementType: SwitchAction,
    externalSlotProps: componentsProps.action,
    ownerState,
    className: classes.action
  });
  const inputProps = useSlotProps({
    elementType: SwitchInput,
    getSlotProps: getInputProps,
    externalSlotProps: componentsProps.input,
    ownerState,
    additionalProps: {
      id: id != null ? id : formControl == null ? void 0 : formControl.htmlFor,
      "aria-describedby": formControl == null ? void 0 : formControl["aria-describedby"]
    },
    className: classes.input
  });
  return (0, import_jsx_runtime71.jsxs)(SwitchRoot, _extends({}, rootProps, {
    children: [startDecorator && (0, import_jsx_runtime70.jsx)(SwitchStartDecorator, _extends({}, startDecoratorProps, {
      children: typeof startDecorator === "function" ? startDecorator(ownerState) : startDecorator
    })), (0, import_jsx_runtime71.jsxs)(SwitchTrack, _extends({}, trackProps, {
      children: [trackProps == null ? void 0 : trackProps.children, (0, import_jsx_runtime70.jsx)(SwitchThumb, _extends({}, thumbProps))]
    })), (0, import_jsx_runtime70.jsx)(SwitchAction, _extends({}, actionProps, {
      children: (0, import_jsx_runtime70.jsx)(SwitchInput, _extends({}, inputProps))
    })), endDecorator && (0, import_jsx_runtime70.jsx)(SwitchEndDecorator, _extends({}, endDecoratorProps, {
      children: typeof endDecorator === "function" ? endDecorator(ownerState) : endDecorator
    }))]
  }));
});
true ? Switch.propTypes = {
  checked: import_prop_types48.default.bool,
  children: import_prop_types48.default.node,
  color: import_prop_types48.default.oneOfType([import_prop_types48.default.oneOf(["danger", "info", "primary", "success", "warning"]), import_prop_types48.default.string]),
  component: import_prop_types48.default.elementType,
  componentsProps: import_prop_types48.default.shape({
    action: import_prop_types48.default.oneOfType([import_prop_types48.default.func, import_prop_types48.default.object]),
    endDecorator: import_prop_types48.default.oneOfType([import_prop_types48.default.func, import_prop_types48.default.object]),
    input: import_prop_types48.default.oneOfType([import_prop_types48.default.func, import_prop_types48.default.object]),
    root: import_prop_types48.default.oneOfType([import_prop_types48.default.func, import_prop_types48.default.object]),
    startDecorator: import_prop_types48.default.oneOfType([import_prop_types48.default.func, import_prop_types48.default.object]),
    thumb: import_prop_types48.default.oneOfType([import_prop_types48.default.func, import_prop_types48.default.object]),
    track: import_prop_types48.default.oneOfType([import_prop_types48.default.func, import_prop_types48.default.object])
  }),
  defaultChecked: import_prop_types48.default.bool,
  disabled: import_prop_types48.default.bool,
  endDecorator: import_prop_types48.default.oneOfType([import_prop_types48.default.node, import_prop_types48.default.func]),
  id: import_prop_types48.default.string,
  onBlur: import_prop_types48.default.func,
  onChange: import_prop_types48.default.func,
  onFocus: import_prop_types48.default.func,
  onFocusVisible: import_prop_types48.default.func,
  readOnly: import_prop_types48.default.bool,
  required: import_prop_types48.default.bool,
  size: import_prop_types48.default.oneOfType([import_prop_types48.default.oneOf(["sm", "md", "lg"]), import_prop_types48.default.string]),
  startDecorator: import_prop_types48.default.oneOfType([import_prop_types48.default.node, import_prop_types48.default.func]),
  sx: import_prop_types48.default.oneOfType([import_prop_types48.default.arrayOf(import_prop_types48.default.oneOfType([import_prop_types48.default.func, import_prop_types48.default.object, import_prop_types48.default.bool])), import_prop_types48.default.func, import_prop_types48.default.object]),
  variant: import_prop_types48.default.oneOfType([import_prop_types48.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types48.default.string])
} : void 0;
var Switch_default = Switch;

// node_modules/@mui/joy/Tab/Tab.js
init_objectWithoutPropertiesLoose();
init_extends();
var React69 = __toESM(require_react());
var import_prop_types49 = __toESM(require_prop_types());
init_esm();
init_base();
init_TabUnstyled();
init_utils();

// node_modules/@mui/joy/Tab/tabClasses.js
function getTabUtilityClass(slot) {
  return generateUtilityClass2("JoyTab", slot);
}
var tabListClasses = generateUtilityClasses2("JoyTab", ["root", "disabled", "focusVisible", "selected", "horizontal", "vertical", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var tabClasses_default = tabListClasses;

// node_modules/@mui/joy/Tab/Tab.js
var import_jsx_runtime72 = __toESM(require_jsx_runtime());
var _excluded51 = ["action", "children", "value", "disabled", "onChange", "onClick", "onFocus", "component", "orientation", "variant", "color"];
var useUtilityClasses44 = (ownerState) => {
  const {
    selected,
    disabled,
    focusVisible,
    variant,
    color,
    orientation
  } = ownerState;
  const slots = {
    root: ["root", orientation, disabled && "disabled", focusVisible && "focusVisible", selected && "selected", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]
  };
  return composeClasses(slots, getTabUtilityClass, {});
};
var TabRoot = styled_default(ListItemButtonRoot, {
  name: "JoyTab",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  const variantStyle = (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color];
  return _extends({
    justifyContent: "center",
    flexGrow: 1
  }, ownerState.selected && _extends({
    boxShadow: theme.vars.shadow.sm,
    fontWeight: "initial"
  }, !(variantStyle != null && variantStyle.backgroundColor) && {
    backgroundColor: theme.vars.palette.background.body,
    "&:hover": {
      backgroundColor: theme.vars.palette.background.body
    }
  }));
});
var Tab = React69.forwardRef(function Tab2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyTab"
  });
  const row = React69.useContext(RowListContext_default);
  const {
    action,
    children,
    disabled = false,
    component = "button",
    orientation = "horizontal",
    variant = "plain",
    color = "neutral"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded51);
  const tabRef = React69.useRef();
  const handleRef = useForkRef(tabRef, ref);
  const {
    active,
    focusVisible,
    setFocusVisible,
    selected,
    getRootProps
  } = useTab_default(_extends({}, props, {
    ref: handleRef
  }));
  React69.useImperativeHandle(action, () => ({
    focusVisible: () => {
      setFocusVisible(true);
      tabRef.current.focus();
    }
  }), [setFocusVisible]);
  const ownerState = _extends({}, props, {
    orientation,
    row,
    active,
    focusVisible,
    disabled,
    selected,
    variant,
    color
  });
  const classes = useUtilityClasses44(ownerState);
  const tabRootProps = useSlotProps({
    elementType: TabRoot,
    getSlotProps: getRootProps,
    externalSlotProps: {},
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    ownerState,
    className: classes.root
  });
  return (0, import_jsx_runtime72.jsx)(ListItemButtonOrientationContext_default.Provider, {
    value: orientation,
    children: (0, import_jsx_runtime72.jsx)(TabRoot, _extends({}, tabRootProps, {
      children
    }))
  });
});
true ? Tab.propTypes = {
  action: import_prop_types49.default.oneOfType([import_prop_types49.default.func, import_prop_types49.default.shape({
    current: import_prop_types49.default.shape({
      focusVisible: import_prop_types49.default.func.isRequired
    })
  })]),
  children: import_prop_types49.default.node,
  color: import_prop_types49.default.oneOfType([import_prop_types49.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types49.default.string]),
  component: import_prop_types49.default.elementType,
  disabled: import_prop_types49.default.bool,
  onChange: import_prop_types49.default.func,
  onClick: import_prop_types49.default.func,
  onFocus: import_prop_types49.default.func,
  orientation: import_prop_types49.default.oneOf(["horizontal", "vertical"]),
  sx: import_prop_types49.default.oneOfType([import_prop_types49.default.arrayOf(import_prop_types49.default.oneOfType([import_prop_types49.default.func, import_prop_types49.default.object, import_prop_types49.default.bool])), import_prop_types49.default.func, import_prop_types49.default.object]),
  value: import_prop_types49.default.oneOfType([import_prop_types49.default.number, import_prop_types49.default.string]),
  variant: import_prop_types49.default.oneOfType([import_prop_types49.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types49.default.string])
} : void 0;
var Tab_default = Tab;

// node_modules/@mui/joy/TabList/TabList.js
init_objectWithoutPropertiesLoose();
init_extends();
var React71 = __toESM(require_react());
var import_prop_types50 = __toESM(require_prop_types());
init_esm();
init_base();
init_TabsListUnstyled();
init_utils();

// node_modules/@mui/joy/Tabs/SizeTabsContext.js
var React70 = __toESM(require_react());
var SizeTabsContext = React70.createContext("md");
var SizeTabsContext_default = SizeTabsContext;

// node_modules/@mui/joy/TabList/tabListClasses.js
function getTabListUtilityClass(slot) {
  return generateUtilityClass2("JoyTabList", slot);
}
var tabListClasses2 = generateUtilityClasses2("JoyTabList", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg"]);
var tabListClasses_default = tabListClasses2;

// node_modules/@mui/joy/TabList/TabList.js
var import_jsx_runtime73 = __toESM(require_jsx_runtime());
var _excluded52 = ["component", "children", "variant", "color", "size"];
var useUtilityClasses45 = (ownerState) => {
  const {
    orientation,
    size,
    variant,
    color
  } = ownerState;
  const slots = {
    root: ["root", orientation, variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getTabListUtilityClass, {});
};
var TabListRoot = styled_default(ListRoot, {
  name: "JoyTabList",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme
}) => _extends({
  flexGrow: "initial",
  "--List-radius": theme.vars.radius.md,
  "--List-gap": "var(--Tabs-gap)",
  "--List-padding": "var(--Tabs-gap)",
  "--List-divider-gap": "0px"
}, scopedVariables));
var TabList = React71.forwardRef(function TabList2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyTabList"
  });
  const tabsSize = React71.useContext(SizeTabsContext_default);
  const {
    component = "div",
    variant = "soft",
    color = "neutral",
    size: sizeProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded52);
  const {
    isRtl,
    orientation,
    getRootProps,
    processChildren
  } = useTabsList_default(_extends({}, props, {
    ref
  }));
  const row = orientation === "horizontal";
  const size = sizeProp != null ? sizeProp : tabsSize;
  const ownerState = _extends({}, props, {
    isRtl,
    orientation,
    variant,
    color,
    size,
    row,
    nesting: false
  });
  const classes = useUtilityClasses45(ownerState);
  const tabsListRootProps = useSlotProps({
    elementType: TabListRoot,
    getSlotProps: getRootProps,
    externalSlotProps: {},
    externalForwardedProps: other,
    additionalProps: {
      as: component
    },
    ownerState,
    className: classes.root
  });
  const processedChildren = processChildren();
  return (0, import_jsx_runtime73.jsx)(TabListRoot, _extends({}, tabsListRootProps, {
    children: (0, import_jsx_runtime73.jsx)(ListProvider_default, {
      row,
      nested: true,
      children: processedChildren
    })
  }));
});
true ? TabList.propTypes = {
  children: import_prop_types50.default.node,
  color: import_prop_types50.default.oneOfType([import_prop_types50.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types50.default.string]),
  component: import_prop_types50.default.elementType,
  size: import_prop_types50.default.oneOfType([import_prop_types50.default.oneOf(["sm", "md", "lg"]), import_prop_types50.default.string]),
  sx: import_prop_types50.default.oneOfType([import_prop_types50.default.arrayOf(import_prop_types50.default.oneOfType([import_prop_types50.default.func, import_prop_types50.default.object, import_prop_types50.default.bool])), import_prop_types50.default.func, import_prop_types50.default.object]),
  variant: import_prop_types50.default.oneOfType([import_prop_types50.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types50.default.string])
} : void 0;
var TabList_default = TabList;

// node_modules/@mui/joy/TabPanel/TabPanel.js
init_objectWithoutPropertiesLoose();
init_extends();
var React72 = __toESM(require_react());
var import_prop_types51 = __toESM(require_prop_types());
init_esm();
init_base();
init_TabsUnstyled();
init_TabPanelUnstyled();
init_utils();

// node_modules/@mui/joy/TabPanel/tabPanelClasses.js
function getTabPanelUtilityClass(slot) {
  return generateUtilityClass2("JoyTabPanel", slot);
}
var tabListClasses3 = generateUtilityClasses2("JoyTabPanel", ["root", "hidden", "sizeSm", "sizeMd", "sizeLg"]);
var tabPanelClasses_default = tabListClasses3;

// node_modules/@mui/joy/TabPanel/TabPanel.js
var import_jsx_runtime74 = __toESM(require_jsx_runtime());
var _excluded53 = ["children", "value", "component", "size"];
var useUtilityClasses46 = (ownerState) => {
  const {
    hidden,
    size
  } = ownerState;
  const slots = {
    root: ["root", hidden && "hidden", size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getTabPanelUtilityClass, {});
};
var TabPanelRoot = styled_default("div", {
  name: "JoyTabPanel",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => _extends({
  display: ownerState.hidden ? "none" : "initial"
}, ownerState.orientation === "horizontal" && {
  paddingBlockStart: "var(--Tabs-gap)"
}, ownerState.orientation === "vertical" && {
  paddingInlineStart: "var(--Tabs-gap)"
}, ownerState.size === "sm" && {
  fontSize: theme.vars.fontSize.sm
}, ownerState.size === "md" && {
  fontSize: theme.vars.fontSize.md
}, ownerState.size === "lg" && {
  fontSize: theme.vars.fontSize.lg
}, {
  flexGrow: 1,
  fontFamily: theme.vars.fontFamily.body
}));
var TabPanel = React72.forwardRef(function TabPanel2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyTabPanel"
  });
  const {
    orientation
  } = useTabContext() || {
    orientation: "horizontal"
  };
  const tabsSize = React72.useContext(SizeTabsContext_default);
  const {
    children,
    component,
    size: sizeProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded53);
  const {
    hidden,
    getRootProps
  } = useTabPanel_default(props);
  const size = sizeProp != null ? sizeProp : tabsSize;
  const ownerState = _extends({}, props, {
    orientation,
    hidden,
    size
  });
  const classes = useUtilityClasses46(ownerState);
  const tabPanelRootProps = useSlotProps({
    elementType: TabPanelRoot,
    getSlotProps: getRootProps,
    externalSlotProps: {},
    externalForwardedProps: other,
    additionalProps: {
      role: "tabpanel",
      ref,
      as: component
    },
    ownerState,
    className: classes.root
  });
  return (0, import_jsx_runtime74.jsx)(TabPanelRoot, _extends({}, tabPanelRootProps, {
    children: !hidden && children
  }));
});
true ? TabPanel.propTypes = {
  children: import_prop_types51.default.node,
  component: import_prop_types51.default.elementType,
  size: import_prop_types51.default.oneOfType([import_prop_types51.default.oneOf(["sm", "md", "lg"]), import_prop_types51.default.string]),
  sx: import_prop_types51.default.oneOfType([import_prop_types51.default.arrayOf(import_prop_types51.default.oneOfType([import_prop_types51.default.func, import_prop_types51.default.object, import_prop_types51.default.bool])), import_prop_types51.default.func, import_prop_types51.default.object]),
  value: import_prop_types51.default.oneOfType([import_prop_types51.default.number, import_prop_types51.default.string]).isRequired
} : void 0;
var TabPanel_default = TabPanel;

// node_modules/@mui/joy/Tabs/Tabs.js
init_objectWithoutPropertiesLoose();
init_extends();
var React73 = __toESM(require_react());
var import_prop_types52 = __toESM(require_prop_types());
init_esm();
init_base();
init_TabsUnstyled();
init_utils();

// node_modules/@mui/joy/Tabs/tabsClasses.js
function getTabsUtilityClass(slot) {
  return generateUtilityClass2("JoyTabs", slot);
}
var tabListClasses4 = generateUtilityClasses2("JoyTabs", ["root", "horizontal", "vertical", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg"]);
var tabsClasses_default = tabListClasses4;

// node_modules/@mui/joy/Tabs/Tabs.js
var import_jsx_runtime75 = __toESM(require_jsx_runtime());
var _excluded54 = ["children", "value", "defaultValue", "orientation", "direction", "component", "onChange", "selectionFollowsFocus", "variant", "color", "size"];
var useUtilityClasses47 = (ownerState) => {
  const {
    orientation,
    variant,
    color,
    size
  } = ownerState;
  const slots = {
    root: ["root", orientation, variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getTabsUtilityClass, {});
};
var TabsRoot = styled_default(SheetRoot, {
  name: "JoyTabs",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  ownerState
}) => _extends({}, ownerState.size === "sm" && {
  "--Tabs-gap": "3px"
}, ownerState.size === "md" && {
  "--Tabs-gap": "4px"
}, ownerState.size === "lg" && {
  "--Tabs-gap": "0.5rem"
}, {
  display: "flex",
  flexDirection: "column"
}, ownerState.orientation === "vertical" && {
  flexDirection: "row"
}));
var Tabs = React73.forwardRef(function Tabs2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyTabs"
  });
  const {
    children,
    orientation = "horizontal",
    direction = "ltr",
    component,
    variant = "plain",
    color = "neutral",
    size = "md"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded54);
  const {
    tabsContextValue
  } = useTabs_default(_extends({}, props, {
    orientation
  }));
  const ownerState = _extends({}, props, {
    orientation,
    direction,
    variant,
    color,
    size
  });
  const classes = useUtilityClasses47(ownerState);
  const tabsRootProps = useSlotProps({
    elementType: TabsRoot,
    externalSlotProps: {},
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    ownerState,
    className: classes.root
  });
  return (0, import_jsx_runtime75.jsx)(TabsRoot, _extends({}, tabsRootProps, {
    children: (0, import_jsx_runtime75.jsx)(TabsContext_default.Provider, {
      value: tabsContextValue,
      children: (0, import_jsx_runtime75.jsx)(SizeTabsContext_default.Provider, {
        value: size,
        children
      })
    })
  }));
});
true ? Tabs.propTypes = {
  children: import_prop_types52.default.node,
  color: import_prop_types52.default.oneOfType([import_prop_types52.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types52.default.string]),
  component: import_prop_types52.default.elementType,
  defaultValue: import_prop_types52.default.oneOfType([import_prop_types52.default.oneOf([false]), import_prop_types52.default.number, import_prop_types52.default.string]),
  direction: import_prop_types52.default.oneOf(["ltr", "rtl"]),
  onChange: import_prop_types52.default.func,
  orientation: import_prop_types52.default.oneOf(["horizontal", "vertical"]),
  selectionFollowsFocus: import_prop_types52.default.bool,
  size: import_prop_types52.default.oneOfType([import_prop_types52.default.oneOf(["sm", "md", "lg"]), import_prop_types52.default.string]),
  sx: import_prop_types52.default.oneOfType([import_prop_types52.default.arrayOf(import_prop_types52.default.oneOfType([import_prop_types52.default.func, import_prop_types52.default.object, import_prop_types52.default.bool])), import_prop_types52.default.func, import_prop_types52.default.object]),
  value: import_prop_types52.default.oneOfType([import_prop_types52.default.oneOf([false]), import_prop_types52.default.number, import_prop_types52.default.string]),
  variant: import_prop_types52.default.oneOfType([import_prop_types52.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types52.default.string])
} : void 0;
var Tabs_default = Tabs;

// node_modules/@mui/joy/TextField/TextField.js
init_objectWithoutPropertiesLoose();
init_extends();
var React74 = __toESM(require_react());
var import_prop_types53 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_composeClasses();

// node_modules/@mui/joy/TextField/textFieldClasses.js
function getTextFieldUtilityClass(slot) {
  return generateUtilityClass2("JoyTextField", slot);
}
var textFieldClasses = generateUtilityClasses2("JoyTextField", ["root", "disabled", "error", "focused", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantPlain", "variantOutlined", "variantSoft", "fullWidth"]);
var textFieldClasses_default = textFieldClasses;

// node_modules/@mui/joy/TextField/TextField.js
var import_jsx_runtime76 = __toESM(require_jsx_runtime());
var import_jsx_runtime77 = __toESM(require_jsx_runtime());
var _excluded55 = ["children", "className", "component", "components", "componentsProps", "label", "helperText", "id", "autoComplete", "autoFocus", "placeholder", "defaultValue", "value", "name", "onBlur", "onChange", "onFocus", "color", "disabled", "error", "required", "size", "variant", "fullWidth", "type", "startDecorator", "endDecorator"];
var useUtilityClasses48 = (ownerState) => {
  const {
    error,
    disabled,
    variant,
    size,
    color,
    fullWidth
  } = ownerState;
  const slots = {
    root: ["root", error && "error", disabled && "disabled", fullWidth && "fullWidth", variant && `variant${capitalize(variant)}`, size && `size${capitalize(size)}`, color && `color${capitalize(color)}`]
  };
  return composeClasses(slots, getTextFieldUtilityClass, {});
};
var TextFieldRoot = styled_default("div", {
  name: "JoyTextField",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette, _theme$vars$palette2, _theme$vars$palette3;
  return _extends({
    "--FormLabel-margin": "0 0 0.25rem 0",
    "--FormHelperText-margin": "0.25rem 0 0 0",
    "--FormLabel-asterisk-color": theme.vars.palette.danger[500],
    "--FormHelperText-color": (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette[500]
  }, ownerState.size === "sm" && {
    "--FormHelperText-fontSize": theme.vars.fontSize.xs,
    "--FormLabel-fontSize": theme.vars.fontSize.xs
  }, {
    [`&.${textFieldClasses_default.error}`]: {
      "--FormHelperText-color": theme.vars.palette.danger[500]
    },
    [`&.${textFieldClasses_default.disabled}`]: {
      "--FormLabel-color": (_theme$vars$palette2 = theme.vars.palette[ownerState.color || "neutral"]) == null ? void 0 : _theme$vars$palette2.plainDisabledColor,
      "--FormHelperText-color": (_theme$vars$palette3 = theme.vars.palette[ownerState.color || "neutral"]) == null ? void 0 : _theme$vars$palette3.plainDisabledColor
    },
    display: "flex",
    flexDirection: "column"
  }, ownerState.fullWidth && {
    width: "100%"
  });
});
var TextField = React74.forwardRef(function TextField2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyTextField"
  });
  const {
    className,
    component,
    components = {},
    componentsProps = {},
    label,
    helperText,
    id: idOverride,
    autoComplete,
    autoFocus,
    placeholder,
    defaultValue,
    value,
    name,
    onBlur,
    onChange,
    onFocus,
    color,
    disabled = false,
    error = false,
    required = false,
    size = "md",
    variant = "outlined",
    fullWidth = false,
    type = "text",
    startDecorator,
    endDecorator
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded55);
  const id = useId(idOverride);
  const helperTextId = helperText && id ? `${id}-helper-text` : void 0;
  const formLabelId = label && id ? `${id}-label` : void 0;
  const ownerState = _extends({
    label,
    helperText,
    startDecorator,
    endDecorator,
    disabled,
    error,
    required,
    size,
    variant,
    fullWidth,
    type
  }, props);
  const classes = useUtilityClasses48(ownerState);
  const Input3 = components.Input || Input_default;
  return (0, import_jsx_runtime77.jsxs)(TextFieldRoot, _extends({
    ref,
    as: component,
    className: clsx_m_default(classes.root, className),
    ownerState
  }, other, {
    children: [label && (0, import_jsx_runtime76.jsx)(FormLabel_default, _extends({
      htmlFor: id,
      id: formLabelId,
      required
    }, componentsProps.label, components.Label && {
      component: components.Label
    }, {
      children: label
    })), (0, import_jsx_runtime76.jsx)(Input3, _extends({}, componentsProps.input, {
      id,
      name,
      type,
      "aria-describedby": helperTextId,
      autoComplete,
      autoFocus,
      placeholder,
      disabled,
      error,
      required,
      color,
      size,
      fullWidth,
      variant,
      defaultValue,
      value,
      onChange,
      onBlur,
      onFocus,
      startDecorator,
      endDecorator
    })), helperText && (0, import_jsx_runtime76.jsx)(FormHelperText_default, _extends({
      id: helperTextId
    }, componentsProps.helperText, components.HelperText && {
      component: components.HelperText
    }, {
      children: helperText
    }))]
  }));
});
true ? TextField.propTypes = {
  autoComplete: import_prop_types53.default.string,
  autoFocus: import_prop_types53.default.bool,
  children: import_prop_types53.default.node,
  className: import_prop_types53.default.string,
  color: import_prop_types53.default.oneOfType([import_prop_types53.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types53.default.string]),
  component: import_prop_types53.default.elementType,
  components: import_prop_types53.default.shape({
    HelperText: import_prop_types53.default.elementType,
    Input: import_prop_types53.default.elementType,
    Label: import_prop_types53.default.elementType,
    Root: import_prop_types53.default.elementType
  }),
  componentsProps: import_prop_types53.default.shape({
    helperText: import_prop_types53.default.object,
    input: import_prop_types53.default.object,
    label: import_prop_types53.default.object,
    root: import_prop_types53.default.object
  }),
  defaultValue: import_prop_types53.default.oneOfType([import_prop_types53.default.arrayOf(import_prop_types53.default.string), import_prop_types53.default.number, import_prop_types53.default.string]),
  disabled: import_prop_types53.default.bool,
  endDecorator: import_prop_types53.default.node,
  error: import_prop_types53.default.bool,
  fullWidth: import_prop_types53.default.bool,
  helperText: import_prop_types53.default.node,
  id: import_prop_types53.default.string,
  label: import_prop_types53.default.node,
  name: import_prop_types53.default.string,
  onBlur: import_prop_types53.default.func,
  onChange: import_prop_types53.default.func,
  onFocus: import_prop_types53.default.func,
  placeholder: import_prop_types53.default.string,
  required: import_prop_types53.default.bool,
  size: import_prop_types53.default.oneOfType([import_prop_types53.default.oneOf(["sm", "md", "lg"]), import_prop_types53.default.string]),
  startDecorator: import_prop_types53.default.node,
  type: import_prop_types53.default.oneOf(["button", "checkbox", "color", "date", "datetime-local", "email", "file", "hidden", "image", "month", "number", "password", "radio", "range", "reset", "search", "submit", "tel", "text", "time", "url", "week"]),
  value: import_prop_types53.default.oneOfType([import_prop_types53.default.arrayOf(import_prop_types53.default.string), import_prop_types53.default.number, import_prop_types53.default.string]),
  variant: import_prop_types53.default.oneOfType([import_prop_types53.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types53.default.string])
} : void 0;
var TextField_default = TextField;

// node_modules/@mui/joy/Textarea/Textarea.js
init_objectWithoutPropertiesLoose();
init_extends();
var React75 = __toESM(require_react());
var import_prop_types54 = __toESM(require_prop_types());
init_esm();
init_utils();
init_composeClasses();
init_TextareaAutosize();

// node_modules/@mui/joy/Textarea/textareaClasses.js
function getTextareaUtilityClass(slot) {
  return generateUtilityClass2("JoyTextarea", slot);
}
var textareaClasses = generateUtilityClasses2("JoyTextarea", ["root", "textarea", "formControl", "disabled", "error", "focused", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantPlain", "variantOutlined", "variantSoft"]);
var textareaClasses_default = textareaClasses;

// node_modules/@mui/joy/Textarea/Textarea.js
var import_jsx_runtime78 = __toESM(require_jsx_runtime());
var import_jsx_runtime79 = __toESM(require_jsx_runtime());
var _excluded56 = ["propsToForward", "rootStateClasses", "inputStateClasses", "getRootProps", "getInputProps", "component", "componentsProps", "formControl", "focused", "error", "disabled", "size", "color", "variant", "startDecorator", "endDecorator", "minRows", "maxRows"];
var useUtilityClasses49 = (ownerState) => {
  const {
    disabled,
    variant,
    color,
    size
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],
    textarea: ["textarea"],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  return composeClasses(slots, getTextareaUtilityClass, {});
};
var TextareaRoot = styled_default("div", {
  name: "JoyTextarea",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$vars$palette, _variantStyle$backgro, _theme$variants2, _theme$variants3;
  const variantStyle = (_theme$variants = theme.variants[`${ownerState.variant}`]) == null ? void 0 : _theme$variants[ownerState.color];
  return [_extends({
    "--Textarea-radius": theme.vars.radius.sm,
    "--Textarea-gap": "0.5rem",
    "--Textarea-placeholderOpacity": 0.5,
    "--Textarea-focusedThickness": theme.vars.focus.thickness
  }, ownerState.color === "context" ? {
    "--Textarea-focusedHighlight": theme.vars.palette.focusVisible
  } : {
    "--Textarea-focusedHighlight": (_theme$vars$palette = theme.vars.palette[ownerState.color === "neutral" ? "primary" : ownerState.color]) == null ? void 0 : _theme$vars$palette[500]
  }, ownerState.size === "sm" && {
    "--Textarea-minHeight": "2rem",
    "--Textarea-paddingBlock": "calc(0.5rem - var(--variant-borderWidth, 0px))",
    "--Textarea-paddingInline": "0.5rem",
    "--Textarea-decorator-childHeight": "min(1.5rem, var(--Textarea-minHeight))",
    "--Icon-fontSize": "1.25rem"
  }, ownerState.size === "md" && {
    "--Textarea-minHeight": "2.5rem",
    "--Textarea-paddingBlock": "calc(0.5rem - var(--variant-borderWidth, 0px))",
    "--Textarea-paddingInline": "0.75rem",
    "--Textarea-decorator-childHeight": "min(2rem, var(--Textarea-minHeight))",
    "--Icon-fontSize": "1.5rem"
  }, ownerState.size === "lg" && {
    "--Textarea-minHeight": "3rem",
    "--Textarea-paddingBlock": "calc(0.75rem - var(--variant-borderWidth, 0px))",
    "--Textarea-paddingInline": "1rem",
    "--Textarea-gap": "0.75rem",
    "--Textarea-decorator-childHeight": "min(2.375rem, var(--Textarea-minHeight))",
    "--Icon-fontSize": "1.75rem"
  }, {
    "--internal-paddingBlock": "max((var(--Textarea-minHeight) - 2 * var(--variant-borderWidth) - var(--Textarea-decorator-childHeight)) / 2, 0px)",
    "--Textarea-decorator-childRadius": "max(var(--Textarea-radius) - var(--internal-paddingBlock), min(var(--internal-paddingBlock) / 2, var(--Textarea-radius) / 2))",
    "--Button-minHeight": "var(--Textarea-decorator-childHeight)",
    "--IconButton-size": "var(--Textarea-decorator-childHeight)",
    "--Button-radius": "var(--Textarea-decorator-childRadius)",
    "--IconButton-radius": "var(--Textarea-decorator-childRadius)",
    boxSizing: "border-box",
    minWidth: 0,
    minHeight: "var(--Textarea-minHeight)",
    cursor: "text",
    position: "relative",
    display: "flex",
    flexDirection: "column",
    paddingInlineStart: `var(--Textarea-paddingInline)`,
    paddingBlock: "var(--Textarea-paddingBlock)",
    borderRadius: "var(--Textarea-radius)",
    fontFamily: theme.vars.fontFamily.body,
    fontSize: theme.vars.fontSize.md,
    lineHeight: theme.vars.lineHeight.md
  }, ownerState.size === "sm" && {
    fontSize: theme.vars.fontSize.sm,
    lineHeight: theme.vars.lineHeight.sm
  }, {
    transition: "border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    "&:before": {
      boxSizing: "border-box",
      content: '""',
      display: "block",
      position: "absolute",
      pointerEvents: "none",
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      zIndex: 1,
      borderRadius: "inherit",
      margin: "calc(var(--variant-borderWidth) * -1)"
    }
  }), _extends({}, variantStyle, {
    backgroundColor: (_variantStyle$backgro = variantStyle == null ? void 0 : variantStyle.backgroundColor) != null ? _variantStyle$backgro : theme.vars.palette.background.surface,
    [`&:hover:not(.${textareaClasses_default.focused})`]: _extends({}, (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color], {
      backgroundColor: null,
      cursor: "text"
    }),
    [`&.${textareaClasses_default.disabled}`]: (_theme$variants3 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants3[ownerState.color],
    [`&.${textareaClasses_default.focused}`]: {
      "&:before": {
        boxShadow: `inset 0 0 0 var(--Textarea-focusedThickness) var(--Textarea-focusedHighlight)`
      }
    }
  })];
});
var TextareaInput = styled_default(TextareaAutosize_default, {
  name: "JoyTextarea",
  slot: "Textarea",
  overridesResolver: (props, styles) => styles.textarea
})({
  resize: "none",
  border: "none",
  minWidth: 0,
  outline: 0,
  padding: 0,
  paddingInlineEnd: `var(--Textarea-paddingInline)`,
  flex: "auto",
  alignSelf: "stretch",
  color: "inherit",
  backgroundColor: "transparent",
  fontFamily: "inherit",
  fontSize: "inherit",
  fontStyle: "inherit",
  fontWeight: "inherit",
  lineHeight: "inherit",
  "&:-webkit-autofill": {
    WebkitBackgroundClip: "text",
    WebkitTextFillColor: "currentColor"
  },
  "&::-webkit-input-placeholder": {
    opacity: "var(--Textarea-placeholderOpacity)",
    color: "inherit"
  },
  "&::-moz-placeholder": {
    opacity: "var(--Textarea-placeholderOpacity)",
    color: "inherit"
  },
  "&:-ms-input-placeholder": {
    opacity: "var(--Textarea-placeholderOpacity)",
    color: "inherit"
  },
  "&::-ms-input-placeholder": {
    opacity: "var(--Textarea-placeholderOpacity)",
    color: "inherit"
  }
});
var TextareaStartDecorator = styled_default("div", {
  name: "JoyTextarea",
  slot: "StartDecorator",
  overridesResolver: (props, styles) => styles.startDecorator
})(({
  theme
}) => ({
  display: "flex",
  marginInlineStart: "calc(var(--Textarea-paddingBlock) - var(--Textarea-paddingInline))",
  marginInlineEnd: "var(--Textarea-paddingBlock)",
  marginBlockEnd: "var(--Textarea-gap)",
  color: theme.vars.palette.text.tertiary,
  cursor: "initial"
}));
var TextareaEndDecorator = styled_default("div", {
  name: "JoyTextarea",
  slot: "EndDecorator",
  overridesResolver: (props, styles) => styles.endDecorator
})(({
  theme
}) => ({
  display: "flex",
  marginInlineStart: "calc(var(--Textarea-paddingBlock) - var(--Textarea-paddingInline))",
  marginInlineEnd: "var(--Textarea-paddingBlock)",
  marginBlockStart: "var(--Textarea-gap)",
  color: theme.vars.palette.text.tertiary,
  cursor: "initial"
}));
var Textarea = React75.forwardRef(function Textarea2(inProps, ref) {
  var _ref, _inProps$disabled, _ref2, _inProps$error, _ref3, _inProps$size, _ref4, _inProps$color;
  const props = useThemeProps2({
    props: inProps,
    name: "JoyTextarea"
  });
  const _useForwardedInput = useForwardedInput(props, textareaClasses_default), {
    propsToForward,
    rootStateClasses,
    inputStateClasses,
    getRootProps,
    getInputProps,
    component,
    componentsProps = {},
    formControl,
    focused,
    error: errorProp = false,
    disabled: disabledProp = false,
    size: sizeProp = "md",
    color: colorProp = "neutral",
    variant = "outlined",
    startDecorator,
    endDecorator,
    minRows,
    maxRows
  } = _useForwardedInput, other = _objectWithoutPropertiesLoose(_useForwardedInput, _excluded56);
  if (true) {
    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;
    React75.useEffect(() => {
      if (registerEffect) {
        return registerEffect();
      }
      return void 0;
    }, [registerEffect]);
  }
  const disabled = (_ref = (_inProps$disabled = inProps.disabled) != null ? _inProps$disabled : formControl == null ? void 0 : formControl.disabled) != null ? _ref : disabledProp;
  const error = (_ref2 = (_inProps$error = inProps.error) != null ? _inProps$error : formControl == null ? void 0 : formControl.error) != null ? _ref2 : errorProp;
  const size = (_ref3 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref3 : sizeProp;
  const color = error ? "danger" : (_ref4 = (_inProps$color = inProps.color) != null ? _inProps$color : formControl == null ? void 0 : formControl.color) != null ? _ref4 : colorProp;
  const ownerState = _extends({}, props, {
    color,
    disabled,
    error,
    focused,
    size,
    variant
  });
  const classes = useUtilityClasses49(ownerState);
  const rootProps = useSlotProps({
    elementType: TextareaRoot,
    getSlotProps: getRootProps,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    ownerState,
    className: [classes.root, rootStateClasses]
  });
  const textareaProps = useSlotProps({
    elementType: TextareaInput,
    getSlotProps: (otherHandlers) => getInputProps(_extends({}, otherHandlers, propsToForward)),
    externalSlotProps: _extends({
      minRows,
      maxRows
    }, componentsProps.textarea),
    additionalProps: {
      id: formControl == null ? void 0 : formControl.htmlFor,
      "aria-describedby": formControl == null ? void 0 : formControl["aria-describedby"]
    },
    ownerState,
    className: [classes.textarea, inputStateClasses]
  });
  return (0, import_jsx_runtime79.jsxs)(TextareaRoot, _extends({}, rootProps, {
    children: [startDecorator && (0, import_jsx_runtime78.jsx)(TextareaStartDecorator, {
      className: classes.startDecorator,
      ownerState,
      children: startDecorator
    }), (0, import_jsx_runtime78.jsx)(TextareaInput, _extends({}, textareaProps)), endDecorator && (0, import_jsx_runtime78.jsx)(TextareaEndDecorator, {
      className: classes.endDecorator,
      ownerState,
      children: endDecorator
    })]
  }));
});
true ? Textarea.propTypes = {
  children: import_prop_types54.default.node,
  color: import_prop_types54.default.oneOfType([import_prop_types54.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types54.default.string]),
  componentsProps: import_prop_types54.default.shape({
    endDecorator: import_prop_types54.default.oneOfType([import_prop_types54.default.func, import_prop_types54.default.object]),
    root: import_prop_types54.default.oneOfType([import_prop_types54.default.func, import_prop_types54.default.object]),
    startDecorator: import_prop_types54.default.oneOfType([import_prop_types54.default.func, import_prop_types54.default.object]),
    textarea: import_prop_types54.default.oneOfType([import_prop_types54.default.func, import_prop_types54.default.object])
  }),
  disabled: import_prop_types54.default.bool,
  endDecorator: import_prop_types54.default.node,
  error: import_prop_types54.default.bool,
  maxRows: import_prop_types54.default.oneOfType([import_prop_types54.default.number, import_prop_types54.default.string]),
  minRows: import_prop_types54.default.oneOfType([import_prop_types54.default.number, import_prop_types54.default.string]),
  size: import_prop_types54.default.oneOfType([import_prop_types54.default.oneOf(["sm", "md", "lg"]), import_prop_types54.default.string]),
  startDecorator: import_prop_types54.default.node,
  sx: import_prop_types54.default.oneOfType([import_prop_types54.default.arrayOf(import_prop_types54.default.oneOfType([import_prop_types54.default.func, import_prop_types54.default.object, import_prop_types54.default.bool])), import_prop_types54.default.func, import_prop_types54.default.object]),
  variant: import_prop_types54.default.oneOfType([import_prop_types54.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types54.default.string])
} : void 0;
var Textarea_default = Textarea;

// node_modules/@mui/joy/Tooltip/Tooltip.js
init_objectWithoutPropertiesLoose();
init_extends();
var React76 = __toESM(require_react());
var import_prop_types55 = __toESM(require_prop_types());
init_clsx_m();
init_esm();
init_base();
init_utils();

// node_modules/@mui/joy/Tooltip/tooltipClasses.js
function getTooltipUtilityClass(slot) {
  return generateUtilityClass2("JoyTooltip", slot);
}
var tooltipClasses = generateUtilityClasses2("JoyTooltip", ["root", "tooltipArrow", "arrow", "touch", "placementLeft", "placementRight", "placementTop", "placementBottom", "colorPrimary", "colorDanger", "colorInfo", "colorNeutral", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var tooltipClasses_default = tooltipClasses;

// node_modules/@mui/joy/Tooltip/Tooltip.js
var import_jsx_runtime80 = __toESM(require_jsx_runtime());
var import_jsx_runtime81 = __toESM(require_jsx_runtime());
var _excluded57 = ["children", "className", "arrow", "components", "componentsProps", "describeChild", "disableFocusListener", "disableHoverListener", "disableInteractive", "disableTouchListener", "enterDelay", "enterNextDelay", "enterTouchDelay", "followCursor", "id", "leaveDelay", "leaveTouchDelay", "onClose", "onOpen", "open", "placement", "title", "color", "variant", "size"];
var useUtilityClasses50 = (ownerState) => {
  const {
    arrow,
    variant,
    color,
    size,
    placement,
    touch
  } = ownerState;
  const slots = {
    root: ["root", arrow && "tooltipArrow", touch && "touch", size && `size${capitalize(size)}`, color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`, `tooltipPlacement${capitalize(placement.split("-")[0])}`],
    arrow: ["arrow"]
  };
  return composeClasses(slots, getTooltipUtilityClass, {});
};
var TooltipRoot = styled_default("div", {
  name: "JoyTooltip",
  slot: "Root",
  overridesResolver: (props, styles) => styles.root
})(({
  ownerState,
  theme
}) => {
  var _theme$variants, _ownerState$placement, _ownerState$placement2;
  const variantStyle = (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color];
  return _extends({}, ownerState.size === "sm" && {
    "--Icon-fontSize": "1rem",
    "--Tooltip-arrow-size": "8px",
    padding: theme.spacing(0.5, 0.625),
    fontSize: theme.vars.fontSize.xs
  }, ownerState.size === "md" && {
    "--Icon-fontSize": "1.125rem",
    "--Tooltip-arrow-size": "10px",
    padding: theme.spacing(0.625, 0.75),
    fontSize: theme.vars.fontSize.sm
  }, ownerState.size === "lg" && {
    "--Icon-fontSize": "1.25rem",
    "--Tooltip-arrow-size": "12px",
    padding: theme.spacing(0.75, 1),
    fontSize: theme.vars.fontSize.md
  }, {
    zIndex: 1500,
    pointerEvents: "none",
    borderRadius: theme.vars.radius.xs,
    boxShadow: theme.vars.shadow.sm,
    fontFamily: theme.vars.fontFamily.body,
    fontWeight: theme.vars.fontWeight.md,
    lineHeight: theme.vars.lineHeight.sm,
    wordWrap: "break-word",
    position: "relative"
  }, !ownerState.disableInteractive && {
    pointerEvents: "auto"
  }, !ownerState.open && {
    pointerEvents: "none"
  }, variantStyle, !variantStyle.backgroundColor && {
    backgroundColor: theme.vars.palette.background.surface
  }, {
    "&::before": {
      content: '""',
      display: "block",
      position: "absolute",
      width: (_ownerState$placement = ownerState.placement) != null && _ownerState$placement.match(/(top|bottom)/) ? "100%" : "calc(10px + var(--variant-borderWidth, 0px))",
      height: (_ownerState$placement2 = ownerState.placement) != null && _ownerState$placement2.match(/(top|bottom)/) ? "calc(10px + var(--variant-borderWidth, 0px))" : "100%"
    },
    '&[data-popper-placement*="bottom"]::before': {
      top: 0,
      left: 0,
      transform: "translateY(-100%)"
    },
    '&[data-popper-placement*="left"]::before': {
      top: 0,
      right: 0,
      transform: "translateX(100%)"
    },
    '&[data-popper-placement*="right"]::before': {
      top: 0,
      left: 0,
      transform: "translateX(-100%)"
    },
    '&[data-popper-placement*="top"]::before': {
      bottom: 0,
      left: 0,
      transform: "translateY(100%)"
    }
  });
});
var TooltipArrow = styled_default("span", {
  name: "JoyTooltip",
  slot: "Arrow",
  overridesResolver: (props, styles) => styles.arrow
})(({
  theme,
  ownerState
}) => {
  var _theme$variants2, _variantStyle$backgro, _variantStyle$backgro2;
  const variantStyle = (_theme$variants2 = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants2[ownerState.color];
  return {
    "--unstable_Tooltip-arrow-rotation": 0,
    width: "var(--Tooltip-arrow-size)",
    height: "var(--Tooltip-arrow-size)",
    boxSizing: "border-box",
    "&:before": {
      content: '""',
      display: "block",
      position: "absolute",
      width: 0,
      height: 0,
      border: "calc(var(--Tooltip-arrow-size) / 2) solid",
      borderLeftColor: "transparent",
      borderBottomColor: "transparent",
      borderTopColor: (_variantStyle$backgro = variantStyle == null ? void 0 : variantStyle.backgroundColor) != null ? _variantStyle$backgro : theme.vars.palette.background.surface,
      borderRightColor: (_variantStyle$backgro2 = variantStyle == null ? void 0 : variantStyle.backgroundColor) != null ? _variantStyle$backgro2 : theme.vars.palette.background.surface,
      borderRadius: `0px 2px 0px 0px`,
      boxShadow: `var(--variant-borderWidth) calc(-1 * var(--variant-borderWidth)) 0px 0px ${variantStyle.borderColor}`,
      transformOrigin: "center center",
      transform: "rotate(calc(-45deg + 90deg * var(--unstable_Tooltip-arrow-rotation)))"
    },
    '[data-popper-placement*="bottom"] &': {
      top: "calc(0.5px + var(--Tooltip-arrow-size) * -1 / 2)"
    },
    '[data-popper-placement*="top"] &': {
      "--unstable_Tooltip-arrow-rotation": 2,
      bottom: "calc(0.5px + var(--Tooltip-arrow-size) * -1 / 2)"
    },
    '[data-popper-placement*="left"] &': {
      "--unstable_Tooltip-arrow-rotation": 1,
      right: "calc(0.5px + var(--Tooltip-arrow-size) * -1 / 2)"
    },
    '[data-popper-placement*="right"] &': {
      "--unstable_Tooltip-arrow-rotation": 3,
      left: "calc(0.5px + var(--Tooltip-arrow-size) * -1 / 2)"
    }
  };
});
var hystersisOpen = false;
var hystersisTimer = null;
function composeMouseEventHandler(handler, eventHandler) {
  return (event) => {
    if (eventHandler) {
      eventHandler(event);
    }
    handler(event);
  };
}
function composeFocusEventHandler(handler, eventHandler) {
  return (event) => {
    if (eventHandler) {
      eventHandler(event);
    }
    handler(event);
  };
}
var Tooltip = React76.forwardRef(function Tooltip2(inProps, ref) {
  var _components$Root, _components$Arrow, _componentsProps$root, _componentsProps$arro, _componentsProps$arro2;
  const props = useThemeProps2({
    props: inProps,
    name: "JoyTooltip"
  });
  const {
    children,
    className,
    arrow = false,
    components = {},
    componentsProps = {},
    describeChild = false,
    disableFocusListener = false,
    disableHoverListener = false,
    disableInteractive: disableInteractiveProp = false,
    disableTouchListener = false,
    enterDelay = 100,
    enterNextDelay = 0,
    enterTouchDelay = 700,
    followCursor = false,
    id: idProp,
    leaveDelay = 0,
    leaveTouchDelay = 1500,
    onClose,
    onOpen,
    open: openProp,
    placement = "bottom",
    title,
    color = "neutral",
    variant = "solid",
    size = "md"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded57);
  const [childNode, setChildNode] = React76.useState();
  const [arrowRef, setArrowRef] = React76.useState(null);
  const ignoreNonTouchEvents = React76.useRef(false);
  const disableInteractive = disableInteractiveProp || followCursor;
  const closeTimer = React76.useRef();
  const enterTimer = React76.useRef();
  const leaveTimer = React76.useRef();
  const touchTimer = React76.useRef();
  const [openState, setOpenState] = useControlled({
    controlled: openProp,
    default: false,
    name: "Tooltip",
    state: "open"
  });
  let open = openState;
  const id = useId(idProp);
  const prevUserSelect = React76.useRef();
  const stopTouchInteraction = React76.useCallback(() => {
    if (prevUserSelect.current !== void 0) {
      document.body.style.WebkitUserSelect = prevUserSelect.current;
      prevUserSelect.current = void 0;
    }
    clearTimeout(touchTimer.current);
  }, []);
  React76.useEffect(() => {
    return () => {
      clearTimeout(closeTimer.current);
      clearTimeout(enterTimer.current);
      clearTimeout(leaveTimer.current);
      stopTouchInteraction();
    };
  }, [stopTouchInteraction]);
  const handleOpen = (event) => {
    if (hystersisTimer) {
      clearTimeout(hystersisTimer);
    }
    hystersisOpen = true;
    setOpenState(true);
    if (onOpen && !open) {
      onOpen(event);
    }
  };
  const handleClose = useEventCallback((event) => {
    if (hystersisTimer) {
      clearTimeout(hystersisTimer);
    }
    hystersisTimer = setTimeout(() => {
      hystersisOpen = false;
    }, 800 + leaveDelay);
    setOpenState(false);
    if (onClose && open) {
      onClose(event);
    }
    clearTimeout(closeTimer.current);
    closeTimer.current = setTimeout(() => {
      ignoreNonTouchEvents.current = false;
    }, 150);
  });
  const handleEnter = (event) => {
    if (ignoreNonTouchEvents.current && event.type !== "touchstart") {
      return;
    }
    if (childNode) {
      childNode.removeAttribute("title");
    }
    clearTimeout(enterTimer.current);
    clearTimeout(leaveTimer.current);
    if (enterDelay || hystersisOpen && enterNextDelay) {
      enterTimer.current = setTimeout(() => {
        handleOpen(event);
      }, hystersisOpen ? enterNextDelay : enterDelay);
    } else {
      handleOpen(event);
    }
  };
  const handleLeave = (event) => {
    clearTimeout(enterTimer.current);
    clearTimeout(leaveTimer.current);
    leaveTimer.current = setTimeout(() => {
      handleClose(event);
    }, leaveDelay);
  };
  const {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible();
  const [, setChildIsFocusVisible] = React76.useState(false);
  const handleBlur = (event) => {
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setChildIsFocusVisible(false);
      handleLeave(event);
    }
  };
  const handleFocus = (event) => {
    if (!childNode) {
      setChildNode(event.currentTarget);
    }
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setChildIsFocusVisible(true);
      handleEnter(event);
    }
  };
  const detectTouchStart = (event) => {
    ignoreNonTouchEvents.current = true;
    const childrenProps2 = children.props;
    if (childrenProps2.onTouchStart) {
      childrenProps2.onTouchStart(event);
    }
  };
  const handleMouseOver = handleEnter;
  const handleMouseLeave = handleLeave;
  const handleTouchStart = (event) => {
    detectTouchStart(event);
    clearTimeout(leaveTimer.current);
    clearTimeout(closeTimer.current);
    stopTouchInteraction();
    prevUserSelect.current = document.body.style.WebkitUserSelect;
    document.body.style.WebkitUserSelect = "none";
    touchTimer.current = setTimeout(() => {
      document.body.style.WebkitUserSelect = prevUserSelect.current;
      handleEnter(event);
    }, enterTouchDelay);
  };
  const handleTouchEnd = (event) => {
    if (children.props.onTouchEnd) {
      children.props.onTouchEnd(event);
    }
    stopTouchInteraction();
    clearTimeout(leaveTimer.current);
    leaveTimer.current = setTimeout(() => {
      handleClose(event);
    }, leaveTouchDelay);
  };
  React76.useEffect(() => {
    if (!open) {
      return void 0;
    }
    function handleKeyDown(nativeEvent) {
      if (nativeEvent.key === "Escape" || nativeEvent.key === "Esc") {
        handleClose(nativeEvent);
      }
    }
    document.addEventListener("keydown", handleKeyDown);
    return () => {
      document.removeEventListener("keydown", handleKeyDown);
    };
  }, [handleClose, open]);
  const handleUseRef = useForkRef(setChildNode, ref);
  const handleFocusRef = useForkRef(focusVisibleRef, handleUseRef);
  const handleRef = useForkRef(children.ref, handleFocusRef);
  if (typeof title !== "number" && !title) {
    open = false;
  }
  const positionRef = React76.useRef({
    x: 0,
    y: 0
  });
  const popperRef = React76.useRef(null);
  const handleMouseMove = (event) => {
    const childrenProps2 = children.props;
    if (childrenProps2.onMouseMove) {
      childrenProps2.onMouseMove(event);
    }
    positionRef.current = {
      x: event.clientX,
      y: event.clientY
    };
    if (popperRef.current) {
      popperRef.current.update();
    }
  };
  const nameOrDescProps = {};
  const titleIsString = typeof title === "string";
  if (describeChild) {
    nameOrDescProps.title = !open && titleIsString && !disableHoverListener ? title : null;
    nameOrDescProps["aria-describedby"] = open ? id : null;
  } else {
    nameOrDescProps["aria-label"] = titleIsString ? title : null;
    nameOrDescProps["aria-labelledby"] = open && !titleIsString ? id : null;
  }
  const childrenProps = _extends({}, nameOrDescProps, other, children.props, {
    className: clsx_m_default(className, children.props.className),
    onTouchStart: detectTouchStart,
    ref: handleRef
  }, followCursor ? {
    onMouseMove: handleMouseMove
  } : {});
  const interactiveWrapperListeners = {};
  if (!disableTouchListener) {
    childrenProps.onTouchStart = handleTouchStart;
    childrenProps.onTouchEnd = handleTouchEnd;
  }
  if (!disableHoverListener) {
    childrenProps.onMouseOver = composeMouseEventHandler(handleMouseOver, childrenProps.onMouseOver);
    childrenProps.onMouseLeave = composeMouseEventHandler(handleMouseLeave, childrenProps.onMouseLeave);
    if (!disableInteractive) {
      interactiveWrapperListeners.onMouseOver = handleMouseOver;
      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;
    }
  }
  if (!disableFocusListener) {
    childrenProps.onFocus = composeFocusEventHandler(handleFocus, childrenProps.onFocus);
    childrenProps.onBlur = composeFocusEventHandler(handleBlur, childrenProps.onBlur);
    if (!disableInteractive) {
      interactiveWrapperListeners.onFocus = handleFocus;
      interactiveWrapperListeners.onBlur = handleBlur;
    }
  }
  const popperOptions = React76.useMemo(() => {
    const tooltipModifiers = [{
      name: "arrow",
      enabled: Boolean(arrowRef),
      options: {
        element: arrowRef,
        padding: 6
      }
    }, {
      name: "offset",
      options: {
        offset: [0, 10]
      }
    }];
    return {
      modifiers: tooltipModifiers
    };
  }, [arrowRef]);
  const ownerState = _extends({}, props, {
    arrow,
    disableInteractive,
    placement,
    touch: ignoreNonTouchEvents.current,
    color,
    variant,
    size
  });
  const classes = useUtilityClasses50(ownerState);
  const RootComponent = (_components$Root = components.Root) != null ? _components$Root : TooltipRoot;
  const ArrowComponent = (_components$Arrow = components.Arrow) != null ? _components$Arrow : TooltipArrow;
  const rootProps = useSlotProps({
    elementType: RootComponent,
    externalSlotProps: componentsProps.root,
    ownerState,
    className: clsx_m_default(classes.root, (_componentsProps$root = componentsProps.root) == null ? void 0 : _componentsProps$root.className)
  });
  const tooltipArrowProps = useSlotProps({
    elementType: ArrowComponent,
    externalSlotProps: componentsProps.arrow,
    ownerState,
    className: clsx_m_default(classes.arrow, (_componentsProps$arro = componentsProps.arrow) == null ? void 0 : _componentsProps$arro.className)
  });
  return (0, import_jsx_runtime81.jsxs)(React76.Fragment, {
    children: [React76.isValidElement(children) && React76.cloneElement(children, childrenProps), (0, import_jsx_runtime81.jsxs)(PopperUnstyled_default, _extends({
      component: RootComponent,
      placement,
      anchorEl: followCursor ? {
        getBoundingClientRect: () => ({
          top: positionRef.current.y,
          left: positionRef.current.x,
          right: positionRef.current.x,
          bottom: positionRef.current.y,
          width: 0,
          height: 0
        })
      } : childNode,
      popperRef,
      open: childNode ? open : false,
      id
    }, interactiveWrapperListeners, rootProps, {
      popperOptions,
      ownerState,
      children: [title, arrow ? (0, import_jsx_runtime80.jsx)(TooltipArrow, _extends({}, tooltipArrowProps, {
        className: clsx_m_default(classes.arrow, (_componentsProps$arro2 = componentsProps.arrow) == null ? void 0 : _componentsProps$arro2.className),
        ref: setArrowRef,
        ownerState
      })) : null]
    }))]
  });
});
true ? Tooltip.propTypes = {
  arrow: import_prop_types55.default.bool,
  children: import_prop_types55.default.element.isRequired,
  className: import_prop_types55.default.string,
  color: import_prop_types55.default.oneOfType([import_prop_types55.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types55.default.string]),
  components: import_prop_types55.default.shape({
    Arrow: import_prop_types55.default.elementType,
    Root: import_prop_types55.default.elementType
  }),
  componentsProps: import_prop_types55.default.shape({
    arrow: import_prop_types55.default.object,
    root: import_prop_types55.default.object
  }),
  describeChild: import_prop_types55.default.bool,
  disableFocusListener: import_prop_types55.default.bool,
  disableHoverListener: import_prop_types55.default.bool,
  disableInteractive: import_prop_types55.default.bool,
  disableTouchListener: import_prop_types55.default.bool,
  enterDelay: import_prop_types55.default.number,
  enterNextDelay: import_prop_types55.default.number,
  enterTouchDelay: import_prop_types55.default.number,
  followCursor: import_prop_types55.default.bool,
  id: import_prop_types55.default.string,
  leaveDelay: import_prop_types55.default.number,
  leaveTouchDelay: import_prop_types55.default.number,
  onClose: import_prop_types55.default.func,
  onOpen: import_prop_types55.default.func,
  open: import_prop_types55.default.bool,
  placement: import_prop_types55.default.oneOf(["bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  size: import_prop_types55.default.oneOfType([import_prop_types55.default.oneOf(["lg", "md", "sm"]), import_prop_types55.default.string]),
  sx: import_prop_types55.default.oneOfType([import_prop_types55.default.arrayOf(import_prop_types55.default.oneOfType([import_prop_types55.default.func, import_prop_types55.default.object, import_prop_types55.default.bool])), import_prop_types55.default.func, import_prop_types55.default.object]),
  title: import_prop_types55.default.node,
  variant: import_prop_types55.default.oneOfType([import_prop_types55.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types55.default.string])
} : void 0;
var Tooltip_default = Tooltip;
export {
  Alert_default as Alert,
  AspectRatio_default as AspectRatio,
  Avatar_default as Avatar,
  AvatarGroup_default as AvatarGroup,
  Badge_default as Badge,
  Box_default as Box,
  Breadcrumbs_default as Breadcrumbs,
  Button_default as Button,
  Card_default as Card,
  CardContent_default as CardContent,
  CardCover_default as CardCover,
  CardOverflow_default as CardOverflow,
  Checkbox_default as Checkbox,
  Chip_default as Chip,
  ChipDelete_default as ChipDelete,
  CircularProgress_default as CircularProgress,
  ColorInversionProvider,
  Container_default as Container,
  CssBaseline_default as CssBaseline,
  CssVarsProvider,
  Divider_default as Divider,
  FormHelperText_default as FormHelperText,
  FormLabel_default as FormLabel,
  GlobalStyles,
  Grid_default as Grid,
  IconButton_default as IconButton,
  Input_default as Input,
  Link_default as Link,
  List_default as List,
  ListDivider_default as ListDivider,
  ListItem_default as ListItem,
  ListItemButton_default as ListItemButton,
  ListItemContent_default as ListItemContent,
  ListItemDecorator_default as ListItemDecorator,
  Menu_default as Menu,
  MenuItem_default as MenuItem,
  MenuList_default as MenuList,
  Modal_default as Modal,
  ModalClose_default as ModalClose,
  ModalDialog_default as ModalDialog,
  Option_default as Option,
  Radio_default as Radio,
  RadioGroup_default as RadioGroup,
  ScopedCssBaseline_default as ScopedCssBaseline,
  Select_default as Select,
  Sheet_default as Sheet,
  Slider_default as Slider,
  Stack_default as Stack,
  StyledEngineProvider,
  SvgIcon_default as SvgIcon,
  Switch_default as Switch,
  Tab_default as Tab,
  TabList_default as TabList,
  TabPanel_default as TabPanel,
  Tabs_default as Tabs,
  TextField_default as TextField,
  Textarea_default as Textarea,
  ThemeProvider,
  Tooltip_default as Tooltip,
  Typography_default as Typography,
  alertClasses_default as alertClasses,
  aspectRatioClasses_default as aspectRatioClasses,
  avatarClasses_default as avatarClasses,
  avatarGroupClasses_default as avatarGroupClasses,
  badgeClasses_default as badgeClasses,
  breadcrumbsClasses_default as breadcrumbsClasses,
  buttonClasses_default as buttonClasses,
  cardClasses_default as cardClasses,
  cardContentClasses_default as cardContentClasses,
  cardCoverClasses_default as cardCoverClasses,
  cardOverflowClasses_default as cardOverflowClasses,
  checkboxClasses_default as checkboxClasses,
  chipClasses_default as chipClasses,
  chipDeleteClasses_default as chipDeleteClasses,
  circularProgressClasses_default as circularProgressClasses,
  colors_default as colors,
  containerClasses_default as containerClasses,
  createGetCssVar2 as createGetCssVar,
  dividerClasses_default as dividerClasses,
  sx as experimental_sx,
  extendTheme,
  formHelperTextClasses_default as formHelperTextClasses,
  formLabelClasses_default as formLabelClasses,
  getAlertUtilityClass,
  getAspectRatioUtilityClass,
  getAvatarGroupUtilityClass,
  getAvatarUtilityClass,
  getBadgeUtilityClass,
  getBreadcrumbsUtilityClass,
  getButtonUtilityClass,
  getCardContentUtilityClass,
  getCardCoverUtilityClass,
  getCardOverflowUtilityClass,
  getCardUtilityClass,
  getCheckboxUtilityClass,
  getChipDeleteUtilityClass,
  getChipUtilityClass,
  getCircularProgressUtilityClass,
  getContainerUtilityClass,
  getDividerUtilityClass,
  getFormHelperTextUtilityClass,
  getFormLabelUtilityClass,
  getGridUtilityClass,
  getIconButtonUtilityClass,
  getInitColorSchemeScript,
  getInputUtilityClass,
  getLinkUtilityClass,
  getListDividerUtilityClass,
  getListItemButtonUtilityClass,
  getListItemContentUtilityClass,
  getListItemDecoratorUtilityClass,
  getListItemUtilityClass,
  getListUtilityClass,
  getMenuItemUtilityClass,
  getMenuListUtilityClass,
  getMenuUtilityClass,
  getModalCloseUtilityClass,
  getModalDialogUtilityClass,
  getModalUtilityClass,
  getOptionUtilityClass,
  getRadioGroupUtilityClass,
  getRadioUtilityClass,
  getSelectUtilityClass,
  getSheetUtilityClass,
  getSliderUtilityClass,
  getStackUtilityClass,
  getSvgIconUtilityClass,
  getSwitchUtilityClass,
  getTabListUtilityClass,
  getTabPanelUtilityClass,
  getTabUtilityClass,
  getTabsUtilityClass,
  getTextFieldUtilityClass,
  getTextareaUtilityClass,
  getTooltipUtilityClass,
  getTypographyUtilityClass,
  gridClasses_default as gridClasses,
  iconButtonClasses_default as iconButtonClasses,
  inputClasses_default as inputClasses,
  linkClasses_default as linkClasses,
  listClasses_default as listClasses,
  listDividerClasses_default as listDividerClasses,
  listItemButtonClasses_default as listItemButtonClasses,
  listItemClasses_default as listItemClasses,
  listItemContentClasses_default as listItemContentClasses,
  listItemDecoratorClasses_default as listItemDecoratorClasses,
  menuClasses_default as menuClasses,
  menuItemClasses_default as menuItemClasses,
  menuListClasses_default as menuListClasses,
  modalClasses_default as modalClasses,
  modalCloseClasses_default as modalCloseClasses,
  modalDialogClasses_default as modalDialogClasses,
  optionClasses_default as optionClasses,
  radioClasses_default as radioClasses,
  radioGroupClasses_default as radioGroupClasses,
  scopedCssBaselineClasses_default as scopedCssBaselineClasses,
  selectClasses_default as selectClasses,
  sheetClasses_default as sheetClasses,
  shouldSkipGeneratingVar,
  sliderClasses_default as sliderClasses,
  stackClasses_default as stackClasses,
  styled_default as styled,
  svgIconClasses_default as svgIconClasses,
  switchClasses_default as switchClasses,
  tabClasses_default as tabClasses,
  tabListClasses_default as tabListClasses,
  tabPanelClasses_default as tabPanelClasses,
  tabsClasses_default as tabsClasses,
  textFieldClasses_default as textFieldClasses,
  textareaClasses_default as textareaClasses,
  tooltipClasses_default as tooltipClasses,
  typographyClasses_default as typographyClasses,
  useColorInversion,
  useColorScheme,
  useTheme,
  useThemeProps2 as useThemeProps
};
/** @license MUI v5.0.0-alpha.52
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//# sourceMappingURL=@mui_joy.js.map
