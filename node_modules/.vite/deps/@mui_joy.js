import {
  ClassNameGenerator_default,
  HTMLElementType,
  StyledEngineProvider,
  ThemeProvider_default,
  border,
  borderBottom,
  borderBottomColor,
  borderColor,
  borderLeft,
  borderLeftColor,
  borderRight,
  borderRightColor,
  borderTop,
  borderTopColor,
  capitalize,
  chainPropTypes,
  colorChannel,
  composeClasses,
  compose_default,
  createBox,
  createBreakpoints,
  createChainedFunction,
  createContainer,
  createCssVarsProvider,
  createGetCssVar,
  createGrid,
  createPopper,
  createSpacing,
  createStack,
  createStyled,
  css,
  cssGrid_default,
  debounce,
  deepmerge,
  display_default,
  elementAcceptingRef_default,
  exactProp,
  extendSxProp,
  flexbox_default,
  generateUtilityClass,
  generateUtilityClasses,
  getScrollbarSize,
  init_Unstable_Grid,
  init_esm,
  init_esm2,
  init_lib,
  integerPropType_default,
  isMuiElement,
  keyframes,
  ownerDocument,
  ownerWindow,
  palette_default,
  positions_default,
  refType_default,
  setRef,
  sizing_default,
  spacing_default,
  style_default,
  typographyVariant,
  unstable_createStyleFunctionSx,
  useControlled,
  useEnhancedEffect_default,
  useEventCallback,
  useForkRef,
  useId,
  useIsFocusVisible,
  usePreviousProps_default,
  useThemeProps,
  useTheme_default,
  visuallyHidden_default
} from "./chunk-53MQOFU6.js";
import {
  _objectWithoutPropertiesLoose,
  init_objectWithoutPropertiesLoose
} from "./chunk-EBW3JKEH.js";
import {
  _extends,
  init_extends
} from "./chunk-SUFR5NQW.js";
import {
  require_react_dom
} from "./chunk-AGYRAQNY.js";
import {
  clsx_m_default,
  init_clsx_m
} from "./chunk-4JNWWNIS.js";
import "./chunk-OH2OWROH.js";
import {
  require_prop_types
} from "./chunk-5BMR7XGB.js";
import "./chunk-VGPEVICO.js";
import "./chunk-3M2UZNYF.js";
import {
  require_jsx_runtime
} from "./chunk-ULI4Y4G7.js";
import {
  require_react
} from "./chunk-KL6BCPSF.js";
import {
  __commonJS,
  __toESM
} from "./chunk-S5KM4IGW.js";

// node_modules/@mui/joy/node_modules/react-is/cjs/react-is.development.js
var require_react_is_development = __commonJS({
  "node_modules/@mui/joy/node_modules/react-is/cjs/react-is.development.js"(exports) {
    "use strict";
    if (true) {
      (function() {
        "use strict";
        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
        var REACT_SERVER_CONTEXT_TYPE = Symbol.for("react.server_context");
        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
        var REACT_MEMO_TYPE = Symbol.for("react.memo");
        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
        var enableScopeAPI = false;
        var enableCacheElement = false;
        var enableTransitionTracing = false;
        var enableLegacyHidden = false;
        var enableDebugTracing = false;
        var REACT_MODULE_REFERENCE;
        {
          REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
        }
        function isValidElementType(type) {
          if (typeof type === "string" || typeof type === "function") {
            return true;
          }
          if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
            return true;
          }
          if (typeof type === "object" && type !== null) {
            if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
              return true;
            }
          }
          return false;
        }
        function typeOf(object) {
          if (typeof object === "object" && object !== null) {
            var $$typeof = object.$$typeof;
            switch ($$typeof) {
              case REACT_ELEMENT_TYPE:
                var type = object.type;
                switch (type) {
                  case REACT_FRAGMENT_TYPE:
                  case REACT_PROFILER_TYPE:
                  case REACT_STRICT_MODE_TYPE:
                  case REACT_SUSPENSE_TYPE:
                  case REACT_SUSPENSE_LIST_TYPE:
                    return type;
                  default:
                    var $$typeofType = type && type.$$typeof;
                    switch ($$typeofType) {
                      case REACT_SERVER_CONTEXT_TYPE:
                      case REACT_CONTEXT_TYPE:
                      case REACT_FORWARD_REF_TYPE:
                      case REACT_LAZY_TYPE:
                      case REACT_MEMO_TYPE:
                      case REACT_PROVIDER_TYPE:
                        return $$typeofType;
                      default:
                        return $$typeof;
                    }
                }
              case REACT_PORTAL_TYPE:
                return $$typeof;
            }
          }
          return void 0;
        }
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment12 = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal3 = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var SuspenseList = REACT_SUSPENSE_LIST_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false;
        var hasWarnedAboutDeprecatedIsConcurrentMode = false;
        function isAsyncMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsAsyncMode) {
              hasWarnedAboutDeprecatedIsAsyncMode = true;
              console["warn"]("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isConcurrentMode(object) {
          {
            if (!hasWarnedAboutDeprecatedIsConcurrentMode) {
              hasWarnedAboutDeprecatedIsConcurrentMode = true;
              console["warn"]("The ReactIs.isConcurrentMode() alias has been deprecated, and will be removed in React 18+.");
            }
          }
          return false;
        }
        function isContextConsumer(object) {
          return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
          return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
          return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
          return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment2(object) {
          return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
          return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
          return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
          return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
          return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
          return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
          return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        function isSuspenseList(object) {
          return typeOf(object) === REACT_SUSPENSE_LIST_TYPE;
        }
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment12;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal3;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.SuspenseList = SuspenseList;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment2;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isSuspenseList = isSuspenseList;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
      })();
    }
  }
});

// node_modules/@mui/joy/node_modules/react-is/index.js
var require_react_is = __commonJS({
  "node_modules/@mui/joy/node_modules/react-is/index.js"(exports, module) {
    "use strict";
    if (false) {
      module.exports = null;
    } else {
      module.exports = require_react_is_development();
    }
  }
});

// node_modules/@mui/joy/colors/colors.js
var colors = {
  grey: {
    50: "#F7F7F8",
    100: "#EEEFF0",
    200: "#DDDEE0",
    300: "#BDBFC4",
    400: "#9DA1AC",
    500: "#81848F",
    600: "#646872",
    700: "#42454D",
    800: "#272930",
    900: "#131418"
  },
  blue: {
    50: "#F4FAFF",
    100: "#DDF1FF",
    200: "#ADDBFF",
    300: "#6FB6FF",
    400: "#3990FF",
    500: "#096BDE",
    600: "#054DA7",
    700: "#02367D",
    800: "#072859",
    900: "#00153C"
  },
  yellow: {
    50: "#FFF8C5",
    100: "#FAE17D",
    200: "#EAC54F",
    300: "#D4A72C",
    400: "#BF8700",
    500: "#9A6700",
    600: "#7D4E00",
    700: "#633C01",
    800: "#4D2D00",
    900: "#3B2300"
  },
  red: {
    50: "#FFF8F6",
    100: "#FFE9E8",
    200: "#FFC7C5",
    300: "#FF9192",
    400: "#FA5255",
    500: "#D3232F",
    600: "#A10E25",
    700: "#77061B",
    800: "#580013",
    900: "#39000D"
  },
  green: {
    50: "#F3FEF5",
    100: "#D7F5DD",
    200: "#77EC95",
    300: "#4CC76E",
    400: "#2CA24D",
    500: "#1A7D36",
    600: "#0F5D26",
    700: "#034318",
    800: "#002F0F",
    900: "#001D09"
  },
  purple: {
    50: "#FDF7FF",
    100: "#F4EAFF",
    200: "#E1CBFF",
    300: "#C69EFF",
    400: "#A374F9",
    500: "#814DDE",
    600: "#5F35AE",
    700: "#452382",
    800: "#301761",
    900: "#1D0A42"
  }
};
var colors_default = colors;

// node_modules/@mui/joy/styles/CssVarsProvider.js
init_esm2();

// node_modules/@mui/joy/styles/extendTheme.js
init_extends();
init_objectWithoutPropertiesLoose();
init_esm();
init_esm2();

// node_modules/@mui/joy/className/index.js
init_esm();
init_esm();
var generateUtilityClass2 = (componentName, slot) => generateUtilityClass(componentName, slot, "Joy");
var generateUtilityClasses2 = (componentName, slots) => generateUtilityClasses(componentName, slots, "Joy");

// node_modules/@mui/joy/styles/variantUtils.js
init_extends();
var isVariantPalette = (colorPalette) => colorPalette && typeof colorPalette === "object" && Object.keys(colorPalette).some((value) => {
  var _value$match;
  return (_value$match = value.match) == null ? void 0 : _value$match.call(value, /^(plain(Hover|Active|Disabled)?(Color|Bg)|outlined(Hover|Active|Disabled)?(Color|Border|Bg)|soft(Hover|Active|Disabled)?(Color|Bg)|solid(Hover|Active|Disabled)?(Color|Bg))$/);
});
var assignCss = (target, variantVar, value) => {
  if (variantVar.includes("Color")) {
    target.color = value;
  }
  if (variantVar.includes("Bg")) {
    target.backgroundColor = value;
  }
  if (variantVar.includes("Border")) {
    target.borderColor = value;
  }
};
var createPrefixVar = (prefix) => {
  return (cssVar) => `--${prefix ? `${prefix}-` : ""}${cssVar.replace(/^--/, "")}`;
};
var createVariantStyle = (name, palette, getCssVar) => {
  const result = {};
  Object.entries(palette || {}).forEach(([variantVar, value]) => {
    if (variantVar.match(new RegExp(`${name}(color|bg|border)`, "i")) && !!value) {
      const cssVar = getCssVar ? getCssVar(variantVar) : value;
      if (variantVar.includes("Hover")) {
        result.cursor = "pointer";
      }
      if (variantVar.includes("Disabled")) {
        result.pointerEvents = "none";
        result.cursor = "default";
      }
      if (variantVar.match(/(Hover|Active|Disabled)/)) {
        assignCss(result, variantVar, cssVar);
      } else {
        if (!result["--variant-borderWidth"]) {
          result["--variant-borderWidth"] = "0px";
        }
        if (variantVar.includes("Border")) {
          result["--variant-borderWidth"] = "1px";
          result.border = "var(--variant-borderWidth) solid";
        }
        assignCss(result, variantVar, cssVar);
      }
    }
  });
  return result;
};
var createTextOverrides = (theme) => {
  const {
    prefix,
    getCssVar
  } = theme;
  const prefixVar = createPrefixVar(prefix);
  let result = {};
  Object.entries(theme.palette).forEach((entry) => {
    const [color, colorPalette] = entry;
    if (isVariantPalette(colorPalette)) {
      result = _extends({}, result, {
        [color]: {
          [prefixVar("--palette-text-primary")]: getCssVar(`palette-${color}-overrideTextPrimary`),
          [prefixVar("--palette-text-secondary")]: getCssVar(`palette-${color}-overrideTextSecondary`),
          [prefixVar("--palette-text-tertiary")]: getCssVar(`palette-${color}-overrideTextTertiary`)
        }
      });
    }
  });
  return result;
};
var createContainedOverrides = (theme) => {
  const {
    prefix,
    getCssVar
  } = theme;
  const prefixVar = createPrefixVar(prefix);
  let result = {};
  Object.entries(theme.palette).forEach((entry) => {
    const [color, colorPalette] = entry;
    if (isVariantPalette(colorPalette)) {
      result = _extends({}, result, {
        [color]: {
          [prefixVar("--palette-text-primary")]: "#fff",
          [prefixVar("--palette-text-secondary")]: getCssVar(`palette-${color}-100`),
          [prefixVar("--palette-text-tertiary")]: getCssVar(`palette-${color}-200`),
          "--variant-focusVisible": `rgba(255 255 255 / 0.32)`,
          "--variant-plainColor": getCssVar(`palette-${color}-100`),
          "--variant-plainHoverColor": `#fff`,
          "--variant-plainHoverBg": `rgba(255 255 255 / 0.12)`,
          "--variant-plainActiveBg": `rgba(255 255 255 / 0.2)`,
          "--variant-plainDisabledColor": getCssVar(`palette-${color}-300`),
          "--variant-outlinedColor": getCssVar(`palette-${color}-100`),
          "--variant-outlinedBorder": getCssVar(`palette-${color}-300`),
          "--variant-outlinedHoverColor": `#fff`,
          "--variant-outlinedHoverBorder": getCssVar(`palette-${color}-200`),
          "--variant-outlinedHoverBg": `rgba(255 255 255 / 0.12)`,
          "--variant-outlinedActiveBg": `rgba(255 255 255 / 0.2)`,
          "--variant-outlinedDisabledColor": getCssVar(`palette-${color}-300`),
          "--variant-outlinedDisabledBorder": `rgba(255 255 255 / 0.2)`,
          "--variant-softColor": "#fff",
          "--variant-softBg": `rgba(255 255 255 / 0.12)`,
          "--variant-softHoverBg": `rgba(255 255 255 / 0.2)`,
          "--variant-softActiveBg": `rgba(255 255 255 / 0.08)`,
          "--variant-softDisabledColor": getCssVar(`palette-${color}-300`),
          "--variant-softDisabledBg": `rgba(255 255 255 / 0.08)`,
          "--variant-solidBg": getCssVar(`palette-${color}-700`, "rgba(0 0 0 / 0.16)"),
          "--variant-solidHoverBg": "rgba(0 0 0 / 0.32)",
          "--variant-solidActiveBg": "rgba(0 0 0 / 0.48)",
          "--variant-solidDisabledColor": getCssVar(`palette-${color}-300`),
          "--variant-solidDisabledBg": `rgba(255 255 255 / 0.08)`
        }
      });
    }
  });
  return result;
};
var createVariant = (variant, theme) => {
  let result = {};
  if (theme) {
    const {
      getCssVar,
      palette
    } = theme;
    Object.entries(palette).forEach((entry) => {
      const [color, colorPalette] = entry;
      if (isVariantPalette(colorPalette) && typeof colorPalette === "object") {
        result = _extends({}, result, {
          [color]: createVariantStyle(variant, colorPalette, (variantVar) => getCssVar(`palette-${color}-${variantVar}`))
        });
      }
    });
  }
  result.context = createVariantStyle(variant, {
    plainColor: "var(--variant-plainColor)",
    plainHoverColor: `var(--variant-plainHoverColor)`,
    plainHoverBg: "var(--variant-plainHoverBg)",
    plainActiveBg: "var(--variant-plainActiveBg)",
    plainDisabledColor: "var(--variant-plainDisabledColor)",
    outlinedColor: "var(--variant-outlinedColor)",
    outlinedBorder: "var(--variant-outlinedBorder)",
    outlinedHoverColor: `var(--variant-outlinedHoverColor)`,
    outlinedHoverBorder: `var(--variant-outlinedHoverBorder)`,
    outlinedHoverBg: `var(--variant-outlinedHoverBg)`,
    outlinedActiveBg: `var(--variant-outlinedActiveBg)`,
    outlinedDisabledColor: `var(--variant-outlinedDisabledColor)`,
    outlinedDisabledBorder: `var(--variant-outlinedDisabledBorder)`,
    softColor: "var(--variant-softColor)",
    softBg: "var(--variant-softBg)",
    softHoverBg: "var(--variant-softHoverBg)",
    softActiveBg: "var(--variant-softActiveBg)",
    softDisabledColor: "var(--variant-softDisabledColor)",
    softDisabledBg: "var(--variant-softDisabledBg)",
    solidBg: "var(--variant-solidBg)",
    solidHoverBg: "var(--variant-solidHoverBg)",
    solidActiveBg: "var(--variant-solidActiveBg)",
    solidDisabledColor: "var(--variant-solidDisabledColor)",
    solidDisabledBg: "var(--variant-solidDisabledBg)"
  });
  return result;
};

// node_modules/@mui/joy/styles/extendTheme.js
var _excluded = ["cssVarPrefix", "breakpoints", "spacing", "components", "variants"];
var _excluded2 = ["colorSchemes"];
var createGetCssVar2 = (cssVarPrefix = "joy") => createGetCssVar(cssVarPrefix);
function extendTheme(themeOptions) {
  const _ref = themeOptions || {}, {
    cssVarPrefix = "joy",
    breakpoints,
    spacing,
    components: componentsInput,
    variants: variantsInput
  } = _ref, scalesInput = _objectWithoutPropertiesLoose(_ref, _excluded);
  const getCssVar = createGetCssVar2(cssVarPrefix);
  const createLightModeVariantVariables = (color) => ({
    plainColor: getCssVar(`palette-${color}-600`),
    plainHoverBg: getCssVar(`palette-${color}-100`),
    plainActiveBg: getCssVar(`palette-${color}-200`),
    plainDisabledColor: getCssVar(`palette-${color}-200`),
    outlinedColor: getCssVar(`palette-${color}-500`),
    outlinedBorder: getCssVar(`palette-${color}-200`),
    outlinedHoverBg: getCssVar(`palette-${color}-100`),
    outlinedHoverBorder: getCssVar(`palette-${color}-300`),
    outlinedActiveBg: getCssVar(`palette-${color}-200`),
    outlinedDisabledColor: getCssVar(`palette-${color}-100`),
    outlinedDisabledBorder: getCssVar(`palette-${color}-100`),
    softColor: getCssVar(`palette-${color}-600`),
    softBg: getCssVar(`palette-${color}-100`),
    softHoverBg: getCssVar(`palette-${color}-200`),
    softActiveBg: getCssVar(`palette-${color}-300`),
    softDisabledColor: getCssVar(`palette-${color}-300`),
    softDisabledBg: getCssVar(`palette-${color}-50`),
    solidColor: "#fff",
    solidBg: getCssVar(`palette-${color}-500`),
    solidHoverBg: getCssVar(`palette-${color}-600`),
    solidActiveBg: getCssVar(`palette-${color}-700`),
    solidDisabledColor: `#fff`,
    solidDisabledBg: getCssVar(`palette-${color}-200`),
    overrideTextPrimary: getCssVar(`palette-${color}-700`),
    overrideTextSecondary: getCssVar(`palette-${color}-500`),
    overrideTextTertiary: getCssVar(`palette-${color}-400`)
  });
  const createDarkModeVariantVariables = (color) => ({
    plainColor: getCssVar(`palette-${color}-300`),
    plainHoverBg: getCssVar(`palette-${color}-800`),
    plainActiveBg: getCssVar(`palette-${color}-700`),
    plainDisabledColor: getCssVar(`palette-${color}-800`),
    outlinedColor: getCssVar(`palette-${color}-200`),
    outlinedBorder: getCssVar(`palette-${color}-700`),
    outlinedHoverBg: getCssVar(`palette-${color}-800`),
    outlinedHoverBorder: getCssVar(`palette-${color}-600`),
    outlinedActiveBg: getCssVar(`palette-${color}-900`),
    outlinedDisabledColor: getCssVar(`palette-${color}-800`),
    outlinedDisabledBorder: getCssVar(`palette-${color}-800`),
    softColor: getCssVar(`palette-${color}-200`),
    softBg: getCssVar(`palette-${color}-900`),
    softHoverBg: getCssVar(`palette-${color}-800`),
    softActiveBg: getCssVar(`palette-${color}-700`),
    softDisabledColor: getCssVar(`palette-${color}-800`),
    softDisabledBg: getCssVar(`palette-${color}-900`),
    solidColor: `#fff`,
    solidBg: getCssVar(`palette-${color}-600`),
    solidHoverBg: getCssVar(`palette-${color}-700`),
    solidActiveBg: getCssVar(`palette-${color}-800`),
    solidDisabledColor: getCssVar(`palette-${color}-700`),
    solidDisabledBg: getCssVar(`palette-${color}-900`),
    overrideTextPrimary: getCssVar(`palette-${color}-200`),
    overrideTextSecondary: getCssVar(`palette-${color}-400`),
    overrideTextTertiary: getCssVar(`palette-${color}-500`)
  });
  const lightColorSystem = {
    palette: {
      primary: _extends({}, colors_default.blue, createLightModeVariantVariables("primary")),
      neutral: _extends({}, colors_default.grey, {
        plainColor: getCssVar(`palette-neutral-800`),
        plainHoverColor: getCssVar(`palette-neutral-900`),
        plainHoverBg: getCssVar(`palette-neutral-100`),
        plainActiveBg: getCssVar(`palette-neutral-200`),
        plainDisabledColor: getCssVar(`palette-neutral-300`),
        outlinedColor: getCssVar(`palette-neutral-800`),
        outlinedBorder: getCssVar(`palette-neutral-200`),
        outlinedHoverColor: getCssVar(`palette-neutral-900`),
        outlinedHoverBg: getCssVar(`palette-neutral-100`),
        outlinedHoverBorder: getCssVar(`palette-neutral-300`),
        outlinedActiveBg: getCssVar(`palette-neutral-200`),
        outlinedDisabledColor: getCssVar(`palette-neutral-300`),
        outlinedDisabledBorder: getCssVar(`palette-neutral-100`),
        softColor: getCssVar(`palette-neutral-800`),
        softBg: getCssVar(`palette-neutral-100`),
        softHoverColor: getCssVar(`palette-neutral-900`),
        softHoverBg: getCssVar(`palette-neutral-200`),
        softActiveBg: getCssVar(`palette-neutral-300`),
        softDisabledColor: getCssVar(`palette-neutral-300`),
        softDisabledBg: getCssVar(`palette-neutral-50`),
        solidColor: getCssVar(`palette-common-white`),
        solidBg: getCssVar(`palette-neutral-600`),
        solidHoverBg: getCssVar(`palette-neutral-700`),
        solidActiveBg: getCssVar(`palette-neutral-800`),
        solidDisabledColor: getCssVar(`palette-neutral-300`),
        solidDisabledBg: getCssVar(`palette-neutral-50`),
        overrideTextPrimary: getCssVar(`palette-neutral-700`),
        overrideTextSecondary: getCssVar(`palette-neutral-500`),
        overrideTextTertiary: getCssVar(`palette-neutral-400`)
      }),
      danger: _extends({}, colors_default.red, createLightModeVariantVariables("danger")),
      info: _extends({}, colors_default.purple, createLightModeVariantVariables("info")),
      success: _extends({}, colors_default.green, createLightModeVariantVariables("success")),
      warning: _extends({}, colors_default.yellow, createLightModeVariantVariables("warning"), {
        solidColor: getCssVar(`palette-warning-800`),
        solidBg: getCssVar(`palette-warning-200`),
        solidHoverBg: getCssVar(`palette-warning-300`),
        solidActiveBg: getCssVar(`palette-warning-400`),
        solidDisabledColor: getCssVar(`palette-warning-200`),
        solidDisabledBg: getCssVar(`palette-warning-50`),
        softColor: getCssVar(`palette-warning-800`),
        softBg: getCssVar(`palette-warning-50`),
        softHoverBg: getCssVar(`palette-warning-100`),
        softActiveBg: getCssVar(`palette-warning-200`),
        softDisabledColor: getCssVar(`palette-warning-200`),
        softDisabledBg: getCssVar(`palette-warning-50`),
        outlinedColor: getCssVar(`palette-warning-800`),
        outlinedHoverBg: getCssVar(`palette-warning-50`),
        plainColor: getCssVar(`palette-warning-800`),
        plainHoverBg: getCssVar(`palette-warning-50`)
      }),
      common: {
        white: "#FFF",
        black: "#09090D"
      },
      text: {
        primary: getCssVar("palette-neutral-800"),
        secondary: getCssVar("palette-neutral-600"),
        tertiary: getCssVar("palette-neutral-500")
      },
      background: {
        body: getCssVar("palette-common-white"),
        surface: getCssVar("palette-common-white"),
        level1: getCssVar("palette-neutral-50"),
        level2: getCssVar("palette-neutral-100"),
        level3: getCssVar("palette-neutral-200"),
        tooltip: getCssVar("palette-neutral-800"),
        backdrop: "rgba(255 255 255 / 0.5)"
      },
      divider: `rgba(${getCssVar("palette-neutral-mainChannel")} / 0.28)`,
      focusVisible: getCssVar("palette-primary-200")
    },
    shadowRing: "0 0 #000",
    shadowChannel: "187 187 187"
  };
  const darkColorSystem = {
    palette: {
      primary: _extends({}, colors_default.blue, createDarkModeVariantVariables("primary")),
      neutral: _extends({}, colors_default.grey, {
        plainColor: getCssVar(`palette-neutral-200`),
        plainHoverColor: getCssVar(`palette-neutral-50`),
        plainHoverBg: getCssVar(`palette-neutral-800`),
        plainActiveBg: getCssVar(`palette-neutral-700`),
        plainDisabledColor: getCssVar(`palette-neutral-700`),
        outlinedColor: getCssVar(`palette-neutral-200`),
        outlinedBorder: getCssVar(`palette-neutral-800`),
        outlinedHoverColor: getCssVar(`palette-neutral-50`),
        outlinedHoverBg: getCssVar(`palette-neutral-800`),
        outlinedHoverBorder: getCssVar(`palette-neutral-700`),
        outlinedActiveBg: getCssVar(`palette-neutral-800`),
        outlinedDisabledColor: getCssVar(`palette-neutral-800`),
        outlinedDisabledBorder: getCssVar(`palette-neutral-800`),
        softColor: getCssVar(`palette-neutral-200`),
        softBg: getCssVar(`palette-neutral-800`),
        softHoverColor: getCssVar(`palette-neutral-50`),
        softHoverBg: getCssVar(`palette-neutral-700`),
        softActiveBg: getCssVar(`palette-neutral-600`),
        softDisabledColor: getCssVar(`palette-neutral-700`),
        softDisabledBg: getCssVar(`palette-neutral-900`),
        solidColor: getCssVar(`palette-common-white`),
        solidBg: getCssVar(`palette-neutral-600`),
        solidHoverBg: getCssVar(`palette-neutral-700`),
        solidActiveBg: getCssVar(`palette-neutral-800`),
        solidDisabledColor: getCssVar(`palette-neutral-700`),
        solidDisabledBg: getCssVar(`palette-neutral-900`),
        overrideTextPrimary: getCssVar(`palette-neutral-200`),
        overrideTextSecondary: getCssVar(`palette-neutral-400`),
        overrideTextTertiary: getCssVar(`palette-neutral-500`)
      }),
      danger: _extends({}, colors_default.red, createDarkModeVariantVariables("danger")),
      info: _extends({}, colors_default.purple, createDarkModeVariantVariables("info")),
      success: _extends({}, colors_default.green, createDarkModeVariantVariables("success"), {
        solidColor: "#fff",
        solidBg: getCssVar(`palette-success-600`),
        solidHoverBg: getCssVar(`palette-success-700`),
        solidActiveBg: getCssVar(`palette-success-800`)
      }),
      warning: _extends({}, colors_default.yellow, createDarkModeVariantVariables("warning"), {
        solidColor: getCssVar(`palette-common-black`),
        solidBg: getCssVar(`palette-warning-300`),
        solidHoverBg: getCssVar(`palette-warning-400`),
        solidActiveBg: getCssVar(`palette-warning-500`)
      }),
      common: {
        white: "#FFF",
        black: "#09090D"
      },
      text: {
        primary: getCssVar("palette-neutral-100"),
        secondary: getCssVar("palette-neutral-300"),
        tertiary: getCssVar("palette-neutral-400")
      },
      background: {
        body: getCssVar("palette-neutral-900"),
        surface: getCssVar("palette-common-black"),
        level1: getCssVar("palette-neutral-800"),
        level2: getCssVar("palette-neutral-700"),
        level3: getCssVar("palette-neutral-600"),
        tooltip: getCssVar("palette-neutral-600"),
        backdrop: `rgba(${getCssVar("palette-neutral-darkChannel")} / 0.5)`
      },
      divider: `rgba(${getCssVar("palette-neutral-mainChannel")} / 0.24)`,
      focusVisible: getCssVar("palette-primary-500")
    },
    shadowRing: "0 0 #000",
    shadowChannel: "0 0 0"
  };
  const defaultScales = {
    colorSchemes: {
      light: lightColorSystem,
      dark: darkColorSystem
    },
    fontSize: {
      xs3: "0.5rem",
      xs2: "0.625rem",
      xs: "0.75rem",
      sm: "0.875rem",
      md: "1rem",
      lg: "1.125rem",
      xl: "1.25rem",
      xl2: "1.5rem",
      xl3: "1.875rem",
      xl4: "2.25rem",
      xl5: "3rem",
      xl6: "3.75rem",
      xl7: "4.5rem"
    },
    fontFamily: {
      body: `"Public Sans", ${getCssVar("fontFamily-fallback")}`,
      display: `"Public Sans", ${getCssVar("fontFamily-fallback")}`,
      code: "Source Code Pro,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace",
      fallback: '-apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"'
    },
    fontWeight: {
      xs: 200,
      sm: 300,
      md: 500,
      lg: 600,
      xl: 700,
      xl2: 800,
      xl3: 900
    },
    focus: {
      selector: `&.${generateUtilityClass2("", "focusVisible")}, &:focus-visible`,
      default: {
        outlineOffset: getCssVar("focus-outlineOffset", "0px"),
        outline: `4px solid ${getCssVar("palette-focusVisible")}`
      }
    },
    lineHeight: {
      sm: 1.25,
      md: 1.5,
      lg: 1.7
    },
    letterSpacing: {
      sm: "-0.01em",
      md: "0.083em",
      lg: "0.125em"
    },
    radius: {
      xs: "4px",
      sm: "8px",
      md: "12px",
      lg: "16px",
      xl: "20px"
    },
    shadow: {
      xs: `${getCssVar("shadowRing")}, 0 1px 2px 0 rgba(${getCssVar("shadowChannel")} / 0.12)`,
      sm: `${getCssVar("shadowRing")}, 0.3px 0.8px 1.1px rgba(${getCssVar("shadowChannel")} / 0.11), 0.5px 1.3px 1.8px -0.6px rgba(${getCssVar("shadowChannel")} / 0.18), 1.1px 2.7px 3.8px -1.2px rgba(${getCssVar("shadowChannel")} / 0.26)`,
      md: `${getCssVar("shadowRing")}, 0.3px 0.8px 1.1px rgba(${getCssVar("shadowChannel")} / 0.12), 1.1px 2.8px 3.9px -0.4px rgba(${getCssVar("shadowChannel")} / 0.17), 2.4px 6.1px 8.6px -0.8px rgba(${getCssVar("shadowChannel")} / 0.23), 5.3px 13.3px 18.8px -1.2px rgba(${getCssVar("shadowChannel")} / 0.29)`,
      lg: `${getCssVar("shadowRing")}, 0.3px 0.8px 1.1px rgba(${getCssVar("shadowChannel")} / 0.11), 1.8px 4.5px 6.4px -0.2px rgba(${getCssVar("shadowChannel")} / 0.13), 3.2px 7.9px 11.2px -0.4px rgba(${getCssVar("shadowChannel")} / 0.16), 4.8px 12px 17px -0.5px rgba(${getCssVar("shadowChannel")} / 0.19), 7px 17.5px 24.7px -0.7px rgba(${getCssVar("shadowChannel")} / 0.21)`,
      xl: `${getCssVar("shadowRing")}, 0.3px 0.8px 1.1px rgba(${getCssVar("shadowChannel")} / 0.11), 1.8px 4.5px 6.4px -0.2px rgba(${getCssVar("shadowChannel")} / 0.13), 3.2px 7.9px 11.2px -0.4px rgba(${getCssVar("shadowChannel")} / 0.16), 4.8px 12px 17px -0.5px rgba(${getCssVar("shadowChannel")} / 0.19), 7px 17.5px 24.7px -0.7px rgba(${getCssVar("shadowChannel")} / 0.21), 10.2px 25.5px 36px -0.9px rgba(${getCssVar("shadowChannel")} / 0.24), 14.8px 36.8px 52.1px -1.1px rgba(${getCssVar("shadowChannel")} / 0.27), 21px 52.3px 74px -1.2px rgba(${getCssVar("shadowChannel")} / 0.29)`
    },
    typography: {
      display1: {
        fontFamily: getCssVar("fontFamily-display"),
        fontWeight: getCssVar("fontWeight-xl"),
        fontSize: getCssVar("fontSize-xl7"),
        lineHeight: getCssVar("lineHeight-sm"),
        letterSpacing: getCssVar("letterSpacing-sm"),
        color: getCssVar("palette-text-primary")
      },
      display2: {
        fontFamily: getCssVar("fontFamily-display"),
        fontWeight: getCssVar("fontWeight-xl"),
        fontSize: getCssVar("fontSize-xl6"),
        lineHeight: getCssVar("lineHeight-sm"),
        letterSpacing: getCssVar("letterSpacing-sm"),
        color: getCssVar("palette-text-primary")
      },
      h1: {
        fontFamily: getCssVar("fontFamily-display"),
        fontWeight: getCssVar("fontWeight-lg"),
        fontSize: getCssVar("fontSize-xl5"),
        lineHeight: getCssVar("lineHeight-sm"),
        letterSpacing: getCssVar("letterSpacing-sm"),
        color: getCssVar("palette-text-primary")
      },
      h2: {
        fontFamily: getCssVar("fontFamily-display"),
        fontWeight: getCssVar("fontWeight-lg"),
        fontSize: getCssVar("fontSize-xl4"),
        lineHeight: getCssVar("lineHeight-sm"),
        letterSpacing: getCssVar("letterSpacing-sm"),
        color: getCssVar("palette-text-primary")
      },
      h3: {
        fontFamily: getCssVar("fontFamily-body"),
        fontWeight: getCssVar("fontWeight-md"),
        fontSize: getCssVar("fontSize-xl3"),
        lineHeight: getCssVar("lineHeight-sm"),
        color: getCssVar("palette-text-primary")
      },
      h4: {
        fontFamily: getCssVar("fontFamily-body"),
        fontWeight: getCssVar("fontWeight-md"),
        fontSize: getCssVar("fontSize-xl2"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-primary")
      },
      h5: {
        fontFamily: getCssVar("fontFamily-body"),
        fontWeight: getCssVar("fontWeight-md"),
        fontSize: getCssVar("fontSize-xl"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-primary")
      },
      h6: {
        fontFamily: getCssVar("fontFamily-body"),
        fontWeight: getCssVar("fontWeight-md"),
        fontSize: getCssVar("fontSize-lg"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-primary")
      },
      body1: {
        fontFamily: getCssVar("fontFamily-body"),
        fontSize: getCssVar("fontSize-md"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-primary")
      },
      body2: {
        fontFamily: getCssVar("fontFamily-body"),
        fontSize: getCssVar("fontSize-sm"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-secondary")
      },
      body3: {
        fontFamily: getCssVar("fontFamily-body"),
        fontSize: getCssVar("fontSize-xs"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-tertiary")
      },
      body4: {
        fontFamily: getCssVar("fontFamily-body"),
        fontSize: getCssVar("fontSize-xs2"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-tertiary")
      },
      body5: {
        fontFamily: getCssVar("fontFamily-body"),
        fontSize: getCssVar("fontSize-xs3"),
        lineHeight: getCssVar("lineHeight-md"),
        color: getCssVar("palette-text-tertiary")
      }
    }
  };
  const _ref2 = scalesInput ? deepmerge(defaultScales, scalesInput) : defaultScales, {
    colorSchemes
  } = _ref2, mergedScales = _objectWithoutPropertiesLoose(_ref2, _excluded2);
  const {
    palette: firstColorSchemePalette
  } = Object.entries(colorSchemes)[0][1];
  const variantInput = {
    palette: firstColorSchemePalette,
    prefix: cssVarPrefix,
    getCssVar
  };
  const theme = _extends({
    colorSchemes
  }, mergedScales, {
    breakpoints: createBreakpoints(breakpoints != null ? breakpoints : {}),
    components: deepmerge({
      MuiSvgIcon: {
        defaultProps: {
          fontSize: "xl"
        },
        styleOverrides: {
          root: ({
            ownerState,
            theme: themeProp
          }) => {
            var _themeProp$vars$palet;
            const instanceFontSize = ownerState.instanceFontSize;
            return _extends({
              color: "var(--Icon-color)",
              margin: "var(--Icon-margin)"
            }, ownerState.fontSize && ownerState.fontSize !== "inherit" && {
              fontSize: `var(--Icon-fontSize, ${themeProp.fontSize[ownerState.fontSize]})`
            }, ownerState.color && ownerState.color !== "inherit" && {
              color: (_themeProp$vars$palet = themeProp.vars.palette[ownerState.color]) == null ? void 0 : _themeProp$vars$palet.plainColor
            }, instanceFontSize && instanceFontSize !== "inherit" && {
              "--Icon-fontSize": themeProp.vars.fontSize[instanceFontSize]
            });
          }
        }
      }
    }, componentsInput),
    variants: deepmerge({
      plain: createVariant("plain", variantInput),
      plainHover: createVariant("plainHover", variantInput),
      plainActive: createVariant("plainActive", variantInput),
      plainDisabled: createVariant("plainDisabled", variantInput),
      outlined: createVariant("outlined", variantInput),
      outlinedHover: createVariant("outlinedHover", variantInput),
      outlinedActive: createVariant("outlinedActive", variantInput),
      outlinedDisabled: createVariant("outlinedDisabled", variantInput),
      soft: createVariant("soft", variantInput),
      softHover: createVariant("softHover", variantInput),
      softActive: createVariant("softActive", variantInput),
      softDisabled: createVariant("softDisabled", variantInput),
      solid: createVariant("solid", variantInput),
      solidHover: createVariant("solidHover", variantInput),
      solidActive: createVariant("solidActive", variantInput),
      solidDisabled: createVariant("solidDisabled", variantInput),
      plainOverrides: createTextOverrides(variantInput),
      outlinedOverrides: createTextOverrides(variantInput),
      softOverrides: createTextOverrides(variantInput),
      solidOverrides: createContainedOverrides(variantInput)
    }, variantsInput),
    cssVarPrefix,
    getCssVar,
    spacing: createSpacing(spacing)
  });
  function attachColorChannels(palette) {
    Object.keys(palette).forEach((key) => {
      const channelMapping = {
        main: "500",
        light: "100",
        dark: "900"
      };
      if (!palette[key].mainChannel && palette[key][channelMapping.main]) {
        palette[key].mainChannel = colorChannel(palette[key][channelMapping.main]);
      }
      if (!palette[key].lightChannel && palette[key][channelMapping.light]) {
        palette[key].lightChannel = colorChannel(palette[key][channelMapping.light]);
      }
      if (!palette[key].darkChannel && palette[key][channelMapping.dark]) {
        palette[key].darkChannel = colorChannel(palette[key][channelMapping.dark]);
      }
    });
  }
  Object.entries(theme.colorSchemes).forEach(([, colorSystem]) => {
    attachColorChannels(colorSystem.palette);
  });
  return theme;
}

// node_modules/@mui/joy/styles/CssVarsProvider.js
var shouldSkipGeneratingVar = (keys) => !!keys[0].match(/(typography|variants|focus|breakpoints)/);
var {
  CssVarsProvider,
  useColorScheme,
  getInitColorSchemeScript
} = createCssVarsProvider({
  theme: extendTheme(),
  attribute: "data-joy-color-scheme",
  modeStorageKey: "joy-mode",
  colorSchemeStorageKey: "joy-color-scheme",
  defaultColorScheme: {
    light: "light",
    dark: "dark"
  },
  shouldSkipGeneratingVar
});

// node_modules/@mui/joy/styles/styled.js
init_esm2();

// node_modules/@mui/joy/styles/defaultTheme.js
init_extends();
init_objectWithoutPropertiesLoose();
init_esm();
var _excluded3 = ["colorSchemes", "fontFamily", "fontSize", "fontWeight", "letterSpacing", "lineHeight", "radius", "shadow", "palette"];
var _excluded22 = ["mode", "colorScheme"];
var getThemeWithVars = (themeInput) => {
  const _extendTheme = extendTheme(themeInput), {
    colorSchemes,
    fontFamily: fontFamily2,
    fontSize: fontSize2,
    fontWeight: fontWeight2,
    letterSpacing: letterSpacing2,
    lineHeight: lineHeight2,
    radius,
    shadow,
    palette: paletteInput
  } = _extendTheme, restTheme = _objectWithoutPropertiesLoose(_extendTheme, _excluded3);
  const colorSchemePalette = deepmerge(colorSchemes[(paletteInput == null ? void 0 : paletteInput.colorScheme) || "light"].palette, paletteInput);
  const _ref = colorSchemePalette, {
    mode = "light",
    colorScheme = "light"
  } = _ref, palette = _objectWithoutPropertiesLoose(_ref, _excluded22);
  return _extends({
    fontFamily: fontFamily2,
    fontSize: fontSize2,
    fontWeight: fontWeight2,
    letterSpacing: letterSpacing2,
    lineHeight: lineHeight2,
    radius,
    shadow
  }, restTheme, {
    colorSchemes: _extends({}, colorSchemes, {
      [colorScheme]: palette
    }),
    palette: _extends({}, palette, {
      mode,
      colorScheme
    }),
    vars: {
      fontFamily: fontFamily2,
      fontSize: fontSize2,
      fontWeight: fontWeight2,
      letterSpacing: letterSpacing2,
      lineHeight: lineHeight2,
      radius,
      shadow,
      palette
    }
  });
};
var defaultTheme = getThemeWithVars();
var defaultTheme_default = defaultTheme;

// node_modules/@mui/joy/styles/styleFunctionSx.js
init_esm2();
var borderRadius = style_default({
  prop: "borderRadius",
  themeKey: "radius"
});
var borders = compose_default(border, borderTop, borderRight, borderBottom, borderLeft, borderColor, borderTopColor, borderRightColor, borderBottomColor, borderLeftColor, borderRadius);
var boxShadow = style_default({
  prop: "boxShadow",
  themeKey: "shadow"
});
var fontFamily = style_default({
  prop: "fontFamily",
  themeKey: "fontFamily"
});
var fontSize = style_default({
  prop: "fontSize",
  themeKey: "fontSize"
});
var fontWeight = style_default({
  prop: "fontWeight",
  themeKey: "fontWeight"
});
var letterSpacing = style_default({
  prop: "letterSpacing",
  themeKey: "letterSpacing"
});
var lineHeight = style_default({
  prop: "lineHeight",
  themeKey: "lineHeight"
});
var typography = compose_default(typographyVariant, fontFamily, fontSize, fontWeight, letterSpacing, lineHeight);
var styleFunctionMapping = {
  borders,
  display: display_default,
  flexbox: flexbox_default,
  grid: cssGrid_default,
  positions: positions_default,
  palette: palette_default,
  boxShadow,
  sizing: sizing_default,
  spacing: spacing_default,
  typography
};
var styleFunctionSx = unstable_createStyleFunctionSx(styleFunctionMapping);
styleFunctionSx.filterProps = ["sx"];
var sx = (styles2) => {
  return ({
    theme
  }) => styleFunctionSx({
    sx: styles2,
    theme
  });
};
var styleFunctionSx_default = styleFunctionSx;

// node_modules/@mui/joy/styles/styled.js
var styled = createStyled({
  defaultTheme: defaultTheme_default,
  styleFunctionSx: styleFunctionSx_default
});
var styled_default = styled;

// node_modules/@mui/joy/styles/ThemeProvider.js
var React = __toESM(require_react());
init_esm2();
var import_jsx_runtime = __toESM(require_jsx_runtime());
var useTheme = () => {
  return useTheme_default(defaultTheme_default);
};
function ThemeProvider({
  children,
  theme: themeInput
}) {
  return (0, import_jsx_runtime.jsx)(ThemeProvider_default, {
    theme: themeInput ? getThemeWithVars(themeInput) : defaultTheme_default,
    children
  });
}

// node_modules/@mui/joy/styles/useThemeProps.js
init_extends();
init_esm2();
function useThemeProps2({
  props,
  name
}) {
  return useThemeProps({
    props,
    name,
    defaultTheme: _extends({}, defaultTheme_default, {
      components: {}
    })
  });
}

// node_modules/@mui/joy/styles/StyledEngineProvider.js
init_esm2();

// node_modules/@mui/joy/AspectRatio/AspectRatio.js
init_extends();
init_objectWithoutPropertiesLoose();
var React46 = __toESM(require_react());
var import_prop_types26 = __toESM(require_prop_types());

// node_modules/@mui/joy/node_modules/@mui/base/utils/appendOwnerState.js
init_extends();

// node_modules/@mui/joy/node_modules/@mui/base/utils/isHostComponent.js
function isHostComponent(element) {
  return typeof element === "string";
}
var isHostComponent_default = isHostComponent;

// node_modules/@mui/joy/node_modules/@mui/base/utils/appendOwnerState.js
function appendOwnerState(elementType, otherProps = {}, ownerState) {
  if (isHostComponent_default(elementType)) {
    return otherProps;
  }
  return _extends({}, otherProps, {
    ownerState: _extends({}, otherProps.ownerState, ownerState)
  });
}

// node_modules/@mui/joy/node_modules/@mui/base/utils/areArraysEqual.js
function areArraysEqual(array1, array2, itemComparer = (a, b) => a === b) {
  return array1.length === array2.length && array1.every((value, index) => itemComparer(value, array2[index]));
}

// node_modules/@mui/joy/node_modules/@mui/base/utils/extractEventHandlers.js
function extractEventHandlers(object, excludeKeys = []) {
  if (object === void 0) {
    return {};
  }
  const result = {};
  Object.keys(object).filter((prop) => prop.match(/^on[A-Z]/) && typeof object[prop] === "function" && !excludeKeys.includes(prop)).forEach((prop) => {
    result[prop] = object[prop];
  });
  return result;
}

// node_modules/@mui/joy/node_modules/@mui/base/utils/resolveComponentProps.js
function resolveComponentProps(componentProps, ownerState) {
  if (typeof componentProps === "function") {
    return componentProps(ownerState);
  }
  return componentProps;
}

// node_modules/@mui/joy/node_modules/@mui/base/utils/useSlotProps.js
init_extends();
init_objectWithoutPropertiesLoose();
init_esm();

// node_modules/@mui/joy/node_modules/@mui/base/utils/mergeSlotProps.js
init_extends();
init_clsx_m();

// node_modules/@mui/joy/node_modules/@mui/base/utils/omitEventHandlers.js
function omitEventHandlers(object) {
  if (object === void 0) {
    return {};
  }
  const result = {};
  Object.keys(object).filter((prop) => !(prop.match(/^on[A-Z]/) && typeof object[prop] === "function")).forEach((prop) => {
    result[prop] = object[prop];
  });
  return result;
}

// node_modules/@mui/joy/node_modules/@mui/base/utils/mergeSlotProps.js
function mergeSlotProps(parameters) {
  const {
    getSlotProps,
    additionalProps,
    externalSlotProps,
    externalForwardedProps,
    className
  } = parameters;
  if (!getSlotProps) {
    const joinedClasses2 = clsx_m_default(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className);
    const mergedStyle2 = _extends({}, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);
    const props2 = _extends({}, additionalProps, externalForwardedProps, externalSlotProps);
    if (joinedClasses2.length > 0) {
      props2.className = joinedClasses2;
    }
    if (Object.keys(mergedStyle2).length > 0) {
      props2.style = mergedStyle2;
    }
    return {
      props: props2,
      internalRef: void 0
    };
  }
  const eventHandlers = extractEventHandlers(_extends({}, externalForwardedProps, externalSlotProps));
  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);
  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);
  const internalSlotProps = getSlotProps(eventHandlers);
  const joinedClasses = clsx_m_default(internalSlotProps == null ? void 0 : internalSlotProps.className, additionalProps == null ? void 0 : additionalProps.className, className, externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className);
  const mergedStyle = _extends({}, internalSlotProps == null ? void 0 : internalSlotProps.style, additionalProps == null ? void 0 : additionalProps.style, externalForwardedProps == null ? void 0 : externalForwardedProps.style, externalSlotProps == null ? void 0 : externalSlotProps.style);
  const props = _extends({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers);
  if (joinedClasses.length > 0) {
    props.className = joinedClasses;
  }
  if (Object.keys(mergedStyle).length > 0) {
    props.style = mergedStyle;
  }
  return {
    props,
    internalRef: internalSlotProps.ref
  };
}

// node_modules/@mui/joy/node_modules/@mui/base/utils/useSlotProps.js
var _excluded4 = ["elementType", "externalSlotProps", "ownerState"];
function useSlotProps(parameters) {
  var _parameters$additiona;
  const {
    elementType,
    externalSlotProps,
    ownerState
  } = parameters, rest = _objectWithoutPropertiesLoose(parameters, _excluded4);
  const resolvedComponentsProps = resolveComponentProps(externalSlotProps, ownerState);
  const {
    props: mergedProps,
    internalRef
  } = mergeSlotProps(_extends({}, rest, {
    externalSlotProps: resolvedComponentsProps
  }));
  const ref = useForkRef(internalRef, useForkRef(resolvedComponentsProps == null ? void 0 : resolvedComponentsProps.ref, (_parameters$additiona = parameters.additionalProps) == null ? void 0 : _parameters$additiona.ref));
  const props = appendOwnerState(elementType, _extends({}, mergedProps, {
    ref
  }), ownerState);
  return props;
}

// node_modules/@mui/joy/node_modules/@mui/base/AutocompleteUnstyled/useAutocomplete.js
init_extends();
var React2 = __toESM(require_react());
init_esm();
function stripDiacritics(string) {
  return typeof string.normalize !== "undefined" ? string.normalize("NFD").replace(/[\u0300-\u036f]/g, "") : string;
}
function createFilterOptions(config = {}) {
  const {
    ignoreAccents = true,
    ignoreCase = true,
    limit,
    matchFrom = "any",
    stringify,
    trim = false
  } = config;
  return (options, {
    inputValue,
    getOptionLabel
  }) => {
    let input = trim ? inputValue.trim() : inputValue;
    if (ignoreCase) {
      input = input.toLowerCase();
    }
    if (ignoreAccents) {
      input = stripDiacritics(input);
    }
    const filteredOptions = options.filter((option) => {
      let candidate = (stringify || getOptionLabel)(option);
      if (ignoreCase) {
        candidate = candidate.toLowerCase();
      }
      if (ignoreAccents) {
        candidate = stripDiacritics(candidate);
      }
      return matchFrom === "start" ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;
    });
    return typeof limit === "number" ? filteredOptions.slice(0, limit) : filteredOptions;
  };
}
var defaultFilterOptions = createFilterOptions();

// node_modules/@mui/joy/node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React3 = __toESM(require_react());
var import_prop_types = __toESM(require_prop_types());

// node_modules/@mui/joy/node_modules/@mui/base/composeClasses/index.js
init_esm();

// node_modules/@mui/joy/node_modules/@mui/base/BadgeUnstyled/useBadge.js
init_esm();
function useBadge(parameters) {
  const {
    badgeContent: badgeContentProp,
    invisible: invisibleProp = false,
    max: maxProp = 99,
    showZero = false
  } = parameters;
  const prevProps = usePreviousProps_default({
    badgeContent: badgeContentProp,
    max: maxProp
  });
  let invisible = invisibleProp;
  if (invisibleProp === false && badgeContentProp === 0 && !showZero) {
    invisible = true;
  }
  const {
    badgeContent,
    max = maxProp
  } = invisible ? prevProps : parameters;
  const displayValue = badgeContent && Number(badgeContent) > max ? `${max}+` : badgeContent;
  return {
    badgeContent,
    invisible,
    max,
    displayValue
  };
}

// node_modules/@mui/joy/node_modules/@mui/base/generateUtilityClasses/index.js
init_esm();

// node_modules/@mui/joy/node_modules/@mui/base/generateUtilityClass/index.js
init_esm();

// node_modules/@mui/joy/node_modules/@mui/base/BadgeUnstyled/badgeUnstyledClasses.js
function getBadgeUnstyledUtilityClass(slot) {
  return generateUtilityClass("BaseBadge", slot);
}
var badgeUnstyledClasses = generateUtilityClasses("BaseBadge", ["root", "badge", "invisible"]);

// node_modules/@mui/joy/node_modules/@mui/base/BadgeUnstyled/BadgeUnstyled.js
var import_jsx_runtime2 = __toESM(require_jsx_runtime());
var import_jsx_runtime3 = __toESM(require_jsx_runtime());
var _excluded5 = ["badgeContent", "component", "children", "components", "componentsProps", "invisible", "max", "showZero"];
var useUtilityClasses = (ownerState) => {
  const {
    invisible
  } = ownerState;
  const slots = {
    root: ["root"],
    badge: ["badge", invisible && "invisible"]
  };
  return composeClasses(slots, getBadgeUnstyledUtilityClass, void 0);
};
var BadgeUnstyled = React3.forwardRef(function BadgeUnstyled2(props, ref) {
  const {
    component,
    children,
    components = {},
    componentsProps = {},
    max: maxProp = 99,
    showZero = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded5);
  const {
    badgeContent,
    max,
    displayValue,
    invisible
  } = useBadge(_extends({}, props, {
    max: maxProp
  }));
  const ownerState = _extends({}, props, {
    badgeContent,
    invisible,
    max,
    showZero
  });
  const classes = useUtilityClasses(ownerState);
  const Root = component || components.Root || "span";
  const rootProps = useSlotProps({
    elementType: Root,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref
    },
    ownerState,
    className: classes.root
  });
  const Badge3 = components.Badge || "span";
  const badgeProps = useSlotProps({
    elementType: Badge3,
    externalSlotProps: componentsProps.badge,
    ownerState,
    className: classes.badge
  });
  return (0, import_jsx_runtime3.jsxs)(Root, _extends({}, rootProps, {
    children: [children, (0, import_jsx_runtime2.jsx)(Badge3, _extends({}, badgeProps, {
      children: displayValue
    }))]
  }));
});
true ? BadgeUnstyled.propTypes = {
  badgeContent: import_prop_types.default.node,
  children: import_prop_types.default.node,
  component: import_prop_types.default.elementType,
  components: import_prop_types.default.shape({
    Badge: import_prop_types.default.elementType,
    Root: import_prop_types.default.elementType
  }),
  componentsProps: import_prop_types.default.shape({
    badge: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object]),
    root: import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object])
  }),
  invisible: import_prop_types.default.bool,
  max: import_prop_types.default.number,
  showZero: import_prop_types.default.bool
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/ButtonUnstyled/ButtonUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React5 = __toESM(require_react());
var import_prop_types2 = __toESM(require_prop_types());

// node_modules/@mui/joy/node_modules/@mui/base/ButtonUnstyled/buttonUnstyledClasses.js
function getButtonUnstyledUtilityClass(slot) {
  return generateUtilityClass("ButtonUnstyled", slot);
}
var buttonUnstyledClasses = generateUtilityClasses("ButtonUnstyled", ["root", "active", "disabled", "focusVisible"]);

// node_modules/@mui/joy/node_modules/@mui/base/ButtonUnstyled/useButton.js
init_extends();
var React4 = __toESM(require_react());
init_esm();
function useButton(parameters) {
  const {
    disabled = false,
    focusableWhenDisabled,
    href,
    ref: externalRef,
    tabIndex,
    to,
    type
  } = parameters;
  const buttonRef = React4.useRef();
  const [active, setActive] = React4.useState(false);
  const {
    isFocusVisibleRef,
    onFocus: handleFocusVisible,
    onBlur: handleBlurVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible();
  const [focusVisible, setFocusVisible] = React4.useState(false);
  if (disabled && !focusableWhenDisabled && focusVisible) {
    setFocusVisible(false);
  }
  React4.useEffect(() => {
    isFocusVisibleRef.current = focusVisible;
  }, [focusVisible, isFocusVisibleRef]);
  const [hostElementName, setHostElementName] = React4.useState("");
  const createHandleMouseLeave = (otherHandlers) => (event) => {
    var _otherHandlers$onMous;
    if (focusVisible) {
      event.preventDefault();
    }
    (_otherHandlers$onMous = otherHandlers.onMouseLeave) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);
  };
  const createHandleBlur = (otherHandlers) => (event) => {
    var _otherHandlers$onBlur;
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }
    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);
  };
  const createHandleFocus = (otherHandlers) => (event) => {
    var _otherHandlers$onFocu2;
    if (!buttonRef.current) {
      buttonRef.current = event.currentTarget;
    }
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      var _otherHandlers$onFocu;
      setFocusVisible(true);
      (_otherHandlers$onFocu = otherHandlers.onFocusVisible) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);
    }
    (_otherHandlers$onFocu2 = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu2.call(otherHandlers, event);
  };
  const isNativeButton = () => {
    const button = buttonRef.current;
    return hostElementName === "BUTTON" || hostElementName === "INPUT" && ["button", "submit", "reset"].includes(button == null ? void 0 : button.type) || hostElementName === "A" && (button == null ? void 0 : button.href);
  };
  const createHandleClick = (otherHandlers) => (event) => {
    if (!disabled) {
      var _otherHandlers$onClic;
      (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);
    }
  };
  const createHandleMouseDown = (otherHandlers) => (event) => {
    var _otherHandlers$onMous2;
    if (event.target === event.currentTarget && !disabled) {
      setActive(true);
    }
    (_otherHandlers$onMous2 = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous2.call(otherHandlers, event);
  };
  const createHandleMouseUp = (otherHandlers) => (event) => {
    var _otherHandlers$onMous3;
    if (event.target === event.currentTarget) {
      setActive(false);
    }
    (_otherHandlers$onMous3 = otherHandlers.onMouseUp) == null ? void 0 : _otherHandlers$onMous3.call(otherHandlers, event);
  };
  const createHandleKeyDown = (otherHandlers) => (event) => {
    var _otherHandlers$onKeyD;
    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);
    if (event.defaultPrevented) {
      return;
    }
    if (event.target === event.currentTarget && !isNativeButton() && event.key === " ") {
      event.preventDefault();
    }
    if (event.target === event.currentTarget && event.key === " " && !disabled) {
      setActive(true);
    }
    if (event.target === event.currentTarget && !isNativeButton() && event.key === "Enter" && !disabled) {
      var _otherHandlers$onClic2;
      (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);
      event.preventDefault();
    }
  };
  const createHandleKeyUp = (otherHandlers) => (event) => {
    var _otherHandlers$onKeyU;
    if (event.target === event.currentTarget) {
      setActive(false);
    }
    (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);
    if (event.target === event.currentTarget && !isNativeButton() && !disabled && event.key === " " && !event.defaultPrevented) {
      var _otherHandlers$onClic3;
      (_otherHandlers$onClic3 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic3.call(otherHandlers, event);
    }
  };
  const updateHostElementName = React4.useCallback((instance) => {
    var _instance$tagName;
    setHostElementName((_instance$tagName = instance == null ? void 0 : instance.tagName) != null ? _instance$tagName : "");
  }, []);
  const handleRef = useForkRef(updateHostElementName, useForkRef(externalRef, useForkRef(focusVisibleRef, buttonRef)));
  const buttonProps = {};
  if (hostElementName === "BUTTON") {
    buttonProps.type = type != null ? type : "button";
    if (focusableWhenDisabled) {
      buttonProps["aria-disabled"] = disabled;
    } else {
      buttonProps.disabled = disabled;
    }
  } else if (hostElementName !== "") {
    if (!href && !to) {
      buttonProps.role = "button";
      buttonProps.tabIndex = tabIndex != null ? tabIndex : 0;
    }
    if (disabled) {
      buttonProps["aria-disabled"] = disabled;
      buttonProps.tabIndex = focusableWhenDisabled ? tabIndex != null ? tabIndex : 0 : -1;
    }
  }
  const getRootProps = (otherHandlers = {}) => {
    const propsEventHandlers = extractEventHandlers(parameters);
    const externalEventHandlers = _extends({}, propsEventHandlers, otherHandlers);
    delete externalEventHandlers.onFocusVisible;
    return _extends({
      type
    }, externalEventHandlers, buttonProps, {
      onBlur: createHandleBlur(externalEventHandlers),
      onClick: createHandleClick(externalEventHandlers),
      onFocus: createHandleFocus(externalEventHandlers),
      onKeyDown: createHandleKeyDown(externalEventHandlers),
      onKeyUp: createHandleKeyUp(externalEventHandlers),
      onMouseDown: createHandleMouseDown(externalEventHandlers),
      onMouseLeave: createHandleMouseLeave(externalEventHandlers),
      onMouseUp: createHandleMouseUp(externalEventHandlers),
      ref: handleRef
    });
  };
  return {
    getRootProps,
    focusVisible,
    setFocusVisible,
    disabled,
    active
  };
}

// node_modules/@mui/joy/node_modules/@mui/base/ButtonUnstyled/ButtonUnstyled.js
var import_jsx_runtime4 = __toESM(require_jsx_runtime());
var _excluded6 = ["action", "children", "component", "components", "componentsProps", "disabled", "focusableWhenDisabled", "onBlur", "onClick", "onFocus", "onFocusVisible", "onKeyDown", "onKeyUp", "onMouseLeave"];
var useUtilityClasses2 = (ownerState) => {
  const {
    active,
    disabled,
    focusVisible
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", active && "active"]
  };
  return composeClasses(slots, getButtonUnstyledUtilityClass, {});
};
var ButtonUnstyled = React5.forwardRef(function ButtonUnstyled2(props, forwardedRef) {
  var _ref;
  const {
    action,
    children,
    component,
    components = {},
    componentsProps = {},
    focusableWhenDisabled = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded6);
  const buttonRef = React5.useRef();
  const {
    active,
    focusVisible,
    setFocusVisible,
    getRootProps
  } = useButton(_extends({}, props, {
    focusableWhenDisabled
  }));
  React5.useImperativeHandle(action, () => ({
    focusVisible: () => {
      setFocusVisible(true);
      buttonRef.current.focus();
    }
  }), [setFocusVisible]);
  const ownerState = _extends({}, props, {
    active,
    focusableWhenDisabled,
    focusVisible
  });
  const classes = useUtilityClasses2(ownerState);
  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : "button";
  const rootProps = useSlotProps({
    elementType: Root,
    getSlotProps: getRootProps,
    externalForwardedProps: other,
    externalSlotProps: componentsProps.root,
    additionalProps: {
      ref: forwardedRef
    },
    ownerState,
    className: classes.root
  });
  return (0, import_jsx_runtime4.jsx)(Root, _extends({}, rootProps, {
    children
  }));
});
true ? ButtonUnstyled.propTypes = {
  action: import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.shape({
    current: import_prop_types2.default.shape({
      focusVisible: import_prop_types2.default.func.isRequired
    })
  })]),
  children: import_prop_types2.default.node,
  component: import_prop_types2.default.elementType,
  components: import_prop_types2.default.shape({
    Root: import_prop_types2.default.elementType
  }),
  componentsProps: import_prop_types2.default.shape({
    root: import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.object])
  }),
  disabled: import_prop_types2.default.bool,
  focusableWhenDisabled: import_prop_types2.default.bool,
  onBlur: import_prop_types2.default.func,
  onClick: import_prop_types2.default.func,
  onFocus: import_prop_types2.default.func,
  onFocusVisible: import_prop_types2.default.func,
  onKeyDown: import_prop_types2.default.func,
  onKeyUp: import_prop_types2.default.func,
  onMouseLeave: import_prop_types2.default.func
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js
var React6 = __toESM(require_react());
var import_prop_types3 = __toESM(require_prop_types());
init_esm();
var import_jsx_runtime5 = __toESM(require_jsx_runtime());
function mapEventPropToEvent(eventProp) {
  return eventProp.substring(2).toLowerCase();
}
function clickedRootScrollbar(event, doc) {
  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;
}
function ClickAwayListener(props) {
  const {
    children,
    disableReactTree = false,
    mouseEvent = "onClick",
    onClickAway,
    touchEvent = "onTouchEnd"
  } = props;
  const movedRef = React6.useRef(false);
  const nodeRef = React6.useRef(null);
  const activatedRef = React6.useRef(false);
  const syntheticEventRef = React6.useRef(false);
  React6.useEffect(() => {
    setTimeout(() => {
      activatedRef.current = true;
    }, 0);
    return () => {
      activatedRef.current = false;
    };
  }, []);
  const handleRef = useForkRef(
    children.ref,
    nodeRef
  );
  const handleClickAway = useEventCallback((event) => {
    const insideReactTree = syntheticEventRef.current;
    syntheticEventRef.current = false;
    const doc = ownerDocument(nodeRef.current);
    if (!activatedRef.current || !nodeRef.current || "clientX" in event && clickedRootScrollbar(event, doc)) {
      return;
    }
    if (movedRef.current) {
      movedRef.current = false;
      return;
    }
    let insideDOM;
    if (event.composedPath) {
      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;
    } else {
      insideDOM = !doc.documentElement.contains(
        event.target
      ) || nodeRef.current.contains(
        event.target
      );
    }
    if (!insideDOM && (disableReactTree || !insideReactTree)) {
      onClickAway(event);
    }
  });
  const createHandleSynthetic = (handlerName) => (event) => {
    syntheticEventRef.current = true;
    const childrenPropsHandler = children.props[handlerName];
    if (childrenPropsHandler) {
      childrenPropsHandler(event);
    }
  };
  const childrenProps = {
    ref: handleRef
  };
  if (touchEvent !== false) {
    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);
  }
  React6.useEffect(() => {
    if (touchEvent !== false) {
      const mappedTouchEvent = mapEventPropToEvent(touchEvent);
      const doc = ownerDocument(nodeRef.current);
      const handleTouchMove = () => {
        movedRef.current = true;
      };
      doc.addEventListener(mappedTouchEvent, handleClickAway);
      doc.addEventListener("touchmove", handleTouchMove);
      return () => {
        doc.removeEventListener(mappedTouchEvent, handleClickAway);
        doc.removeEventListener("touchmove", handleTouchMove);
      };
    }
    return void 0;
  }, [handleClickAway, touchEvent]);
  if (mouseEvent !== false) {
    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);
  }
  React6.useEffect(() => {
    if (mouseEvent !== false) {
      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);
      const doc = ownerDocument(nodeRef.current);
      doc.addEventListener(mappedMouseEvent, handleClickAway);
      return () => {
        doc.removeEventListener(mappedMouseEvent, handleClickAway);
      };
    }
    return void 0;
  }, [handleClickAway, mouseEvent]);
  return (0, import_jsx_runtime5.jsx)(React6.Fragment, {
    children: React6.cloneElement(children, childrenProps)
  });
}
true ? ClickAwayListener.propTypes = {
  children: elementAcceptingRef_default.isRequired,
  disableReactTree: import_prop_types3.default.bool,
  mouseEvent: import_prop_types3.default.oneOf(["onClick", "onMouseDown", "onMouseUp", "onPointerDown", "onPointerUp", false]),
  onClickAway: import_prop_types3.default.func.isRequired,
  touchEvent: import_prop_types3.default.oneOf(["onTouchEnd", "onTouchStart", false])
} : void 0;
if (true) {
  ClickAwayListener["propTypes"] = exactProp(ClickAwayListener.propTypes);
}

// node_modules/@mui/joy/node_modules/@mui/base/FocusTrap/FocusTrap.js
var React7 = __toESM(require_react());
var import_prop_types4 = __toESM(require_prop_types());
init_esm();
var import_jsx_runtime6 = __toESM(require_jsx_runtime());
var import_jsx_runtime7 = __toESM(require_jsx_runtime());
var candidatesSelector = ["input", "select", "textarea", "a[href]", "button", "[tabindex]", "audio[controls]", "video[controls]", '[contenteditable]:not([contenteditable="false"])'].join(",");
function getTabIndex(node) {
  const tabindexAttr = parseInt(node.getAttribute("tabindex"), 10);
  if (!Number.isNaN(tabindexAttr)) {
    return tabindexAttr;
  }
  if (node.contentEditable === "true" || (node.nodeName === "AUDIO" || node.nodeName === "VIDEO" || node.nodeName === "DETAILS") && node.getAttribute("tabindex") === null) {
    return 0;
  }
  return node.tabIndex;
}
function isNonTabbableRadio(node) {
  if (node.tagName !== "INPUT" || node.type !== "radio") {
    return false;
  }
  if (!node.name) {
    return false;
  }
  const getRadio = (selector) => node.ownerDocument.querySelector(`input[type="radio"]${selector}`);
  let roving = getRadio(`[name="${node.name}"]:checked`);
  if (!roving) {
    roving = getRadio(`[name="${node.name}"]`);
  }
  return roving !== node;
}
function isNodeMatchingSelectorFocusable(node) {
  if (node.disabled || node.tagName === "INPUT" && node.type === "hidden" || isNonTabbableRadio(node)) {
    return false;
  }
  return true;
}
function defaultGetTabbable(root) {
  const regularTabNodes = [];
  const orderedTabNodes = [];
  Array.from(root.querySelectorAll(candidatesSelector)).forEach((node, i) => {
    const nodeTabIndex = getTabIndex(node);
    if (nodeTabIndex === -1 || !isNodeMatchingSelectorFocusable(node)) {
      return;
    }
    if (nodeTabIndex === 0) {
      regularTabNodes.push(node);
    } else {
      orderedTabNodes.push({
        documentOrder: i,
        tabIndex: nodeTabIndex,
        node
      });
    }
  });
  return orderedTabNodes.sort((a, b) => a.tabIndex === b.tabIndex ? a.documentOrder - b.documentOrder : a.tabIndex - b.tabIndex).map((a) => a.node).concat(regularTabNodes);
}
function defaultIsEnabled() {
  return true;
}
function FocusTrap(props) {
  const {
    children,
    disableAutoFocus = false,
    disableEnforceFocus = false,
    disableRestoreFocus = false,
    getTabbable = defaultGetTabbable,
    isEnabled = defaultIsEnabled,
    open
  } = props;
  const ignoreNextEnforceFocus = React7.useRef();
  const sentinelStart = React7.useRef(null);
  const sentinelEnd = React7.useRef(null);
  const nodeToRestore = React7.useRef(null);
  const reactFocusEventTarget = React7.useRef(null);
  const activated = React7.useRef(false);
  const rootRef = React7.useRef(null);
  const handleRef = useForkRef(children.ref, rootRef);
  const lastKeydown = React7.useRef(null);
  React7.useEffect(() => {
    if (!open || !rootRef.current) {
      return;
    }
    activated.current = !disableAutoFocus;
  }, [disableAutoFocus, open]);
  React7.useEffect(() => {
    if (!open || !rootRef.current) {
      return;
    }
    const doc = ownerDocument(rootRef.current);
    if (!rootRef.current.contains(doc.activeElement)) {
      if (!rootRef.current.hasAttribute("tabIndex")) {
        if (true) {
          console.error(["MUI: The modal content node does not accept focus.", 'For the benefit of assistive technologies, the tabIndex of the node is being set to "-1".'].join("\n"));
        }
        rootRef.current.setAttribute("tabIndex", -1);
      }
      if (activated.current) {
        rootRef.current.focus();
      }
    }
    return () => {
      if (!disableRestoreFocus) {
        if (nodeToRestore.current && nodeToRestore.current.focus) {
          ignoreNextEnforceFocus.current = true;
          nodeToRestore.current.focus();
        }
        nodeToRestore.current = null;
      }
    };
  }, [open]);
  React7.useEffect(() => {
    if (!open || !rootRef.current) {
      return;
    }
    const doc = ownerDocument(rootRef.current);
    const contain = (nativeEvent) => {
      const {
        current: rootElement
      } = rootRef;
      if (rootElement === null) {
        return;
      }
      if (!doc.hasFocus() || disableEnforceFocus || !isEnabled() || ignoreNextEnforceFocus.current) {
        ignoreNextEnforceFocus.current = false;
        return;
      }
      if (!rootElement.contains(doc.activeElement)) {
        if (nativeEvent && reactFocusEventTarget.current !== nativeEvent.target || doc.activeElement !== reactFocusEventTarget.current) {
          reactFocusEventTarget.current = null;
        } else if (reactFocusEventTarget.current !== null) {
          return;
        }
        if (!activated.current) {
          return;
        }
        let tabbable = [];
        if (doc.activeElement === sentinelStart.current || doc.activeElement === sentinelEnd.current) {
          tabbable = getTabbable(rootRef.current);
        }
        if (tabbable.length > 0) {
          var _lastKeydown$current, _lastKeydown$current2;
          const isShiftTab = Boolean(((_lastKeydown$current = lastKeydown.current) == null ? void 0 : _lastKeydown$current.shiftKey) && ((_lastKeydown$current2 = lastKeydown.current) == null ? void 0 : _lastKeydown$current2.key) === "Tab");
          const focusNext = tabbable[0];
          const focusPrevious = tabbable[tabbable.length - 1];
          if (isShiftTab) {
            focusPrevious.focus();
          } else {
            focusNext.focus();
          }
        } else {
          rootElement.focus();
        }
      }
    };
    const loopFocus = (nativeEvent) => {
      lastKeydown.current = nativeEvent;
      if (disableEnforceFocus || !isEnabled() || nativeEvent.key !== "Tab") {
        return;
      }
      if (doc.activeElement === rootRef.current && nativeEvent.shiftKey) {
        ignoreNextEnforceFocus.current = true;
        sentinelEnd.current.focus();
      }
    };
    doc.addEventListener("focusin", contain);
    doc.addEventListener("keydown", loopFocus, true);
    const interval = setInterval(() => {
      if (doc.activeElement.tagName === "BODY") {
        contain();
      }
    }, 50);
    return () => {
      clearInterval(interval);
      doc.removeEventListener("focusin", contain);
      doc.removeEventListener("keydown", loopFocus, true);
    };
  }, [disableAutoFocus, disableEnforceFocus, disableRestoreFocus, isEnabled, open, getTabbable]);
  const onFocus = (event) => {
    if (nodeToRestore.current === null) {
      nodeToRestore.current = event.relatedTarget;
    }
    activated.current = true;
    reactFocusEventTarget.current = event.target;
    const childrenPropsHandler = children.props.onFocus;
    if (childrenPropsHandler) {
      childrenPropsHandler(event);
    }
  };
  const handleFocusSentinel = (event) => {
    if (nodeToRestore.current === null) {
      nodeToRestore.current = event.relatedTarget;
    }
    activated.current = true;
  };
  return (0, import_jsx_runtime7.jsxs)(React7.Fragment, {
    children: [(0, import_jsx_runtime6.jsx)("div", {
      tabIndex: open ? 0 : -1,
      onFocus: handleFocusSentinel,
      ref: sentinelStart,
      "data-testid": "sentinelStart"
    }), React7.cloneElement(children, {
      ref: handleRef,
      onFocus
    }), (0, import_jsx_runtime6.jsx)("div", {
      tabIndex: open ? 0 : -1,
      onFocus: handleFocusSentinel,
      ref: sentinelEnd,
      "data-testid": "sentinelEnd"
    })]
  });
}
true ? FocusTrap.propTypes = {
  children: elementAcceptingRef_default,
  disableAutoFocus: import_prop_types4.default.bool,
  disableEnforceFocus: import_prop_types4.default.bool,
  disableRestoreFocus: import_prop_types4.default.bool,
  getTabbable: import_prop_types4.default.func,
  isEnabled: import_prop_types4.default.func,
  open: import_prop_types4.default.bool.isRequired
} : void 0;
if (true) {
  FocusTrap["propTypes"] = exactProp(FocusTrap.propTypes);
}
var FocusTrap_default = FocusTrap;

// node_modules/@mui/joy/node_modules/@mui/base/FormControlUnstyled/FormControlUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React9 = __toESM(require_react());
var import_prop_types5 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/node_modules/@mui/base/FormControlUnstyled/FormControlUnstyledContext.js
var React8 = __toESM(require_react());
var FormControlUnstyledContext = React8.createContext(void 0);
if (true) {
  FormControlUnstyledContext.displayName = "FormControlUnstyledContext";
}
var FormControlUnstyledContext_default = FormControlUnstyledContext;

// node_modules/@mui/joy/node_modules/@mui/base/FormControlUnstyled/formControlUnstyledClasses.js
function getFormControlUnstyledUtilityClass(slot) {
  return generateUtilityClass("BaseFormControl", slot);
}
var formControlUnstyledClasses = generateUtilityClasses("BaseFormControl", ["root", "disabled", "error", "filled", "focused", "required"]);

// node_modules/@mui/joy/node_modules/@mui/base/FormControlUnstyled/FormControlUnstyled.js
var import_jsx_runtime8 = __toESM(require_jsx_runtime());
var _excluded7 = ["defaultValue", "children", "component", "components", "componentsProps", "disabled", "error", "onChange", "required", "value"];
function hasValue(value) {
  return value != null && !(Array.isArray(value) && value.length === 0) && value !== "";
}
function useUtilityClasses3(ownerState) {
  const {
    disabled,
    error,
    filled,
    focused,
    required
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focused && "focused", error && "error", filled && "filled", required && "required"]
  };
  return composeClasses(slots, getFormControlUnstyledUtilityClass, {});
}
var FormControlUnstyled = React9.forwardRef(function FormControlUnstyled2(props, ref) {
  var _ref;
  const {
    defaultValue,
    children,
    component,
    components = {},
    componentsProps = {},
    disabled = false,
    error = false,
    onChange,
    required = false,
    value: incomingValue
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded7);
  const [value, setValue] = useControlled({
    controlled: incomingValue,
    default: defaultValue,
    name: "FormControl",
    state: "value"
  });
  const filled = hasValue(value);
  const [focused, setFocused] = React9.useState(false);
  if (disabled && focused) {
    setFocused(false);
  }
  const ownerState = _extends({}, props, {
    disabled,
    error,
    filled,
    focused,
    required
  });
  const handleChange = (event) => {
    setValue(event.target.value);
    onChange == null ? void 0 : onChange(event);
  };
  const childContext = {
    disabled,
    error,
    filled,
    focused,
    onBlur: () => {
      setFocused(false);
    },
    onChange: handleChange,
    onFocus: () => {
      setFocused(true);
    },
    required,
    value: value != null ? value : ""
  };
  const classes = useUtilityClasses3(ownerState);
  const renderChildren = () => {
    if (typeof children === "function") {
      return children(childContext);
    }
    return children;
  };
  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : "div";
  const rootProps = useSlotProps({
    elementType: Root,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref,
      children: renderChildren()
    },
    ownerState,
    className: classes.root
  });
  return (0, import_jsx_runtime8.jsx)(FormControlUnstyledContext_default.Provider, {
    value: childContext,
    children: (0, import_jsx_runtime8.jsx)(Root, _extends({}, rootProps))
  });
});
true ? FormControlUnstyled.propTypes = {
  children: import_prop_types5.default.oneOfType([import_prop_types5.default.node, import_prop_types5.default.func]),
  component: import_prop_types5.default.elementType,
  components: import_prop_types5.default.shape({
    Root: import_prop_types5.default.elementType
  }),
  componentsProps: import_prop_types5.default.shape({
    root: import_prop_types5.default.oneOfType([import_prop_types5.default.func, import_prop_types5.default.object])
  }),
  defaultValue: import_prop_types5.default.any,
  disabled: import_prop_types5.default.bool,
  error: import_prop_types5.default.bool,
  onChange: import_prop_types5.default.func,
  required: import_prop_types5.default.bool,
  value: import_prop_types5.default.any
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/FormControlUnstyled/useFormControlUnstyledContext.js
var React10 = __toESM(require_react());
function useFormControlUnstyledContext() {
  return React10.useContext(FormControlUnstyledContext_default);
}

// node_modules/@mui/joy/node_modules/@mui/base/InputUnstyled/InputUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React12 = __toESM(require_react());
var import_prop_types6 = __toESM(require_prop_types());

// node_modules/@mui/joy/node_modules/@mui/base/InputUnstyled/inputUnstyledClasses.js
var inputBaseClasses = generateUtilityClasses("MuiInput", ["root", "formControl", "focused", "disabled", "error", "multiline", "input", "inputMultiline", "inputTypeSearch", "adornedStart", "adornedEnd"]);
var inputUnstyledClasses_default = inputBaseClasses;

// node_modules/@mui/joy/node_modules/@mui/base/InputUnstyled/useInput.js
init_extends();
init_esm();
var React11 = __toESM(require_react());
init_esm();
function useInput(parameters) {
  const {
    defaultValue: defaultValueProp,
    disabled: disabledProp = false,
    error: errorProp = false,
    onBlur,
    onChange,
    onFocus,
    required: requiredProp = false,
    value: valueProp
  } = parameters;
  const formControlContext = useFormControlUnstyledContext();
  let defaultValue;
  let disabled;
  let error;
  let required;
  let value;
  if (formControlContext) {
    var _formControlContext$d, _formControlContext$e, _formControlContext$r;
    defaultValue = void 0;
    disabled = (_formControlContext$d = formControlContext.disabled) != null ? _formControlContext$d : false;
    error = (_formControlContext$e = formControlContext.error) != null ? _formControlContext$e : false;
    required = (_formControlContext$r = formControlContext.required) != null ? _formControlContext$r : false;
    value = formControlContext.value;
    if (true) {
      const definedLocalProps = ["defaultValue", "disabled", "error", "required", "value"].filter((prop) => parameters[prop] !== void 0);
      if (definedLocalProps.length > 0) {
        console.warn(["MUI: You have set props on an input that is inside a FormControlUnstyled.", "Set these props on a FormControlUnstyled instead. Otherwise they will be ignored.", `Ignored props: ${definedLocalProps.join(", ")}`].join("\n"));
      }
    }
  } else {
    defaultValue = defaultValueProp;
    disabled = disabledProp;
    error = errorProp;
    required = requiredProp;
    value = valueProp;
  }
  const {
    current: isControlled
  } = React11.useRef(value != null);
  const handleInputRefWarning = React11.useCallback((instance) => {
    if (true) {
      if (instance && instance.nodeName !== "INPUT" && !instance.focus) {
        console.error(["MUI: You have provided a `components.Input` to the input component", "that does not correctly handle the `ref` prop.", "Make sure the `ref` prop is called with a HTMLInputElement."].join("\n"));
      }
    }
  }, []);
  const inputRef = React11.useRef(null);
  const handleInputRef = useForkRef(inputRef, handleInputRefWarning);
  const [focused, setFocused] = React11.useState(false);
  React11.useEffect(() => {
    if (!formControlContext && disabled && focused) {
      setFocused(false);
      onBlur == null ? void 0 : onBlur();
    }
  }, [formControlContext, disabled, focused, onBlur]);
  const handleFocus = (otherHandlers) => (event) => {
    var _otherHandlers$onFocu;
    if (formControlContext != null && formControlContext.disabled) {
      event.stopPropagation();
      return;
    }
    (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);
    if (formControlContext && formControlContext.onFocus) {
      var _formControlContext$o;
      formControlContext == null ? void 0 : (_formControlContext$o = formControlContext.onFocus) == null ? void 0 : _formControlContext$o.call(formControlContext);
    } else {
      setFocused(true);
    }
  };
  const handleBlur2 = (otherHandlers) => (event) => {
    var _otherHandlers$onBlur;
    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);
    if (formControlContext && formControlContext.onBlur) {
      formControlContext.onBlur();
    } else {
      setFocused(false);
    }
  };
  const handleChange = (otherHandlers) => (event, ...args) => {
    var _formControlContext$o2, _otherHandlers$onChan;
    if (!isControlled) {
      const element = event.target || inputRef.current;
      if (element == null) {
        throw new Error(true ? `MUI: Expected valid input target. Did you use a custom \`components.Input\` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.` : formatMuiErrorMessage(17));
      }
    }
    formControlContext == null ? void 0 : (_formControlContext$o2 = formControlContext.onChange) == null ? void 0 : _formControlContext$o2.call(formControlContext, event);
    (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event, ...args);
  };
  const handleClick = (otherHandlers) => (event) => {
    var _otherHandlers$onClic;
    if (inputRef.current && event.currentTarget === event.target) {
      inputRef.current.focus();
    }
    (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);
  };
  const getRootProps = (externalProps = {}) => {
    const propsEventHandlers = extractEventHandlers(parameters, ["onBlur", "onChange", "onFocus"]);
    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));
    return _extends({}, externalProps, externalEventHandlers, {
      onClick: handleClick(externalEventHandlers)
    });
  };
  const getInputProps = (externalProps = {}) => {
    const propsEventHandlers = {
      onBlur,
      onChange,
      onFocus
    };
    const externalEventHandlers = _extends({}, propsEventHandlers, extractEventHandlers(externalProps));
    const mergedEventHandlers = _extends({}, externalProps, externalEventHandlers, {
      onBlur: handleBlur2(externalEventHandlers),
      onChange: handleChange(externalEventHandlers),
      onFocus: handleFocus(externalEventHandlers)
    });
    return _extends({}, mergedEventHandlers, {
      "aria-invalid": error || void 0,
      defaultValue,
      ref: handleInputRef,
      value,
      required,
      disabled
    });
  };
  return {
    disabled,
    error,
    focused,
    formControlContext,
    getInputProps,
    getRootProps,
    required,
    value
  };
}

// node_modules/@mui/joy/node_modules/@mui/base/InputUnstyled/InputUnstyled.js
var import_jsx_runtime9 = __toESM(require_jsx_runtime());
var import_jsx_runtime10 = __toESM(require_jsx_runtime());
var _excluded8 = ["aria-describedby", "aria-label", "aria-labelledby", "autoComplete", "autoFocus", "className", "component", "components", "componentsProps", "defaultValue", "disabled", "endAdornment", "error", "id", "multiline", "name", "onClick", "onChange", "onKeyDown", "onKeyUp", "onFocus", "onBlur", "placeholder", "readOnly", "required", "startAdornment", "value", "type", "rows", "minRows", "maxRows"];
var InputUnstyled = React12.forwardRef(function InputUnstyled2(props, forwardedRef) {
  var _ref, _components$Textarea, _components$Input;
  const {
    "aria-describedby": ariaDescribedby,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    autoComplete,
    autoFocus,
    className,
    component,
    components = {},
    componentsProps = {},
    defaultValue,
    disabled,
    endAdornment,
    error,
    id,
    multiline = false,
    name,
    onClick,
    onChange,
    onKeyDown,
    onKeyUp,
    onFocus,
    onBlur,
    placeholder,
    readOnly,
    required,
    startAdornment,
    value,
    type: typeProp,
    rows,
    minRows,
    maxRows
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded8);
  const {
    getRootProps,
    getInputProps,
    focused,
    formControlContext,
    error: errorState,
    disabled: disabledState
  } = useInput({
    disabled,
    defaultValue,
    error,
    onBlur,
    onClick,
    onChange,
    onFocus,
    required,
    value
  });
  const type = !multiline ? typeProp != null ? typeProp : "text" : void 0;
  const ownerState = _extends({}, props, {
    disabled: disabledState,
    error: errorState,
    focused,
    formControlContext,
    multiline,
    type
  });
  const rootStateClasses = {
    [inputUnstyledClasses_default.disabled]: disabledState,
    [inputUnstyledClasses_default.error]: errorState,
    [inputUnstyledClasses_default.focused]: focused,
    [inputUnstyledClasses_default.formControl]: Boolean(formControlContext),
    [inputUnstyledClasses_default.multiline]: multiline,
    [inputUnstyledClasses_default.adornedStart]: Boolean(startAdornment),
    [inputUnstyledClasses_default.adornedEnd]: Boolean(endAdornment)
  };
  const inputStateClasses = {
    [inputUnstyledClasses_default.disabled]: disabledState,
    [inputUnstyledClasses_default.multiline]: multiline
  };
  const propsToForward = {
    "aria-describedby": ariaDescribedby,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    autoComplete,
    autoFocus,
    id,
    onKeyDown,
    onKeyUp,
    name,
    placeholder,
    readOnly,
    type
  };
  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : "div";
  const rootProps = useSlotProps({
    elementType: Root,
    getSlotProps: getRootProps,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: forwardedRef
    },
    ownerState,
    className: [inputUnstyledClasses_default.root, rootStateClasses, className]
  });
  const Input3 = multiline ? (_components$Textarea = components.Textarea) != null ? _components$Textarea : "textarea" : (_components$Input = components.Input) != null ? _components$Input : "input";
  const inputProps = useSlotProps({
    elementType: Input3,
    getSlotProps: (otherHandlers) => getInputProps(_extends({}, otherHandlers, propsToForward)),
    externalSlotProps: componentsProps.input,
    additionalProps: _extends({
      rows: multiline ? rows : void 0
    }, multiline && !isHostComponent_default(Input3) && {
      minRows: rows || minRows,
      maxRows: rows || maxRows
    }),
    ownerState,
    className: [inputUnstyledClasses_default.input, inputStateClasses]
  });
  if (true) {
    if (multiline) {
      if (rows) {
        if (minRows || maxRows) {
          console.warn("MUI: You can not use the `minRows` or `maxRows` props when the input `rows` prop is set.");
        }
      }
    }
  }
  return (0, import_jsx_runtime10.jsxs)(Root, _extends({}, rootProps, {
    children: [startAdornment, (0, import_jsx_runtime9.jsx)(Input3, _extends({}, inputProps)), endAdornment]
  }));
});
true ? InputUnstyled.propTypes = {
  "aria-describedby": import_prop_types6.default.string,
  "aria-label": import_prop_types6.default.string,
  "aria-labelledby": import_prop_types6.default.string,
  autoComplete: import_prop_types6.default.string,
  autoFocus: import_prop_types6.default.bool,
  children: import_prop_types6.default.node,
  className: import_prop_types6.default.string,
  component: import_prop_types6.default.elementType,
  components: import_prop_types6.default.shape({
    Input: import_prop_types6.default.elementType,
    Root: import_prop_types6.default.elementType,
    Textarea: import_prop_types6.default.elementType
  }),
  componentsProps: import_prop_types6.default.shape({
    input: import_prop_types6.default.oneOfType([import_prop_types6.default.func, import_prop_types6.default.object]),
    root: import_prop_types6.default.oneOfType([import_prop_types6.default.func, import_prop_types6.default.object])
  }),
  defaultValue: import_prop_types6.default.any,
  disabled: import_prop_types6.default.bool,
  endAdornment: import_prop_types6.default.node,
  error: import_prop_types6.default.bool,
  id: import_prop_types6.default.string,
  maxRows: import_prop_types6.default.number,
  minRows: import_prop_types6.default.number,
  multiline: import_prop_types6.default.bool,
  name: import_prop_types6.default.string,
  onBlur: import_prop_types6.default.func,
  onChange: import_prop_types6.default.func,
  onClick: import_prop_types6.default.func,
  onFocus: import_prop_types6.default.func,
  onKeyDown: import_prop_types6.default.func,
  onKeyUp: import_prop_types6.default.func,
  placeholder: import_prop_types6.default.string,
  readOnly: import_prop_types6.default.bool,
  required: import_prop_types6.default.bool,
  rows: import_prop_types6.default.number,
  startAdornment: import_prop_types6.default.node,
  type: import_prop_types6.default.oneOf(["button", "checkbox", "color", "date", "datetime-local", "email", "file", "hidden", "image", "month", "number", "password", "radio", "range", "reset", "search", "submit", "tel", "text", "time", "url", "week"]),
  value: import_prop_types6.default.any
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/ListboxUnstyled/useListbox.js
init_extends();
var React14 = __toESM(require_react());
init_esm();

// node_modules/@mui/joy/node_modules/@mui/base/ListboxUnstyled/useListbox.types.js
var ActionTypes;
(function(ActionTypes2) {
  ActionTypes2["blur"] = "blur";
  ActionTypes2["focus"] = "focus";
  ActionTypes2["keyDown"] = "keyDown";
  ActionTypes2["optionClick"] = "optionClick";
  ActionTypes2["optionHover"] = "optionHover";
  ActionTypes2["optionsChange"] = "optionsChange";
  ActionTypes2["setValue"] = "setValue";
  ActionTypes2["setHighlight"] = "setHighlight";
  ActionTypes2["textNavigation"] = "textNagivation";
})(ActionTypes || (ActionTypes = {}));

// node_modules/@mui/joy/node_modules/@mui/base/ListboxUnstyled/defaultListboxReducer.js
init_extends();
var pageSize = 5;
function findValidOptionToHighlight(index, lookupDirection, options, focusDisabled, isOptionDisabled, wrapAround) {
  if (options.length === 0 || options.every((o, i) => isOptionDisabled(o, i))) {
    return -1;
  }
  let nextFocus = index;
  for (; ; ) {
    if (!wrapAround && lookupDirection === "next" && nextFocus === options.length || !wrapAround && lookupDirection === "previous" && nextFocus === -1) {
      return -1;
    }
    const nextFocusDisabled = focusDisabled ? false : isOptionDisabled(options[nextFocus], nextFocus);
    if (nextFocusDisabled) {
      nextFocus += lookupDirection === "next" ? 1 : -1;
      if (wrapAround) {
        nextFocus = (nextFocus + options.length) % options.length;
      }
    } else {
      return nextFocus;
    }
  }
}
function getNewHighlightedOption(options, previouslyHighlightedOption, diff, lookupDirection, highlightDisabled, isOptionDisabled, wrapAround, optionComparer) {
  var _options$nextIndex;
  const maxIndex = options.length - 1;
  const defaultHighlightedIndex = -1;
  let nextIndexCandidate;
  const previouslyHighlightedIndex = previouslyHighlightedOption == null ? -1 : options.findIndex((option) => optionComparer(option, previouslyHighlightedOption));
  if (diff === "reset") {
    var _options$defaultHighl;
    return defaultHighlightedIndex === -1 ? null : (_options$defaultHighl = options[defaultHighlightedIndex]) != null ? _options$defaultHighl : null;
  }
  if (diff === "start") {
    nextIndexCandidate = 0;
  } else if (diff === "end") {
    nextIndexCandidate = maxIndex;
  } else {
    const newIndex = previouslyHighlightedIndex + diff;
    if (newIndex < 0) {
      if (!wrapAround && previouslyHighlightedIndex !== -1 || Math.abs(diff) > 1) {
        nextIndexCandidate = 0;
      } else {
        nextIndexCandidate = maxIndex;
      }
    } else if (newIndex > maxIndex) {
      if (!wrapAround || Math.abs(diff) > 1) {
        nextIndexCandidate = maxIndex;
      } else {
        nextIndexCandidate = 0;
      }
    } else {
      nextIndexCandidate = newIndex;
    }
  }
  const nextIndex = findValidOptionToHighlight(nextIndexCandidate, lookupDirection, options, highlightDisabled, isOptionDisabled, wrapAround);
  return (_options$nextIndex = options[nextIndex]) != null ? _options$nextIndex : null;
}
function handleOptionSelection(option, state, props) {
  const {
    multiple,
    optionComparer = (o, v) => o === v,
    isOptionDisabled = () => false
  } = props;
  const {
    selectedValue
  } = state;
  const optionIndex = props.options.findIndex((o) => props.optionComparer(option, o));
  if (isOptionDisabled(option, optionIndex)) {
    return state;
  }
  if (multiple) {
    var _ref, _ref2;
    const selectedValues = (_ref = selectedValue) != null ? _ref : [];
    const newSelectedValues = selectedValues.some((sv) => optionComparer(sv, option)) ? selectedValue.filter((v) => !optionComparer(v, option)) : [...(_ref2 = selectedValue) != null ? _ref2 : [], option];
    return {
      selectedValue: newSelectedValues,
      highlightedValue: option
    };
  }
  if (selectedValue != null && optionComparer(option, selectedValue)) {
    return state;
  }
  return {
    selectedValue: option,
    highlightedValue: option
  };
}
function handleKeyDown(event, state, props) {
  const {
    options,
    isOptionDisabled,
    disableListWrap,
    disabledItemsFocusable,
    optionComparer
  } = props;
  const moveHighlight = (diff, direction, wrapAround) => {
    return getNewHighlightedOption(options, state.highlightedValue, diff, direction, disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, wrapAround, optionComparer);
  };
  switch (event.key) {
    case "Home":
      return _extends({}, state, {
        highlightedValue: moveHighlight("start", "next", false)
      });
    case "End":
      return _extends({}, state, {
        highlightedValue: moveHighlight("end", "previous", false)
      });
    case "PageUp":
      return _extends({}, state, {
        highlightedValue: moveHighlight(-pageSize, "previous", false)
      });
    case "PageDown":
      return _extends({}, state, {
        highlightedValue: moveHighlight(pageSize, "next", false)
      });
    case "ArrowUp":
      return _extends({}, state, {
        highlightedValue: moveHighlight(-1, "previous", !(disableListWrap != null ? disableListWrap : false))
      });
    case "ArrowDown":
      return _extends({}, state, {
        highlightedValue: moveHighlight(1, "next", !(disableListWrap != null ? disableListWrap : false))
      });
    case "Enter":
    case " ":
      if (state.highlightedValue === null) {
        return state;
      }
      return handleOptionSelection(state.highlightedValue, state, props);
    default:
      break;
  }
  return state;
}
function handleBlur(state) {
  return _extends({}, state, {
    highlightedValue: null
  });
}
var textCriteriaMatches = (nextFocus, searchString, stringifyOption) => {
  var _stringifyOption;
  const text = (_stringifyOption = stringifyOption(nextFocus)) == null ? void 0 : _stringifyOption.trim().toLowerCase();
  if (!text || text.length === 0) {
    return false;
  }
  return text.indexOf(searchString) === 0;
};
function handleTextNavigation(state, searchString, props) {
  const {
    options,
    isOptionDisabled,
    disableListWrap,
    disabledItemsFocusable,
    optionComparer,
    optionStringifier
  } = props;
  const moveHighlight = (previouslyHighlightedOption) => {
    return getNewHighlightedOption(options, previouslyHighlightedOption, 1, "next", disabledItemsFocusable != null ? disabledItemsFocusable : false, isOptionDisabled != null ? isOptionDisabled : () => false, !(disableListWrap != null ? disableListWrap : false), optionComparer);
  };
  const startWithCurrentOption = searchString.length > 1;
  let nextOption = startWithCurrentOption ? state.highlightedValue : moveHighlight(state.highlightedValue);
  for (let index = 0; index < options.length; index += 1) {
    if (!nextOption || !startWithCurrentOption && state.highlightedValue === nextOption) {
      return state;
    }
    if (textCriteriaMatches(nextOption, searchString, optionStringifier) && (!isOptionDisabled(nextOption, options.indexOf(nextOption)) || disabledItemsFocusable)) {
      return _extends({}, state, {
        highlightedValue: nextOption
      });
    }
    nextOption = moveHighlight(nextOption);
  }
  return state;
}
function handleOptionsChange(options, previousOptions, state, props) {
  var _options$find, _options$find2;
  const {
    multiple,
    optionComparer
  } = props;
  const newHighlightedOption = state.highlightedValue == null ? null : (_options$find = options.find((option) => optionComparer(option, state.highlightedValue))) != null ? _options$find : null;
  if (multiple) {
    var _ref3;
    const selectedValues = (_ref3 = state.selectedValue) != null ? _ref3 : [];
    const newSelectedValues = selectedValues.filter((selectedValue) => options.some((option) => optionComparer(option, selectedValue)));
    return {
      highlightedValue: newHighlightedOption,
      selectedValue: newSelectedValues
    };
  }
  const newSelectedValue = (_options$find2 = options.find((option) => optionComparer(option, state.selectedValue))) != null ? _options$find2 : null;
  return {
    highlightedValue: newHighlightedOption,
    selectedValue: newSelectedValue
  };
}
function defaultListboxReducer(state, action) {
  const {
    type
  } = action;
  switch (type) {
    case ActionTypes.keyDown:
      return handleKeyDown(action.event, state, action.props);
    case ActionTypes.optionClick:
      return handleOptionSelection(action.option, state, action.props);
    case ActionTypes.blur:
      return handleBlur(state);
    case ActionTypes.setValue:
      return _extends({}, state, {
        selectedValue: action.value
      });
    case ActionTypes.setHighlight:
      return _extends({}, state, {
        highlightedValue: action.highlight
      });
    case ActionTypes.textNavigation:
      return handleTextNavigation(state, action.searchString, action.props);
    case ActionTypes.optionsChange:
      return handleOptionsChange(action.options, action.previousOptions, state, action.props);
    default:
      return state;
  }
}

// node_modules/@mui/joy/node_modules/@mui/base/ListboxUnstyled/useControllableReducer.js
init_extends();
var React13 = __toESM(require_react());
function getControlledState(internalState, props) {
  if (props.value !== void 0) {
    return _extends({}, internalState, {
      selectedValue: props.value
    });
  }
  return internalState;
}
function areOptionsEqual(option1, option2, optionComparer) {
  if (option1 === option2) {
    return true;
  }
  if (option1 === null || option2 === null) {
    return false;
  }
  return optionComparer(option1, option2);
}
function useStateChangeDetection(nextState, internalPreviousState, propsRef, lastActionRef) {
  React13.useEffect(() => {
    if (!propsRef.current || lastActionRef.current === null) {
      return;
    }
    const previousState = getControlledState(internalPreviousState, propsRef.current);
    const {
      multiple,
      optionComparer
    } = propsRef.current;
    if (multiple) {
      var _previousState$select;
      const previousSelectedValues = (_previousState$select = previousState == null ? void 0 : previousState.selectedValue) != null ? _previousState$select : [];
      const nextSelectedValues = nextState.selectedValue;
      const onChange = propsRef.current.onChange;
      if (!areArraysEqual(nextSelectedValues, previousSelectedValues, optionComparer)) {
        onChange == null ? void 0 : onChange(lastActionRef.current.event, nextSelectedValues);
      }
    } else {
      const previousSelectedValue = previousState == null ? void 0 : previousState.selectedValue;
      const nextSelectedValue = nextState.selectedValue;
      const onChange = propsRef.current.onChange;
      if (!areOptionsEqual(nextSelectedValue, previousSelectedValue, optionComparer)) {
        onChange == null ? void 0 : onChange(lastActionRef.current.event, nextSelectedValue);
      }
    }
    if (!areOptionsEqual(internalPreviousState.highlightedValue, nextState.highlightedValue, propsRef.current.optionComparer)) {
      var _propsRef$current, _propsRef$current$onH;
      (_propsRef$current = propsRef.current) == null ? void 0 : (_propsRef$current$onH = _propsRef$current.onHighlightChange) == null ? void 0 : _propsRef$current$onH.call(_propsRef$current, lastActionRef.current.event, nextState.highlightedValue);
    }
    lastActionRef.current = null;
  }, [nextState.selectedValue, nextState.highlightedValue, internalPreviousState, propsRef, lastActionRef]);
}
function useControllableReducer(internalReducer, externalReducer, props) {
  var _ref;
  const {
    value,
    defaultValue
  } = props;
  const propsRef = React13.useRef(props);
  propsRef.current = props;
  const actionRef = React13.useRef(null);
  const initialSelectedValue = (_ref = value === void 0 ? defaultValue : value) != null ? _ref : props.multiple ? [] : null;
  const initalState = {
    highlightedValue: null,
    selectedValue: initialSelectedValue
  };
  const combinedReducer = React13.useCallback((state, action) => {
    actionRef.current = action;
    if (externalReducer) {
      return externalReducer(getControlledState(state, propsRef.current), action);
    }
    return internalReducer(getControlledState(state, propsRef.current), action);
  }, [externalReducer, internalReducer, propsRef]);
  const [nextState, dispatch] = React13.useReducer(combinedReducer, initalState);
  const previousState = React13.useRef(initalState);
  React13.useEffect(() => {
    previousState.current = nextState;
  }, [previousState, nextState]);
  useStateChangeDetection(nextState, previousState.current, propsRef, actionRef);
  return [getControlledState(nextState, propsRef.current), dispatch];
}

// node_modules/@mui/joy/node_modules/@mui/base/ListboxUnstyled/useListbox.js
var TEXT_NAVIGATION_RESET_TIMEOUT = 500;
var defaultOptionComparer = (optionA, optionB) => optionA === optionB;
var defaultIsOptionDisabled = () => false;
var defaultOptionStringifier = (option) => typeof option === "string" ? option : String(option);
function useListbox(props) {
  var _props$optionIdGenera, _options$highlightedI;
  const {
    disabledItemsFocusable = false,
    disableListWrap = false,
    focusManagement = "activeDescendant",
    id: idProp,
    isOptionDisabled = defaultIsOptionDisabled,
    listboxRef: externalListboxRef,
    multiple = false,
    optionComparer = defaultOptionComparer,
    optionStringifier = defaultOptionStringifier,
    options,
    stateReducer: externalReducer
  } = props;
  const id = useId(idProp);
  function defaultIdGenerator(_2, index) {
    return `${id}-option-${index}`;
  }
  const optionIdGenerator = (_props$optionIdGenera = props.optionIdGenerator) != null ? _props$optionIdGenera : defaultIdGenerator;
  const propsWithDefaults = _extends({}, props, {
    disabledItemsFocusable,
    disableListWrap,
    focusManagement,
    isOptionDisabled,
    multiple,
    optionComparer,
    optionStringifier
  });
  const listboxRef = React14.useRef(null);
  const handleRef = useForkRef(externalListboxRef, listboxRef);
  const textCriteriaRef = React14.useRef({
    searchString: "",
    lastTime: null
  });
  const [{
    highlightedValue,
    selectedValue
  }, dispatch] = useControllableReducer(defaultListboxReducer, externalReducer, propsWithDefaults);
  const highlightedIndex = React14.useMemo(() => {
    return highlightedValue == null ? -1 : options.findIndex((option) => optionComparer(option, highlightedValue));
  }, [highlightedValue, options, optionComparer]);
  const previousOptions = React14.useRef([]);
  React14.useEffect(() => {
    if (areArraysEqual(previousOptions.current, options, optionComparer)) {
      return;
    }
    dispatch({
      type: ActionTypes.optionsChange,
      event: null,
      options,
      previousOptions: previousOptions.current,
      props: propsWithDefaults
    });
    previousOptions.current = options;
  }, [options, optionComparer, dispatch]);
  const setSelectedValue = React14.useCallback((option) => {
    dispatch({
      type: ActionTypes.setValue,
      event: null,
      value: option
    });
  }, [dispatch]);
  const setHighlightedValue = React14.useCallback((option) => {
    dispatch({
      type: ActionTypes.setHighlight,
      event: null,
      highlight: option
    });
  }, [dispatch]);
  const createHandleOptionClick = (option, other) => (event) => {
    var _other$onClick;
    (_other$onClick = other.onClick) == null ? void 0 : _other$onClick.call(other, event);
    if (event.defaultPrevented) {
      return;
    }
    event.preventDefault();
    dispatch({
      type: ActionTypes.optionClick,
      option,
      event,
      props: propsWithDefaults
    });
  };
  const createHandleOptionPointerOver = (option, other) => (event) => {
    var _other$onMouseOver;
    (_other$onMouseOver = other.onMouseOver) == null ? void 0 : _other$onMouseOver.call(other, event);
    if (event.defaultPrevented) {
      return;
    }
    dispatch({
      type: ActionTypes.optionHover,
      option,
      event,
      props: propsWithDefaults
    });
  };
  const createHandleKeyDown = (other) => (event) => {
    var _other$onKeyDown;
    (_other$onKeyDown = other.onKeyDown) == null ? void 0 : _other$onKeyDown.call(other, event);
    if (event.defaultPrevented) {
      return;
    }
    const keysToPreventDefault = ["ArrowUp", "ArrowDown", "Home", "End", "PageUp", "PageDown"];
    if (focusManagement === "activeDescendant") {
      keysToPreventDefault.push(" ", "Enter");
    }
    if (keysToPreventDefault.includes(event.key)) {
      event.preventDefault();
    }
    dispatch({
      type: ActionTypes.keyDown,
      event,
      props: propsWithDefaults
    });
    if (event.key.length === 1 && event.key !== " ") {
      const textCriteria = textCriteriaRef.current;
      const lowerKey = event.key.toLowerCase();
      const currentTime = performance.now();
      if (textCriteria.searchString.length > 0 && textCriteria.lastTime && currentTime - textCriteria.lastTime > TEXT_NAVIGATION_RESET_TIMEOUT) {
        textCriteria.searchString = lowerKey;
      } else if (textCriteria.searchString.length !== 1 || lowerKey !== textCriteria.searchString) {
        textCriteria.searchString += lowerKey;
      }
      textCriteria.lastTime = currentTime;
      dispatch({
        type: ActionTypes.textNavigation,
        event,
        searchString: textCriteria.searchString,
        props: propsWithDefaults
      });
    }
  };
  const createHandleBlur = (other) => (event) => {
    var _other$onBlur, _listboxRef$current;
    (_other$onBlur = other.onBlur) == null ? void 0 : _other$onBlur.call(other, event);
    if (event.defaultPrevented) {
      return;
    }
    if ((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(document.activeElement)) {
      return;
    }
    dispatch({
      type: ActionTypes.blur,
      event,
      props: propsWithDefaults
    });
  };
  const getRootProps = (otherHandlers = {}) => {
    return _extends({}, otherHandlers, {
      "aria-activedescendant": focusManagement === "activeDescendant" && highlightedValue != null ? optionIdGenerator(highlightedValue, highlightedIndex) : void 0,
      id,
      onBlur: createHandleBlur(otherHandlers),
      onKeyDown: createHandleKeyDown(otherHandlers),
      role: "listbox",
      tabIndex: focusManagement === "DOM" ? -1 : 0,
      ref: handleRef
    });
  };
  const getOptionState = (option) => {
    let selected;
    const index = options.findIndex((opt) => optionComparer(opt, option));
    if (multiple) {
      var _ref;
      selected = ((_ref = selectedValue) != null ? _ref : []).some((value) => value != null && optionComparer(option, value));
    } else {
      selected = optionComparer(option, selectedValue);
    }
    const disabled = isOptionDisabled(option, index);
    return {
      selected,
      disabled,
      highlighted: highlightedIndex === index
    };
  };
  const getOptionTabIndex = (optionState) => {
    if (focusManagement === "activeDescendant") {
      return void 0;
    }
    if (!optionState.highlighted) {
      return -1;
    }
    if (optionState.disabled && !disabledItemsFocusable) {
      return -1;
    }
    return 0;
  };
  const getOptionProps = (option, otherHandlers = {}) => {
    const optionState = getOptionState(option);
    const index = options.findIndex((opt) => optionComparer(opt, option));
    return _extends({}, otherHandlers, {
      "aria-disabled": optionState.disabled || void 0,
      "aria-selected": optionState.selected,
      id: optionIdGenerator(option, index),
      onClick: createHandleOptionClick(option, otherHandlers),
      onPointerOver: createHandleOptionPointerOver(option, otherHandlers),
      role: "option",
      tabIndex: getOptionTabIndex(optionState)
    });
  };
  React14.useDebugValue({
    highlightedOption: options[highlightedIndex],
    selectedOption: selectedValue
  });
  return {
    getRootProps,
    getOptionProps,
    getOptionState,
    highlightedOption: (_options$highlightedI = options[highlightedIndex]) != null ? _options$highlightedI : null,
    selectedOption: selectedValue,
    setSelectedValue,
    setHighlightedValue
  };
}

// node_modules/@mui/joy/node_modules/@mui/base/MenuUnstyled/MenuUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React19 = __toESM(require_react());
var import_prop_types9 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/node_modules/@mui/base/MenuUnstyled/MenuUnstyledContext.js
var React15 = __toESM(require_react());
var MenuUnstyledContext = React15.createContext(null);
MenuUnstyledContext.displayName = "MenuUnstyledContext";
var MenuUnstyledContext_default = MenuUnstyledContext;

// node_modules/@mui/joy/node_modules/@mui/base/MenuUnstyled/menuUnstyledClasses.js
function getMenuUnstyledUtilityClass(slot) {
  return generateUtilityClass("MuiMenuUnstyled", slot);
}
var menuUnstyledClasses = generateUtilityClasses("MuiMenuUnstyled", ["root", "listbox", "expanded"]);

// node_modules/@mui/joy/node_modules/@mui/base/MenuUnstyled/useMenu.js
init_extends();
var React16 = __toESM(require_react());
init_esm();
function stateReducer(state, action) {
  if (action.type === ActionTypes.blur || action.type === ActionTypes.optionHover || action.type === ActionTypes.setValue) {
    return state;
  }
  const newState = defaultListboxReducer(state, action);
  if (action.type !== ActionTypes.setHighlight && newState.highlightedValue === null && action.props.options.length > 0) {
    return _extends({}, newState, {
      highlightedValue: action.props.options[0]
    });
  }
  return newState;
}
function useMenu(parameters = {}) {
  const {
    listboxRef: listboxRefProp,
    open = false,
    onClose,
    listboxId
  } = parameters;
  const [menuItems, setMenuItems] = React16.useState({});
  const listboxRef = React16.useRef(null);
  const handleRef = useForkRef(listboxRef, listboxRefProp);
  const registerItem = React16.useCallback((id, metadata) => {
    setMenuItems((previousState) => {
      const newState = _extends({}, previousState);
      newState[id] = metadata;
      return newState;
    });
  }, []);
  const unregisterItem = React16.useCallback((id) => {
    setMenuItems((previousState) => {
      const newState = _extends({}, previousState);
      delete newState[id];
      return newState;
    });
  }, []);
  const {
    getOptionState,
    getOptionProps,
    getRootProps,
    highlightedOption,
    setHighlightedValue: setListboxHighlight
  } = useListbox({
    options: Object.keys(menuItems),
    optionStringifier: (id) => {
      var _menuItems$id$ref$cur;
      return menuItems[id].label || ((_menuItems$id$ref$cur = menuItems[id].ref.current) == null ? void 0 : _menuItems$id$ref$cur.innerText);
    },
    isOptionDisabled: (id) => {
      var _menuItems$id;
      return (menuItems == null ? void 0 : (_menuItems$id = menuItems[id]) == null ? void 0 : _menuItems$id.disabled) || false;
    },
    listboxRef: handleRef,
    focusManagement: "DOM",
    id: listboxId,
    stateReducer,
    disabledItemsFocusable: true
  });
  const highlightFirstItem = React16.useCallback(() => {
    if (Object.keys(menuItems).length > 0) {
      setListboxHighlight(menuItems[Object.keys(menuItems)[0]].id);
    }
  }, [menuItems, setListboxHighlight]);
  const highlightLastItem = React16.useCallback(() => {
    if (Object.keys(menuItems).length > 0) {
      setListboxHighlight(menuItems[Object.keys(menuItems)[Object.keys(menuItems).length - 1]].id);
    }
  }, [menuItems, setListboxHighlight]);
  React16.useEffect(() => {
    if (!open) {
      highlightFirstItem();
    }
  }, [open, highlightFirstItem]);
  const createHandleKeyDown = (otherHandlers) => (e) => {
    var _otherHandlers$onKeyD;
    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, e);
    if (e.defaultPrevented) {
      return;
    }
    if (e.key === "Escape" && open) {
      onClose == null ? void 0 : onClose();
    }
  };
  const createHandleBlur = (otherHandlers) => (e) => {
    var _otherHandlers$onBlur, _listboxRef$current;
    (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, e);
    if (!((_listboxRef$current = listboxRef.current) != null && _listboxRef$current.contains(e.relatedTarget))) {
      onClose == null ? void 0 : onClose();
    }
  };
  React16.useEffect(() => {
    var _listboxRef$current2;
    if ((_listboxRef$current2 = listboxRef.current) != null && _listboxRef$current2.contains(document.activeElement) && highlightedOption !== null) {
      var _menuItems$highlighte, _menuItems$highlighte2;
      menuItems == null ? void 0 : (_menuItems$highlighte = menuItems[highlightedOption]) == null ? void 0 : (_menuItems$highlighte2 = _menuItems$highlighte.ref.current) == null ? void 0 : _menuItems$highlighte2.focus();
    }
  }, [highlightedOption, menuItems]);
  const getListboxProps = (otherHandlers = {}) => {
    const rootProps = getRootProps(_extends({}, otherHandlers, {
      onBlur: createHandleBlur(otherHandlers),
      onKeyDown: createHandleKeyDown(otherHandlers)
    }));
    return _extends({}, otherHandlers, rootProps, {
      role: "menu"
    });
  };
  const getItemState = (id) => {
    const {
      disabled,
      highlighted
    } = getOptionState(id);
    return {
      disabled,
      highlighted
    };
  };
  React16.useDebugValue({
    menuItems,
    highlightedOption
  });
  return {
    registerItem,
    unregisterItem,
    menuItems,
    getListboxProps,
    getItemState,
    getItemProps: getOptionProps,
    highlightedOption,
    highlightFirstItem,
    highlightLastItem
  };
}

// node_modules/@mui/joy/node_modules/@mui/base/PopperUnstyled/PopperUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React18 = __toESM(require_react());
init_esm();
init_lib();
var import_prop_types8 = __toESM(require_prop_types());

// node_modules/@mui/joy/node_modules/@mui/base/Portal/Portal.js
var React17 = __toESM(require_react());
var ReactDOM = __toESM(require_react_dom());
var import_prop_types7 = __toESM(require_prop_types());
init_esm();
var import_jsx_runtime11 = __toESM(require_jsx_runtime());
function getContainer(container) {
  return typeof container === "function" ? container() : container;
}
var Portal = React17.forwardRef(function Portal2(props, ref) {
  const {
    children,
    container,
    disablePortal = false
  } = props;
  const [mountNode, setMountNode] = React17.useState(null);
  const handleRef = useForkRef(React17.isValidElement(children) ? children.ref : null, ref);
  useEnhancedEffect_default(() => {
    if (!disablePortal) {
      setMountNode(getContainer(container) || document.body);
    }
  }, [container, disablePortal]);
  useEnhancedEffect_default(() => {
    if (mountNode && !disablePortal) {
      setRef(ref, mountNode);
      return () => {
        setRef(ref, null);
      };
    }
    return void 0;
  }, [ref, mountNode, disablePortal]);
  if (disablePortal) {
    if (React17.isValidElement(children)) {
      return React17.cloneElement(children, {
        ref: handleRef
      });
    }
    return children;
  }
  return (0, import_jsx_runtime11.jsx)(React17.Fragment, {
    children: mountNode ? ReactDOM.createPortal(children, mountNode) : mountNode
  });
});
true ? Portal.propTypes = {
  children: import_prop_types7.default.node,
  container: import_prop_types7.default.oneOfType([HTMLElementType, import_prop_types7.default.func]),
  disablePortal: import_prop_types7.default.bool
} : void 0;
if (true) {
  Portal["propTypes"] = exactProp(Portal.propTypes);
}
var Portal_default = Portal;

// node_modules/@mui/joy/node_modules/@mui/base/PopperUnstyled/popperUnstyledClasses.js
function getPopperUnstyledUtilityClass(slot) {
  return generateUtilityClass("MuiPopperUnstyled", slot);
}
var popperUnstyledClasses = generateUtilityClasses("MuiPopperUnstyled", ["root"]);

// node_modules/@mui/joy/node_modules/@mui/base/PopperUnstyled/PopperUnstyled.js
var import_jsx_runtime12 = __toESM(require_jsx_runtime());
var _excluded9 = ["anchorEl", "children", "component", "components", "componentsProps", "direction", "disablePortal", "modifiers", "open", "ownerState", "placement", "popperOptions", "popperRef", "TransitionProps"];
var _excluded23 = ["anchorEl", "children", "container", "direction", "disablePortal", "keepMounted", "modifiers", "open", "placement", "popperOptions", "popperRef", "style", "transition"];
function flipPlacement(placement, direction) {
  if (direction === "ltr") {
    return placement;
  }
  switch (placement) {
    case "bottom-end":
      return "bottom-start";
    case "bottom-start":
      return "bottom-end";
    case "top-end":
      return "top-start";
    case "top-start":
      return "top-end";
    default:
      return placement;
  }
}
function resolveAnchorEl(anchorEl) {
  return typeof anchorEl === "function" ? anchorEl() : anchorEl;
}
var useUtilityClasses4 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getPopperUnstyledUtilityClass, {});
};
var defaultPopperOptions = {};
var PopperTooltip = React18.forwardRef(function PopperTooltip2(props, ref) {
  var _ref;
  const {
    anchorEl,
    children,
    component,
    components = {},
    componentsProps = {},
    direction,
    disablePortal,
    modifiers,
    open,
    ownerState,
    placement: initialPlacement,
    popperOptions,
    popperRef: popperRefProp,
    TransitionProps
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded9);
  const tooltipRef = React18.useRef(null);
  const ownRef = useForkRef(tooltipRef, ref);
  const popperRef = React18.useRef(null);
  const handlePopperRef = useForkRef(popperRef, popperRefProp);
  const handlePopperRefRef = React18.useRef(handlePopperRef);
  useEnhancedEffect_default(() => {
    handlePopperRefRef.current = handlePopperRef;
  }, [handlePopperRef]);
  React18.useImperativeHandle(popperRefProp, () => popperRef.current, []);
  const rtlPlacement = flipPlacement(initialPlacement, direction);
  const [placement, setPlacement] = React18.useState(rtlPlacement);
  React18.useEffect(() => {
    if (popperRef.current) {
      popperRef.current.forceUpdate();
    }
  });
  useEnhancedEffect_default(() => {
    if (!anchorEl || !open) {
      return void 0;
    }
    const handlePopperUpdate = (data) => {
      setPlacement(data.placement);
    };
    const resolvedAnchorEl = resolveAnchorEl(anchorEl);
    if (true) {
      if (resolvedAnchorEl && resolvedAnchorEl.nodeType === 1) {
        const box = resolvedAnchorEl.getBoundingClientRect();
        if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
          console.warn(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join("\n"));
        }
      }
    }
    let popperModifiers = [{
      name: "preventOverflow",
      options: {
        altBoundary: disablePortal
      }
    }, {
      name: "flip",
      options: {
        altBoundary: disablePortal
      }
    }, {
      name: "onUpdate",
      enabled: true,
      phase: "afterWrite",
      fn: ({
        state
      }) => {
        handlePopperUpdate(state);
      }
    }];
    if (modifiers != null) {
      popperModifiers = popperModifiers.concat(modifiers);
    }
    if (popperOptions && popperOptions.modifiers != null) {
      popperModifiers = popperModifiers.concat(popperOptions.modifiers);
    }
    const popper = createPopper(resolveAnchorEl(anchorEl), tooltipRef.current, _extends({
      placement: rtlPlacement
    }, popperOptions, {
      modifiers: popperModifiers
    }));
    handlePopperRefRef.current(popper);
    return () => {
      popper.destroy();
      handlePopperRefRef.current(null);
    };
  }, [anchorEl, disablePortal, modifiers, open, popperOptions, rtlPlacement]);
  const childProps = {
    placement
  };
  if (TransitionProps !== null) {
    childProps.TransitionProps = TransitionProps;
  }
  const classes = useUtilityClasses4();
  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : "div";
  const rootProps = useSlotProps({
    elementType: Root,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      role: "tooltip",
      ref: ownRef
    },
    ownerState: _extends({}, props, ownerState),
    className: classes.root
  });
  return (0, import_jsx_runtime12.jsx)(Root, _extends({}, rootProps, {
    children: typeof children === "function" ? children(childProps) : children
  }));
});
var PopperUnstyled = React18.forwardRef(function PopperUnstyled2(props, ref) {
  const {
    anchorEl,
    children,
    container: containerProp,
    direction = "ltr",
    disablePortal = false,
    keepMounted = false,
    modifiers,
    open,
    placement = "bottom",
    popperOptions = defaultPopperOptions,
    popperRef,
    style,
    transition = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded23);
  const [exited, setExited] = React18.useState(true);
  const handleEnter = () => {
    setExited(false);
  };
  const handleExited = () => {
    setExited(true);
  };
  if (!keepMounted && !open && (!transition || exited)) {
    return null;
  }
  const container = containerProp || (anchorEl ? ownerDocument(resolveAnchorEl(anchorEl)).body : void 0);
  return (0, import_jsx_runtime12.jsx)(Portal_default, {
    disablePortal,
    container,
    children: (0, import_jsx_runtime12.jsx)(PopperTooltip, _extends({
      anchorEl,
      direction,
      disablePortal,
      modifiers,
      ref,
      open: transition ? !exited : open,
      placement,
      popperOptions,
      popperRef
    }, other, {
      style: _extends({
        position: "fixed",
        top: 0,
        left: 0,
        display: !open && keepMounted && (!transition || exited) ? "none" : null
      }, style),
      TransitionProps: transition ? {
        in: open,
        onEnter: handleEnter,
        onExited: handleExited
      } : null,
      children
    }))
  });
});
true ? PopperUnstyled.propTypes = {
  anchorEl: chainPropTypes(import_prop_types8.default.oneOfType([HTMLElementType, import_prop_types8.default.object, import_prop_types8.default.func]), (props) => {
    if (props.open) {
      const resolvedAnchorEl = resolveAnchorEl(props.anchorEl);
      if (resolvedAnchorEl && resolvedAnchorEl.nodeType === 1) {
        const box = resolvedAnchorEl.getBoundingClientRect();
        if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {
          return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "The anchor element should be part of the document layout.", "Make sure the element is present in the document or that it's not display none."].join("\n"));
        }
      } else if (!resolvedAnchorEl || typeof resolvedAnchorEl.getBoundingClientRect !== "function" || resolvedAnchorEl.contextElement != null && resolvedAnchorEl.contextElement.nodeType !== 1) {
        return new Error(["MUI: The `anchorEl` prop provided to the component is invalid.", "It should be an HTML element instance or a virtualElement ", "(https://popper.js.org/docs/v2/virtual-elements/)."].join("\n"));
      }
    }
    return null;
  }),
  children: import_prop_types8.default.oneOfType([import_prop_types8.default.node, import_prop_types8.default.func]),
  components: import_prop_types8.default.shape({
    Root: import_prop_types8.default.elementType
  }),
  componentsProps: import_prop_types8.default.shape({
    root: import_prop_types8.default.oneOfType([import_prop_types8.default.func, import_prop_types8.default.object])
  }),
  container: import_prop_types8.default.oneOfType([HTMLElementType, import_prop_types8.default.func]),
  direction: import_prop_types8.default.oneOf(["ltr", "rtl"]),
  disablePortal: import_prop_types8.default.bool,
  keepMounted: import_prop_types8.default.bool,
  modifiers: import_prop_types8.default.arrayOf(import_prop_types8.default.shape({
    data: import_prop_types8.default.object,
    effect: import_prop_types8.default.func,
    enabled: import_prop_types8.default.bool,
    fn: import_prop_types8.default.func,
    name: import_prop_types8.default.any,
    options: import_prop_types8.default.object,
    phase: import_prop_types8.default.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: import_prop_types8.default.arrayOf(import_prop_types8.default.string),
    requiresIfExists: import_prop_types8.default.arrayOf(import_prop_types8.default.string)
  })),
  open: import_prop_types8.default.bool.isRequired,
  placement: import_prop_types8.default.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
  popperOptions: import_prop_types8.default.shape({
    modifiers: import_prop_types8.default.array,
    onFirstUpdate: import_prop_types8.default.func,
    placement: import_prop_types8.default.oneOf(["auto-end", "auto-start", "auto", "bottom-end", "bottom-start", "bottom", "left-end", "left-start", "left", "right-end", "right-start", "right", "top-end", "top-start", "top"]),
    strategy: import_prop_types8.default.oneOf(["absolute", "fixed"])
  }),
  popperRef: refType_default,
  style: import_prop_types8.default.object,
  transition: import_prop_types8.default.bool
} : void 0;
var PopperUnstyled_default = PopperUnstyled;

// node_modules/@mui/joy/node_modules/@mui/base/MenuUnstyled/MenuUnstyled.js
var import_jsx_runtime13 = __toESM(require_jsx_runtime());
var _excluded10 = ["actions", "anchorEl", "children", "component", "components", "componentsProps", "keepMounted", "listboxId", "onClose", "open"];
function getUtilityClasses(ownerState) {
  const {
    open
  } = ownerState;
  const slots = {
    root: ["root", open && "expanded"],
    listbox: ["listbox", open && "expanded"]
  };
  return composeClasses(slots, getMenuUnstyledUtilityClass, {});
}
var MenuUnstyled = React19.forwardRef(function MenuUnstyled2(props, forwardedRef) {
  var _ref, _components$Listbox;
  const {
    actions,
    anchorEl,
    children,
    component,
    components = {},
    componentsProps = {},
    keepMounted = false,
    listboxId,
    onClose,
    open = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded10);
  const {
    registerItem,
    unregisterItem,
    getListboxProps,
    getItemProps,
    getItemState,
    highlightFirstItem,
    highlightLastItem
  } = useMenu({
    open,
    onClose,
    listboxId
  });
  React19.useImperativeHandle(actions, () => ({
    highlightFirstItem,
    highlightLastItem
  }), [highlightFirstItem, highlightLastItem]);
  const ownerState = _extends({}, props, {
    open
  });
  const classes = getUtilityClasses(ownerState);
  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : PopperUnstyled_default;
  const rootProps = useSlotProps({
    elementType: Root,
    externalForwardedProps: other,
    externalSlotProps: componentsProps.root,
    additionalProps: {
      anchorEl,
      open,
      keepMounted,
      role: void 0,
      ref: forwardedRef
    },
    className: classes.root,
    ownerState
  });
  const Listbox = (_components$Listbox = components.Listbox) != null ? _components$Listbox : "ul";
  const listboxProps = useSlotProps({
    elementType: Listbox,
    getSlotProps: getListboxProps,
    externalSlotProps: componentsProps.listbox,
    ownerState,
    className: classes.listbox
  });
  const contextValue = {
    registerItem,
    unregisterItem,
    getItemState,
    getItemProps,
    open
  };
  return (0, import_jsx_runtime13.jsx)(Root, _extends({}, rootProps, {
    children: (0, import_jsx_runtime13.jsx)(Listbox, _extends({}, listboxProps, {
      children: (0, import_jsx_runtime13.jsx)(MenuUnstyledContext_default.Provider, {
        value: contextValue,
        children
      })
    }))
  }));
});
true ? MenuUnstyled.propTypes = {
  actions: refType_default,
  anchorEl: import_prop_types9.default.oneOfType([HTMLElementType, import_prop_types9.default.object, import_prop_types9.default.func]),
  children: import_prop_types9.default.node,
  component: import_prop_types9.default.elementType,
  components: import_prop_types9.default.shape({
    Listbox: import_prop_types9.default.elementType,
    Root: import_prop_types9.default.elementType
  }),
  componentsProps: import_prop_types9.default.shape({
    listbox: import_prop_types9.default.oneOfType([import_prop_types9.default.func, import_prop_types9.default.object]),
    root: import_prop_types9.default.oneOfType([import_prop_types9.default.func, import_prop_types9.default.object])
  }),
  keepMounted: import_prop_types9.default.bool,
  listboxId: import_prop_types9.default.string,
  onClose: import_prop_types9.default.func,
  open: import_prop_types9.default.bool
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/MenuItemUnstyled/MenuItemUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React21 = __toESM(require_react());
var import_prop_types10 = __toESM(require_prop_types());

// node_modules/@mui/joy/node_modules/@mui/base/MenuItemUnstyled/menuItemUnstyledClasses.js
function getMenuItemUnstyledUtilityClass(slot) {
  return generateUtilityClass("MuiMenuItemUnstyled", slot);
}
var menuItemUnstyledClasses = generateUtilityClasses("MuiMenuItemUnstyled", ["root", "disabled", "focusVisible"]);

// node_modules/@mui/joy/node_modules/@mui/base/MenuItemUnstyled/useMenuItem.js
init_extends();
var React20 = __toESM(require_react());
init_esm();
function useMenuItem(props) {
  var _itemState$disabled;
  const {
    disabled = false,
    ref,
    label
  } = props;
  const id = useId();
  const menuContext = React20.useContext(MenuUnstyledContext_default);
  const itemRef = React20.useRef(null);
  const handleRef = useForkRef(itemRef, ref);
  if (menuContext === null) {
    throw new Error("MenuItemUnstyled must be used within a MenuUnstyled");
  }
  const {
    registerItem,
    unregisterItem,
    open
  } = menuContext;
  React20.useEffect(() => {
    if (id === void 0) {
      return void 0;
    }
    registerItem(id, {
      disabled,
      id,
      ref: itemRef,
      label
    });
    return () => unregisterItem(id);
  }, [id, registerItem, unregisterItem, disabled, ref, label]);
  const {
    getRootProps: getButtonProps,
    focusVisible
  } = useButton({
    disabled,
    focusableWhenDisabled: true,
    ref: handleRef
  });
  const [focusRequested, requestFocus] = React20.useState(false);
  const focusIfRequested = React20.useCallback(() => {
    if (focusRequested && itemRef.current != null) {
      itemRef.current.focus();
      requestFocus(false);
    }
  }, [focusRequested]);
  React20.useEffect(() => {
    focusIfRequested();
  });
  React20.useDebugValue({
    id,
    disabled,
    label
  });
  const itemState = menuContext.getItemState(id != null ? id : "");
  const {
    highlighted
  } = itemState != null ? itemState : {
    highlighted: false
  };
  React20.useEffect(() => {
    requestFocus(highlighted && open);
  }, [highlighted, open]);
  if (id === void 0) {
    return {
      getRootProps: (other) => _extends({}, other, getButtonProps(other), {
        role: "menuitem"
      }),
      disabled: false,
      focusVisible
    };
  }
  return {
    getRootProps: (other) => {
      const optionProps = menuContext.getItemProps(id, other);
      return _extends({}, other, getButtonProps(other), {
        tabIndex: optionProps.tabIndex,
        id: optionProps.id,
        role: "menuitem"
      });
    },
    disabled: (_itemState$disabled = itemState == null ? void 0 : itemState.disabled) != null ? _itemState$disabled : false,
    focusVisible
  };
}

// node_modules/@mui/joy/node_modules/@mui/base/MenuItemUnstyled/MenuItemUnstyled.js
var import_jsx_runtime14 = __toESM(require_jsx_runtime());
var _excluded11 = ["children", "disabled", "component", "components", "componentsProps", "label"];
function getUtilityClasses2(ownerState) {
  const {
    disabled,
    focusVisible
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible"]
  };
  return composeClasses(slots, getMenuItemUnstyledUtilityClass, {});
}
var MenuItemUnstyled = React21.forwardRef(function MenuItemUnstyled2(props, ref) {
  var _ref;
  const {
    children,
    disabled: disabledProp = false,
    component,
    components = {},
    componentsProps = {},
    label
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded11);
  const {
    getRootProps,
    disabled,
    focusVisible
  } = useMenuItem({
    disabled: disabledProp,
    ref,
    label
  });
  const ownerState = _extends({}, props, {
    disabled,
    focusVisible
  });
  const classes = getUtilityClasses2(ownerState);
  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : "li";
  const rootProps = useSlotProps({
    elementType: Root,
    getSlotProps: getRootProps,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    className: classes.root,
    ownerState
  });
  return (0, import_jsx_runtime14.jsx)(Root, _extends({}, rootProps, {
    children
  }));
});
true ? MenuItemUnstyled.propTypes = {
  children: import_prop_types10.default.node,
  component: import_prop_types10.default.elementType,
  components: import_prop_types10.default.shape({
    Root: import_prop_types10.default.elementType
  }),
  componentsProps: import_prop_types10.default.shape({
    root: import_prop_types10.default.oneOfType([import_prop_types10.default.func, import_prop_types10.default.object])
  }),
  disabled: import_prop_types10.default.bool,
  label: import_prop_types10.default.string
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/ModalUnstyled/ModalUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React22 = __toESM(require_react());
var import_prop_types11 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/node_modules/@mui/base/ModalUnstyled/ModalManager.js
init_esm();
function isOverflowing(container) {
  const doc = ownerDocument(container);
  if (doc.body === container) {
    return ownerWindow(container).innerWidth > doc.documentElement.clientWidth;
  }
  return container.scrollHeight > container.clientHeight;
}
function ariaHidden(element, show) {
  if (show) {
    element.setAttribute("aria-hidden", "true");
  } else {
    element.removeAttribute("aria-hidden");
  }
}
function getPaddingRight(element) {
  return parseInt(ownerWindow(element).getComputedStyle(element).paddingRight, 10) || 0;
}
function isAriaHiddenForbiddenOnElement(element) {
  const forbiddenTagNames = ["TEMPLATE", "SCRIPT", "STYLE", "LINK", "MAP", "META", "NOSCRIPT", "PICTURE", "COL", "COLGROUP", "PARAM", "SLOT", "SOURCE", "TRACK"];
  const isForbiddenTagName = forbiddenTagNames.indexOf(element.tagName) !== -1;
  const isInputHidden = element.tagName === "INPUT" && element.getAttribute("type") === "hidden";
  return isForbiddenTagName || isInputHidden;
}
function ariaHiddenSiblings(container, mountElement, currentElement, elementsToExclude = [], show) {
  const blacklist = [mountElement, currentElement, ...elementsToExclude];
  [].forEach.call(container.children, (element) => {
    const isNotExcludedElement = blacklist.indexOf(element) === -1;
    const isNotForbiddenElement = !isAriaHiddenForbiddenOnElement(element);
    if (isNotExcludedElement && isNotForbiddenElement) {
      ariaHidden(element, show);
    }
  });
}
function findIndexOf(items, callback) {
  let idx = -1;
  items.some((item, index) => {
    if (callback(item)) {
      idx = index;
      return true;
    }
    return false;
  });
  return idx;
}
function handleContainer(containerInfo, props) {
  const restoreStyle = [];
  const container = containerInfo.container;
  if (!props.disableScrollLock) {
    if (isOverflowing(container)) {
      const scrollbarSize = getScrollbarSize(ownerDocument(container));
      restoreStyle.push({
        value: container.style.paddingRight,
        property: "padding-right",
        el: container
      });
      container.style.paddingRight = `${getPaddingRight(container) + scrollbarSize}px`;
      const fixedElements = ownerDocument(container).querySelectorAll(".mui-fixed");
      [].forEach.call(fixedElements, (element) => {
        restoreStyle.push({
          value: element.style.paddingRight,
          property: "padding-right",
          el: element
        });
        element.style.paddingRight = `${getPaddingRight(element) + scrollbarSize}px`;
      });
    }
    let scrollContainer;
    if (container.parentNode instanceof DocumentFragment) {
      scrollContainer = ownerDocument(container).body;
    } else {
      const parent = container.parentElement;
      const containerWindow = ownerWindow(container);
      scrollContainer = (parent == null ? void 0 : parent.nodeName) === "HTML" && containerWindow.getComputedStyle(parent).overflowY === "scroll" ? parent : container;
    }
    restoreStyle.push({
      value: scrollContainer.style.overflow,
      property: "overflow",
      el: scrollContainer
    }, {
      value: scrollContainer.style.overflowX,
      property: "overflow-x",
      el: scrollContainer
    }, {
      value: scrollContainer.style.overflowY,
      property: "overflow-y",
      el: scrollContainer
    });
    scrollContainer.style.overflow = "hidden";
  }
  const restore = () => {
    restoreStyle.forEach(({
      value,
      el,
      property
    }) => {
      if (value) {
        el.style.setProperty(property, value);
      } else {
        el.style.removeProperty(property);
      }
    });
  };
  return restore;
}
function getHiddenSiblings(container) {
  const hiddenSiblings = [];
  [].forEach.call(container.children, (element) => {
    if (element.getAttribute("aria-hidden") === "true") {
      hiddenSiblings.push(element);
    }
  });
  return hiddenSiblings;
}
var ModalManager = class {
  constructor() {
    this.containers = void 0;
    this.modals = void 0;
    this.modals = [];
    this.containers = [];
  }
  add(modal, container) {
    let modalIndex = this.modals.indexOf(modal);
    if (modalIndex !== -1) {
      return modalIndex;
    }
    modalIndex = this.modals.length;
    this.modals.push(modal);
    if (modal.modalRef) {
      ariaHidden(modal.modalRef, false);
    }
    const hiddenSiblings = getHiddenSiblings(container);
    ariaHiddenSiblings(container, modal.mount, modal.modalRef, hiddenSiblings, true);
    const containerIndex = findIndexOf(this.containers, (item) => item.container === container);
    if (containerIndex !== -1) {
      this.containers[containerIndex].modals.push(modal);
      return modalIndex;
    }
    this.containers.push({
      modals: [modal],
      container,
      restore: null,
      hiddenSiblings
    });
    return modalIndex;
  }
  mount(modal, props) {
    const containerIndex = findIndexOf(this.containers, (item) => item.modals.indexOf(modal) !== -1);
    const containerInfo = this.containers[containerIndex];
    if (!containerInfo.restore) {
      containerInfo.restore = handleContainer(containerInfo, props);
    }
  }
  remove(modal, ariaHiddenState = true) {
    const modalIndex = this.modals.indexOf(modal);
    if (modalIndex === -1) {
      return modalIndex;
    }
    const containerIndex = findIndexOf(this.containers, (item) => item.modals.indexOf(modal) !== -1);
    const containerInfo = this.containers[containerIndex];
    containerInfo.modals.splice(containerInfo.modals.indexOf(modal), 1);
    this.modals.splice(modalIndex, 1);
    if (containerInfo.modals.length === 0) {
      if (containerInfo.restore) {
        containerInfo.restore();
      }
      if (modal.modalRef) {
        ariaHidden(modal.modalRef, ariaHiddenState);
      }
      ariaHiddenSiblings(containerInfo.container, modal.mount, modal.modalRef, containerInfo.hiddenSiblings, false);
      this.containers.splice(containerIndex, 1);
    } else {
      const nextTop = containerInfo.modals[containerInfo.modals.length - 1];
      if (nextTop.modalRef) {
        ariaHidden(nextTop.modalRef, false);
      }
    }
    return modalIndex;
  }
  isTopModal(modal) {
    return this.modals.length > 0 && this.modals[this.modals.length - 1] === modal;
  }
};

// node_modules/@mui/joy/node_modules/@mui/base/ModalUnstyled/modalUnstyledClasses.js
function getModalUtilityClass(slot) {
  return generateUtilityClass("MuiModal", slot);
}
var modalUnstyledClasses = generateUtilityClasses("MuiModal", ["root", "hidden"]);

// node_modules/@mui/joy/node_modules/@mui/base/ModalUnstyled/ModalUnstyled.js
var import_jsx_runtime15 = __toESM(require_jsx_runtime());
var import_jsx_runtime16 = __toESM(require_jsx_runtime());
var _excluded12 = ["children", "classes", "closeAfterTransition", "component", "components", "componentsProps", "container", "disableAutoFocus", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "manager", "onBackdropClick", "onClose", "onKeyDown", "open", "onTransitionEnter", "onTransitionExited"];
var useUtilityClasses5 = (ownerState) => {
  const {
    open,
    exited,
    classes
  } = ownerState;
  const slots = {
    root: ["root", !open && exited && "hidden"]
  };
  return composeClasses(slots, getModalUtilityClass, classes);
};
function getContainer2(container) {
  return typeof container === "function" ? container() : container;
}
function getHasTransition(props) {
  return props.children ? props.children.props.hasOwnProperty("in") : false;
}
var defaultManager = new ModalManager();
var ModalUnstyled = React22.forwardRef(function ModalUnstyled2(props, ref) {
  var _props$ariaHidden;
  const {
    children,
    classes: classesProp,
    closeAfterTransition = false,
    component = "div",
    components = {},
    componentsProps = {},
    container,
    disableAutoFocus = false,
    disableEnforceFocus = false,
    disableEscapeKeyDown = false,
    disablePortal = false,
    disableRestoreFocus = false,
    disableScrollLock = false,
    hideBackdrop = false,
    keepMounted = false,
    manager: manager2 = defaultManager,
    onBackdropClick,
    onClose,
    onKeyDown,
    open,
    onTransitionEnter,
    onTransitionExited
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded12);
  const [exited, setExited] = React22.useState(true);
  const modal = React22.useRef({});
  const mountNodeRef = React22.useRef(null);
  const modalRef = React22.useRef(null);
  const handleRef = useForkRef(modalRef, ref);
  const hasTransition = getHasTransition(props);
  const ariaHiddenProp = (_props$ariaHidden = props["aria-hidden"]) != null ? _props$ariaHidden : true;
  const getDoc = () => ownerDocument(mountNodeRef.current);
  const getModal = () => {
    modal.current.modalRef = modalRef.current;
    modal.current.mountNode = mountNodeRef.current;
    return modal.current;
  };
  const handleMounted = () => {
    manager2.mount(getModal(), {
      disableScrollLock
    });
    modalRef.current.scrollTop = 0;
  };
  const handleOpen = useEventCallback(() => {
    const resolvedContainer = getContainer2(container) || getDoc().body;
    manager2.add(getModal(), resolvedContainer);
    if (modalRef.current) {
      handleMounted();
    }
  });
  const isTopModal = React22.useCallback(() => manager2.isTopModal(getModal()), [manager2]);
  const handlePortalRef = useEventCallback((node) => {
    mountNodeRef.current = node;
    if (!node) {
      return;
    }
    if (open && isTopModal()) {
      handleMounted();
    } else {
      ariaHidden(modalRef.current, ariaHiddenProp);
    }
  });
  const handleClose = React22.useCallback(() => {
    manager2.remove(getModal(), ariaHiddenProp);
  }, [manager2, ariaHiddenProp]);
  React22.useEffect(() => {
    return () => {
      handleClose();
    };
  }, [handleClose]);
  React22.useEffect(() => {
    if (open) {
      handleOpen();
    } else if (!hasTransition || !closeAfterTransition) {
      handleClose();
    }
  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);
  const ownerState = _extends({}, props, {
    classes: classesProp,
    closeAfterTransition,
    disableAutoFocus,
    disableEnforceFocus,
    disableEscapeKeyDown,
    disablePortal,
    disableRestoreFocus,
    disableScrollLock,
    exited,
    hideBackdrop,
    keepMounted
  });
  const classes = useUtilityClasses5(ownerState);
  const handleEnter = () => {
    setExited(false);
    if (onTransitionEnter) {
      onTransitionEnter();
    }
  };
  const handleExited = () => {
    setExited(true);
    if (onTransitionExited) {
      onTransitionExited();
    }
    if (closeAfterTransition) {
      handleClose();
    }
  };
  const handleBackdropClick = (event) => {
    if (event.target !== event.currentTarget) {
      return;
    }
    if (onBackdropClick) {
      onBackdropClick(event);
    }
    if (onClose) {
      onClose(event, "backdropClick");
    }
  };
  const handleKeyDown2 = (event) => {
    if (onKeyDown) {
      onKeyDown(event);
    }
    if (event.key !== "Escape" || !isTopModal()) {
      return;
    }
    if (!disableEscapeKeyDown) {
      event.stopPropagation();
      if (onClose) {
        onClose(event, "escapeKeyDown");
      }
    }
  };
  const childProps = {};
  if (children.props.tabIndex === void 0) {
    childProps.tabIndex = "-1";
  }
  if (hasTransition) {
    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);
    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);
  }
  const Root = components.Root || component;
  const rootProps = useSlotProps({
    elementType: Root,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: handleRef,
      role: "presentation",
      onKeyDown: handleKeyDown2
    },
    className: classes.root,
    ownerState
  });
  const BackdropComponent = components.Backdrop;
  const backdropProps = useSlotProps({
    elementType: BackdropComponent,
    externalSlotProps: componentsProps.backdrop,
    additionalProps: {
      "aria-hidden": true,
      onClick: handleBackdropClick,
      open
    },
    ownerState
  });
  if (!keepMounted && !open && (!hasTransition || exited)) {
    return null;
  }
  return (0, import_jsx_runtime15.jsx)(Portal_default, {
    ref: handlePortalRef,
    container,
    disablePortal,
    children: (0, import_jsx_runtime16.jsxs)(Root, _extends({}, rootProps, {
      children: [!hideBackdrop && BackdropComponent ? (0, import_jsx_runtime15.jsx)(BackdropComponent, _extends({}, backdropProps)) : null, (0, import_jsx_runtime15.jsx)(FocusTrap_default, {
        disableEnforceFocus,
        disableAutoFocus,
        disableRestoreFocus,
        isEnabled: isTopModal,
        open,
        children: React22.cloneElement(children, childProps)
      })]
    }))
  });
});
true ? ModalUnstyled.propTypes = {
  children: elementAcceptingRef_default.isRequired,
  classes: import_prop_types11.default.object,
  closeAfterTransition: import_prop_types11.default.bool,
  component: import_prop_types11.default.elementType,
  components: import_prop_types11.default.shape({
    Backdrop: import_prop_types11.default.elementType,
    Root: import_prop_types11.default.elementType
  }),
  componentsProps: import_prop_types11.default.shape({
    backdrop: import_prop_types11.default.oneOfType([import_prop_types11.default.func, import_prop_types11.default.object]),
    root: import_prop_types11.default.oneOfType([import_prop_types11.default.func, import_prop_types11.default.object])
  }),
  container: import_prop_types11.default.oneOfType([HTMLElementType, import_prop_types11.default.func]),
  disableAutoFocus: import_prop_types11.default.bool,
  disableEnforceFocus: import_prop_types11.default.bool,
  disableEscapeKeyDown: import_prop_types11.default.bool,
  disablePortal: import_prop_types11.default.bool,
  disableRestoreFocus: import_prop_types11.default.bool,
  disableScrollLock: import_prop_types11.default.bool,
  hideBackdrop: import_prop_types11.default.bool,
  keepMounted: import_prop_types11.default.bool,
  onBackdropClick: import_prop_types11.default.func,
  onClose: import_prop_types11.default.func,
  onKeyDown: import_prop_types11.default.func,
  open: import_prop_types11.default.bool.isRequired
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/MultiSelectUnstyled/MultiSelectUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React26 = __toESM(require_react());
var import_prop_types12 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/node_modules/@mui/base/SelectUnstyled/utils.js
init_extends();
var import_react = __toESM(require_react());

// node_modules/@mui/joy/node_modules/@mui/base/SelectUnstyled/useSelect.types.js
function isOptionGroup(child) {
  return !!child.options;
}

// node_modules/@mui/joy/node_modules/@mui/base/SelectUnstyled/utils.js
function getOptionsFromChildren(children) {
  if (children == null) {
    return [];
  }
  const selectChildren = [];
  import_react.default.Children.forEach(children, (node) => {
    var _props, _props2, _element$props$disabl2;
    const nodeChildren = node == null ? void 0 : (_props = node.props) == null ? void 0 : _props.children;
    if ((node == null ? void 0 : (_props2 = node.props) == null ? void 0 : _props2.value) === void 0) {
      if (nodeChildren != null) {
        var _element$props$disabl;
        const element2 = node;
        const group = {
          options: getOptionsFromChildren(nodeChildren),
          label: element2.props.label,
          disabled: (_element$props$disabl = element2.props.disabled) != null ? _element$props$disabl : false
        };
        selectChildren.push(group);
      }
      return;
    }
    const element = node;
    const option = {
      value: element.props.value,
      label: element.props.label || element.props.children,
      disabled: (_element$props$disabl2 = element.props.disabled) != null ? _element$props$disabl2 : false
    };
    selectChildren.push(option);
  });
  return selectChildren != null ? selectChildren : [];
}
function flattenOptionGroups(groupedOptions, isGroupDisabled = false) {
  let flatOptions = [];
  groupedOptions.forEach((optionOrGroup) => {
    if (isOptionGroup(optionOrGroup)) {
      flatOptions = flatOptions.concat(flattenOptionGroups(optionOrGroup.options, optionOrGroup.disabled));
    } else {
      flatOptions.push(_extends({}, optionOrGroup, {
        disabled: isGroupDisabled || optionOrGroup.disabled
      }));
    }
  });
  return flatOptions;
}

// node_modules/@mui/joy/node_modules/@mui/base/SelectUnstyled/useSelect.js
init_extends();
var React24 = __toESM(require_react());
init_esm();

// node_modules/@mui/joy/node_modules/@mui/base/SelectUnstyled/defaultOptionStringifier.js
var defaultOptionStringifier2 = (option) => {
  const {
    label,
    value
  } = option;
  if (typeof label === "string") {
    return label;
  }
  if (typeof value === "string") {
    return value;
  }
  return String(option);
};
var defaultOptionStringifier_default = defaultOptionStringifier2;

// node_modules/@mui/joy/node_modules/@mui/base/SelectUnstyled/useSelect.js
function useSelect(props) {
  const {
    buttonRef: buttonRefProp,
    defaultValue,
    disabled = false,
    listboxId,
    listboxRef: listboxRefProp,
    multiple = false,
    onChange,
    onOpenChange,
    open = false,
    options,
    optionStringifier = defaultOptionStringifier_default,
    value: valueProp
  } = props;
  const buttonRef = React24.useRef(null);
  const handleButtonRef = useForkRef(buttonRefProp, buttonRef);
  const listboxRef = React24.useRef(null);
  const [value, setValue] = useControlled({
    controlled: valueProp,
    default: defaultValue,
    name: "SelectUnstyled",
    state: "value"
  });
  const ignoreEnterKeyUp = React24.useRef(false);
  const ignoreClick = React24.useRef(false);
  const [listboxFocusRequested, requestListboxFocus] = React24.useState(false);
  const focusListboxIfRequested = React24.useCallback(() => {
    if (listboxFocusRequested && listboxRef.current != null) {
      listboxRef.current.focus();
      requestListboxFocus(false);
    }
  }, [listboxFocusRequested]);
  const updateListboxRef = (listboxElement) => {
    listboxRef.current = listboxElement;
    focusListboxIfRequested();
  };
  const handleListboxRef = useForkRef(useForkRef(listboxRefProp, listboxRef), updateListboxRef);
  React24.useEffect(() => {
    focusListboxIfRequested();
  }, [focusListboxIfRequested]);
  React24.useEffect(() => {
    requestListboxFocus(open);
  }, [open]);
  const createHandleMouseDown = (otherHandlers) => (event) => {
    var _otherHandlers$onMous;
    otherHandlers == null ? void 0 : (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);
    if (!event.defaultPrevented && open) {
      ignoreClick.current = true;
    }
  };
  const createHandleButtonClick = (otherHandlers) => (event) => {
    var _otherHandlers$onClic;
    otherHandlers == null ? void 0 : (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);
    if (!event.defaultPrevented && !ignoreClick.current) {
      onOpenChange == null ? void 0 : onOpenChange(!open);
    }
    ignoreClick.current = false;
  };
  const createHandleButtonKeyDown = (otherHandlers) => (event) => {
    var _otherHandlers$onKeyD;
    otherHandlers == null ? void 0 : (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);
    if (event.defaultPrevented) {
      return;
    }
    if (event.key === "Enter") {
      ignoreEnterKeyUp.current = true;
    }
    if (event.key === "ArrowDown" || event.key === "ArrowUp") {
      event.preventDefault();
      onOpenChange == null ? void 0 : onOpenChange(true);
    }
  };
  const createHandleListboxKeyUp = (otherHandlers) => (event) => {
    var _otherHandlers$onKeyU;
    otherHandlers == null ? void 0 : (_otherHandlers$onKeyU = otherHandlers.onKeyUp) == null ? void 0 : _otherHandlers$onKeyU.call(otherHandlers, event);
    if (event.defaultPrevented) {
      return;
    }
    const closingKeys = multiple ? ["Escape"] : ["Escape", "Enter", " "];
    if (open && !ignoreEnterKeyUp.current && closingKeys.includes(event.key)) {
      var _buttonRef$current;
      buttonRef == null ? void 0 : (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();
    }
    ignoreEnterKeyUp.current = false;
  };
  const createHandleListboxItemClick = (otherHandlers) => (event) => {
    var _otherHandlers$onClic2;
    otherHandlers == null ? void 0 : (_otherHandlers$onClic2 = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic2.call(otherHandlers, event);
    if (event.defaultPrevented) {
      return;
    }
    if (!multiple) {
      onOpenChange == null ? void 0 : onOpenChange(false);
    }
  };
  const createHandleListboxBlur = (otherHandlers) => (event) => {
    var _otherHandlers$onBlur;
    otherHandlers == null ? void 0 : (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);
    if (!event.defaultPrevented) {
      onOpenChange == null ? void 0 : onOpenChange(false);
    }
  };
  const listboxReducer = (state, action) => {
    const newState = defaultListboxReducer(state, action);
    if (action.type === ActionTypes.keyDown && !open && (action.event.key === "ArrowUp" || action.event.key === "ArrowDown")) {
      return _extends({}, newState, {
        selectedValue: newState.highlightedValue
      });
    }
    if (action.type === ActionTypes.blur || action.type === ActionTypes.setValue || action.type === ActionTypes.optionsChange) {
      return _extends({}, newState, {
        highlightedValue: newState.selectedValue
      });
    }
    return newState;
  };
  const {
    getRootProps: getButtonRootProps,
    active: buttonActive,
    focusVisible: buttonFocusVisible
  } = useButton({
    disabled,
    ref: handleButtonRef
  });
  const selectedOption = React24.useMemo(() => {
    var _props$options$find;
    return props.multiple ? props.options.filter((o) => value.includes(o.value)) : (_props$options$find = props.options.find((o) => o.value === value)) != null ? _props$options$find : null;
  }, [props.multiple, props.options, value]);
  let useListboxParameters;
  if (props.multiple) {
    const onChangeMultiple = onChange;
    useListboxParameters = {
      id: listboxId,
      isOptionDisabled: (o) => {
        var _o$disabled;
        return (_o$disabled = o == null ? void 0 : o.disabled) != null ? _o$disabled : false;
      },
      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),
      listboxRef: handleListboxRef,
      multiple: true,
      onChange: (e, newOptions) => {
        const newValues = newOptions.map((o) => o.value);
        setValue(newValues);
        onChangeMultiple == null ? void 0 : onChangeMultiple(e, newValues);
      },
      options,
      optionStringifier,
      value: selectedOption
    };
  } else {
    const onChangeSingle = onChange;
    useListboxParameters = {
      id: listboxId,
      isOptionDisabled: (o) => {
        var _o$disabled2;
        return (_o$disabled2 = o == null ? void 0 : o.disabled) != null ? _o$disabled2 : false;
      },
      optionComparer: (o, v) => (o == null ? void 0 : o.value) === (v == null ? void 0 : v.value),
      listboxRef: handleListboxRef,
      multiple: false,
      onChange: (e, option) => {
        var _option$value, _option$value2;
        setValue((_option$value = option == null ? void 0 : option.value) != null ? _option$value : null);
        onChangeSingle == null ? void 0 : onChangeSingle(e, (_option$value2 = option == null ? void 0 : option.value) != null ? _option$value2 : null);
      },
      options,
      optionStringifier,
      stateReducer: listboxReducer,
      value: selectedOption
    };
  }
  const {
    getRootProps: getListboxRootProps,
    getOptionProps: getListboxOptionProps,
    getOptionState,
    highlightedOption,
    selectedOption: listboxSelectedOption
  } = useListbox(useListboxParameters);
  const getButtonProps = (otherHandlers = {}) => {
    return _extends({}, getButtonRootProps(_extends({}, otherHandlers, {
      onClick: createHandleButtonClick(otherHandlers),
      onMouseDown: createHandleMouseDown(otherHandlers),
      onKeyDown: createHandleButtonKeyDown(otherHandlers)
    })), {
      "aria-expanded": open,
      "aria-haspopup": "listbox"
    });
  };
  const getListboxProps = (otherHandlers = {}) => getListboxRootProps(_extends({}, otherHandlers, {
    onBlur: createHandleListboxBlur(otherHandlers),
    onKeyUp: createHandleListboxKeyUp(otherHandlers)
  }));
  const getOptionProps = (option, otherHandlers = {}) => {
    return getListboxOptionProps(option, _extends({}, otherHandlers, {
      onClick: createHandleListboxItemClick(otherHandlers)
    }));
  };
  React24.useDebugValue({
    selectedOption: listboxSelectedOption,
    highlightedOption,
    open
  });
  return {
    buttonActive,
    buttonFocusVisible,
    disabled,
    getButtonProps,
    getListboxProps,
    getOptionProps,
    getOptionState,
    open,
    value
  };
}
var useSelect_default = useSelect;

// node_modules/@mui/joy/node_modules/@mui/base/SelectUnstyled/SelectUnstyledContext.js
var React25 = __toESM(require_react());
var SelectUnstyledContext = React25.createContext(void 0);

// node_modules/@mui/joy/node_modules/@mui/base/SelectUnstyled/selectUnstyledClasses.js
function getSelectUnstyledUtilityClass(slot) {
  return generateUtilityClass("MuiSelectUnstyled", slot);
}
var selectUnstyledClasses = generateUtilityClasses("MuiSelectUnstyled", ["root", "button", "listbox", "popper", "active", "expanded", "disabled", "focusVisible"]);

// node_modules/@mui/joy/node_modules/@mui/base/MultiSelectUnstyled/MultiSelectUnstyled.js
var import_jsx_runtime17 = __toESM(require_jsx_runtime());
var import_jsx_runtime18 = __toESM(require_jsx_runtime());
var _excluded13 = ["autoFocus", "children", "component", "components", "componentsProps", "defaultListboxOpen", "defaultValue", "disabled", "getSerializedValue", "listboxId", "listboxOpen", "name", "onChange", "onListboxOpenChange", "optionStringifier", "value"];
function defaultRenderMultipleValues(selectedOptions) {
  return (0, import_jsx_runtime17.jsx)(React26.Fragment, {
    children: selectedOptions.map((o) => o.label).join(", ")
  });
}
function defaultFormValueProvider(selectedOptions) {
  if (selectedOptions.length === 0) {
    return "";
  }
  if (selectedOptions.every((o) => typeof o.value === "string" || typeof o.value === "number" || typeof o.value === "boolean")) {
    return selectedOptions.map((o) => String(o.value));
  }
  return JSON.stringify(selectedOptions.map((o) => o.value));
}
function useUtilityClasses6(ownerState) {
  const {
    active,
    disabled,
    open,
    focusVisible
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", active && "active", open && "expanded"],
    listbox: ["listbox", disabled && "disabled"],
    popper: ["popper"]
  };
  return composeClasses(slots, getSelectUnstyledUtilityClass, {});
}
var MultiSelectUnstyled = React26.forwardRef(function MultiSelectUnstyled2(props, forwardedRef) {
  var _props$renderValue, _ref, _components$Listbox, _components$Popper;
  const {
    autoFocus,
    children,
    component,
    components = {},
    componentsProps = {},
    defaultListboxOpen = false,
    defaultValue = [],
    disabled: disabledProp,
    getSerializedValue = defaultFormValueProvider,
    listboxId,
    listboxOpen: listboxOpenProp,
    name,
    onChange,
    onListboxOpenChange,
    optionStringifier = defaultOptionStringifier_default,
    value: valueProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded13);
  const renderValue = (_props$renderValue = props.renderValue) != null ? _props$renderValue : defaultRenderMultipleValues;
  const [groupedOptions, setGroupedOptions] = React26.useState([]);
  const options = React26.useMemo(() => flattenOptionGroups(groupedOptions), [groupedOptions]);
  const [listboxOpen, setListboxOpen] = useControlled({
    controlled: listboxOpenProp,
    default: defaultListboxOpen,
    name: "MultiSelectUnstyled",
    state: "listboxOpen"
  });
  React26.useEffect(() => {
    setGroupedOptions(getOptionsFromChildren(children));
  }, [children]);
  const [buttonDefined, setButtonDefined] = React26.useState(false);
  const buttonRef = React26.useRef(null);
  const listboxRef = React26.useRef(null);
  const Button3 = (_ref = component != null ? component : components.Root) != null ? _ref : "button";
  const ListboxRoot = (_components$Listbox = components.Listbox) != null ? _components$Listbox : "ul";
  const Popper = (_components$Popper = components.Popper) != null ? _components$Popper : PopperUnstyled_default;
  const handleButtonRefChange = React26.useCallback((element) => {
    setButtonDefined(element != null);
  }, []);
  const handleButtonRef = useForkRef(forwardedRef, useForkRef(buttonRef, handleButtonRefChange));
  React26.useEffect(() => {
    if (autoFocus) {
      buttonRef.current.focus();
    }
  }, [autoFocus]);
  const handleOpenChange = (isOpen) => {
    setListboxOpen(isOpen);
    onListboxOpenChange == null ? void 0 : onListboxOpenChange(isOpen);
  };
  const {
    buttonActive,
    buttonFocusVisible,
    disabled,
    getButtonProps,
    getListboxProps,
    getOptionProps,
    getOptionState,
    value
  } = useSelect_default({
    buttonRef: handleButtonRef,
    defaultValue,
    disabled: disabledProp,
    listboxId,
    multiple: true,
    onChange,
    onOpenChange: handleOpenChange,
    open: listboxOpen,
    options,
    optionStringifier,
    value: valueProp
  });
  const ownerState = _extends({}, props, {
    active: buttonActive,
    defaultListboxOpen,
    disabled,
    focusVisible: buttonFocusVisible,
    open: listboxOpen,
    renderValue,
    value
  });
  const classes = useUtilityClasses6(ownerState);
  const selectedOptions = React26.useMemo(() => {
    if (value == null) {
      return [];
    }
    return options.filter((o) => value.includes(o.value));
  }, [options, value]);
  const buttonProps = useSlotProps({
    elementType: Button3,
    getSlotProps: getButtonProps,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    ownerState,
    className: classes.root
  });
  const listboxProps = useSlotProps({
    elementType: ListboxRoot,
    getSlotProps: getListboxProps,
    externalSlotProps: componentsProps.listbox,
    additionalProps: {
      ref: listboxRef
    },
    ownerState,
    className: classes.listbox
  });
  const popperProps = useSlotProps({
    elementType: Popper,
    externalSlotProps: componentsProps.popper,
    additionalProps: {
      anchorEl: buttonRef.current,
      disablePortal: true,
      open: listboxOpen,
      placement: "bottom-start",
      role: void 0
    },
    ownerState,
    className: classes.popper
  });
  const context = {
    getOptionProps,
    getOptionState,
    listboxRef
  };
  return (0, import_jsx_runtime18.jsxs)(React26.Fragment, {
    children: [(0, import_jsx_runtime17.jsx)(Button3, _extends({}, buttonProps, {
      children: renderValue(selectedOptions)
    })), buttonDefined && (0, import_jsx_runtime17.jsx)(Popper, _extends({}, popperProps, {
      children: (0, import_jsx_runtime17.jsx)(ListboxRoot, _extends({}, listboxProps, {
        children: (0, import_jsx_runtime17.jsx)(SelectUnstyledContext.Provider, {
          value: context,
          children
        })
      }))
    })), name && (0, import_jsx_runtime17.jsx)("input", {
      type: "hidden",
      name,
      value: getSerializedValue(selectedOptions)
    })]
  });
});
true ? MultiSelectUnstyled.propTypes = {
  autoFocus: import_prop_types12.default.bool,
  children: import_prop_types12.default.node,
  component: import_prop_types12.default.elementType,
  components: import_prop_types12.default.shape({
    Listbox: import_prop_types12.default.elementType,
    Popper: import_prop_types12.default.elementType,
    Root: import_prop_types12.default.elementType
  }),
  componentsProps: import_prop_types12.default.shape({
    listbox: import_prop_types12.default.oneOfType([import_prop_types12.default.func, import_prop_types12.default.object]),
    popper: import_prop_types12.default.oneOfType([import_prop_types12.default.func, import_prop_types12.default.object]),
    root: import_prop_types12.default.oneOfType([import_prop_types12.default.func, import_prop_types12.default.object])
  }),
  defaultListboxOpen: import_prop_types12.default.bool,
  defaultValue: import_prop_types12.default.array,
  disabled: import_prop_types12.default.bool,
  getSerializedValue: import_prop_types12.default.func,
  listboxId: import_prop_types12.default.string,
  listboxOpen: import_prop_types12.default.bool,
  name: import_prop_types12.default.string,
  onChange: import_prop_types12.default.func,
  onListboxOpenChange: import_prop_types12.default.func,
  optionStringifier: import_prop_types12.default.func,
  renderValue: import_prop_types12.default.func,
  value: import_prop_types12.default.array
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/NoSsr/NoSsr.js
var React27 = __toESM(require_react());
var import_prop_types13 = __toESM(require_prop_types());
init_esm();
var import_jsx_runtime19 = __toESM(require_jsx_runtime());
function NoSsr(props) {
  const {
    children,
    defer = false,
    fallback = null
  } = props;
  const [mountedState, setMountedState] = React27.useState(false);
  useEnhancedEffect_default(() => {
    if (!defer) {
      setMountedState(true);
    }
  }, [defer]);
  React27.useEffect(() => {
    if (defer) {
      setMountedState(true);
    }
  }, [defer]);
  return (0, import_jsx_runtime19.jsx)(React27.Fragment, {
    children: mountedState ? children : fallback
  });
}
true ? NoSsr.propTypes = {
  children: import_prop_types13.default.node,
  defer: import_prop_types13.default.bool,
  fallback: import_prop_types13.default.node
} : void 0;
if (true) {
  NoSsr["propTypes"] = exactProp(NoSsr.propTypes);
}

// node_modules/@mui/joy/node_modules/@mui/base/OptionGroupUnstyled/OptionGroupUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var import_react2 = __toESM(require_react());
var import_prop_types14 = __toESM(require_prop_types());

// node_modules/@mui/joy/node_modules/@mui/base/OptionGroupUnstyled/optionGroupUnstyledClasses.js
function getOptionGroupUnstyledUtilityClass(slot) {
  return generateUtilityClass("MuiOptionGroupUnstyled", slot);
}
var optionGroupUnstyledClasses = generateUtilityClasses("MuiOptionGroupUnstyled", ["root", "label", "list"]);

// node_modules/@mui/joy/node_modules/@mui/base/OptionGroupUnstyled/OptionGroupUnstyled.js
var import_jsx_runtime20 = __toESM(require_jsx_runtime());
var import_jsx_runtime21 = __toESM(require_jsx_runtime());
var _excluded14 = ["component", "components", "disabled", "componentsProps"];
function useUtilityClasses7(disabled) {
  const slots = {
    root: ["root", disabled && "disabled"],
    label: ["label"],
    list: ["list"]
  };
  return composeClasses(slots, getOptionGroupUnstyledUtilityClass, {});
}
var OptionGroupUnstyled = import_react2.default.forwardRef(function OptionGroupUnstyled2(props, ref) {
  const {
    component,
    components = {},
    disabled = false,
    componentsProps = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded14);
  const Root = component || (components == null ? void 0 : components.Root) || "li";
  const Label = (components == null ? void 0 : components.Label) || "span";
  const List3 = (components == null ? void 0 : components.List) || "ul";
  const classes = useUtilityClasses7(disabled);
  const rootProps = useSlotProps({
    elementType: Root,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref
    },
    ownerState: props,
    className: classes.root
  });
  const labelProps = useSlotProps({
    elementType: Label,
    externalSlotProps: componentsProps.label,
    ownerState: props,
    className: classes.label
  });
  const listProps = useSlotProps({
    elementType: List3,
    externalSlotProps: componentsProps.list,
    ownerState: props,
    className: classes.list
  });
  return (0, import_jsx_runtime21.jsxs)(Root, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime20.jsx)(Label, _extends({}, labelProps, {
      children: props.label
    })), (0, import_jsx_runtime20.jsx)(List3, _extends({}, listProps, {
      children: props.children
    }))]
  }));
});
true ? OptionGroupUnstyled.propTypes = {
  children: import_prop_types14.default.node,
  component: import_prop_types14.default.elementType,
  components: import_prop_types14.default.shape({
    Label: import_prop_types14.default.elementType,
    List: import_prop_types14.default.elementType,
    Root: import_prop_types14.default.elementType
  }),
  componentsProps: import_prop_types14.default.shape({
    label: import_prop_types14.default.oneOfType([import_prop_types14.default.func, import_prop_types14.default.object]),
    list: import_prop_types14.default.oneOfType([import_prop_types14.default.func, import_prop_types14.default.object]),
    root: import_prop_types14.default.oneOfType([import_prop_types14.default.func, import_prop_types14.default.object])
  }),
  disabled: import_prop_types14.default.bool,
  label: import_prop_types14.default.node
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/OptionUnstyled/OptionUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var import_react3 = __toESM(require_react());
var import_prop_types15 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/node_modules/@mui/base/OptionUnstyled/optionUnstyledClasses.js
function getOptionUnstyledUtilityClass(slot) {
  return generateUtilityClass("MuiOptionUnstyled", slot);
}
var optionUnstyledClasses = generateUtilityClasses("MuiOptionUnstyled", ["root", "disabled", "selected", "highlighted"]);

// node_modules/@mui/joy/node_modules/@mui/base/OptionUnstyled/OptionUnstyled.js
var import_jsx_runtime22 = __toESM(require_jsx_runtime());
var _excluded15 = ["children", "component", "components", "componentsProps", "disabled", "value", "label"];
function useUtilityClasses8(ownerState) {
  const {
    disabled,
    highlighted,
    selected
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", highlighted && "highlighted", selected && "selected"]
  };
  return composeClasses(slots, getOptionUnstyledUtilityClass, {});
}
var OptionUnstyled = import_react3.default.forwardRef(function OptionUnstyled2(props, ref) {
  const {
    children,
    component,
    components = {},
    componentsProps = {},
    disabled,
    value,
    label
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded15);
  const selectContext = import_react3.default.useContext(SelectUnstyledContext);
  if (!selectContext) {
    throw new Error("OptionUnstyled must be used within a SelectUnstyled");
  }
  const Root = component || components.Root || "li";
  const selectOption = {
    value,
    label: label || children,
    disabled
  };
  const optionState = selectContext.getOptionState(selectOption);
  const optionProps = selectContext.getOptionProps(selectOption);
  const listboxRef = selectContext.listboxRef;
  const ownerState = _extends({}, props, optionState);
  const optionRef = import_react3.default.useRef(null);
  const handleRef = useForkRef(ref, optionRef);
  import_react3.default.useEffect(() => {
    if (optionState.highlighted) {
      if (!listboxRef.current || !optionRef.current) {
        return;
      }
      const listboxClientRect = listboxRef.current.getBoundingClientRect();
      const optionClientRect = optionRef.current.getBoundingClientRect();
      if (optionClientRect.top < listboxClientRect.top) {
        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;
      } else if (optionClientRect.bottom > listboxClientRect.bottom) {
        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;
      }
    }
  }, [optionState.highlighted, listboxRef]);
  const classes = useUtilityClasses8(ownerState);
  const rootProps = useSlotProps({
    elementType: Root,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: _extends({}, optionProps, {
      ref: handleRef
    }),
    className: classes.root,
    ownerState
  });
  return (0, import_jsx_runtime22.jsx)(Root, _extends({}, rootProps, {
    children
  }));
});
true ? OptionUnstyled.propTypes = {
  children: import_prop_types15.default.node,
  component: import_prop_types15.default.elementType,
  components: import_prop_types15.default.shape({
    Root: import_prop_types15.default.elementType
  }),
  componentsProps: import_prop_types15.default.shape({
    root: import_prop_types15.default.oneOfType([import_prop_types15.default.func, import_prop_types15.default.object])
  }),
  disabled: import_prop_types15.default.bool,
  label: import_prop_types15.default.string,
  value: import_prop_types15.default.any.isRequired
} : void 0;
var OptionUnstyled_default = import_react3.default.memo(OptionUnstyled);

// node_modules/@mui/joy/node_modules/@mui/base/SelectUnstyled/SelectUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React30 = __toESM(require_react());
var import_prop_types16 = __toESM(require_prop_types());
init_esm();
var import_jsx_runtime23 = __toESM(require_jsx_runtime());
var import_jsx_runtime24 = __toESM(require_jsx_runtime());
var _excluded16 = ["autoFocus", "children", "component", "components", "componentsProps", "defaultValue", "defaultListboxOpen", "disabled", "getSerializedValue", "listboxId", "listboxOpen", "name", "onChange", "onListboxOpenChange", "optionStringifier", "renderValue", "value"];
function defaultRenderSingleValue(selectedOption) {
  var _selectedOption$label;
  return (_selectedOption$label = selectedOption == null ? void 0 : selectedOption.label) != null ? _selectedOption$label : "";
}
function defaultFormValueProvider2(selectedOption) {
  if ((selectedOption == null ? void 0 : selectedOption.value) == null) {
    return "";
  }
  if (typeof selectedOption.value === "string" || typeof selectedOption.value === "number") {
    return selectedOption.value;
  }
  return JSON.stringify(selectedOption.value);
}
function useUtilityClasses9(ownerState) {
  const {
    active,
    disabled,
    open,
    focusVisible
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", active && "active", open && "expanded"],
    listbox: ["listbox", disabled && "disabled"],
    popper: ["popper"]
  };
  return composeClasses(slots, getSelectUnstyledUtilityClass, {});
}
var SelectUnstyled = React30.forwardRef(function SelectUnstyled2(props, forwardedRef) {
  var _ref, _components$Listbox, _components$Popper;
  const {
    autoFocus,
    children,
    component,
    components = {},
    componentsProps = {},
    defaultValue,
    defaultListboxOpen = false,
    disabled: disabledProp,
    getSerializedValue = defaultFormValueProvider2,
    listboxId,
    listboxOpen: listboxOpenProp,
    name,
    onChange,
    onListboxOpenChange,
    optionStringifier = defaultOptionStringifier_default,
    renderValue: renderValueProp,
    value: valueProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded16);
  const renderValue = renderValueProp != null ? renderValueProp : defaultRenderSingleValue;
  const [groupedOptions, setGroupedOptions] = React30.useState([]);
  const options = React30.useMemo(() => flattenOptionGroups(groupedOptions), [groupedOptions]);
  const [listboxOpen, setListboxOpen] = useControlled({
    controlled: listboxOpenProp,
    default: defaultListboxOpen,
    name: "SelectUnstyled",
    state: "listboxOpen"
  });
  React30.useEffect(() => {
    setGroupedOptions(getOptionsFromChildren(children));
  }, [children]);
  const [buttonDefined, setButtonDefined] = React30.useState(false);
  const buttonRef = React30.useRef(null);
  const listboxRef = React30.useRef(null);
  const Button3 = (_ref = component != null ? component : components.Root) != null ? _ref : "button";
  const ListboxRoot = (_components$Listbox = components.Listbox) != null ? _components$Listbox : "ul";
  const Popper = (_components$Popper = components.Popper) != null ? _components$Popper : PopperUnstyled_default;
  const handleButtonRefChange = React30.useCallback((element) => {
    setButtonDefined(element != null);
  }, []);
  const handleButtonRef = useForkRef(forwardedRef, useForkRef(buttonRef, handleButtonRefChange));
  React30.useEffect(() => {
    if (autoFocus) {
      buttonRef.current.focus();
    }
  }, [autoFocus]);
  const handleOpenChange = (isOpen) => {
    setListboxOpen(isOpen);
    onListboxOpenChange == null ? void 0 : onListboxOpenChange(isOpen);
  };
  const {
    buttonActive,
    buttonFocusVisible,
    disabled,
    getButtonProps,
    getListboxProps,
    getOptionProps,
    getOptionState,
    value
  } = useSelect_default({
    buttonRef: handleButtonRef,
    defaultValue,
    disabled: disabledProp,
    listboxId,
    multiple: false,
    onChange,
    onOpenChange: handleOpenChange,
    open: listboxOpen,
    options,
    optionStringifier,
    value: valueProp
  });
  const ownerState = _extends({}, props, {
    active: buttonActive,
    defaultListboxOpen,
    disabled,
    focusVisible: buttonFocusVisible,
    open: listboxOpen,
    renderValue,
    value
  });
  const classes = useUtilityClasses9(ownerState);
  const selectedOption = React30.useMemo(() => {
    var _options$find;
    return (_options$find = options.find((o) => value === o.value)) != null ? _options$find : null;
  }, [options, value]);
  const buttonProps = useSlotProps({
    elementType: Button3,
    getSlotProps: getButtonProps,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    ownerState,
    className: classes.root
  });
  const listboxProps = useSlotProps({
    elementType: ListboxRoot,
    getSlotProps: getListboxProps,
    externalSlotProps: componentsProps.listbox,
    additionalProps: {
      ref: listboxRef
    },
    ownerState,
    className: classes.listbox
  });
  const popperProps = useSlotProps({
    elementType: Popper,
    externalSlotProps: componentsProps.popper,
    additionalProps: {
      anchorEl: buttonRef.current,
      disablePortal: true,
      open: listboxOpen,
      placement: "bottom-start",
      role: void 0
    },
    ownerState,
    className: classes.popper
  });
  const context = {
    getOptionProps,
    getOptionState,
    listboxRef
  };
  return (0, import_jsx_runtime24.jsxs)(React30.Fragment, {
    children: [(0, import_jsx_runtime23.jsx)(Button3, _extends({}, buttonProps, {
      children: renderValue(selectedOption)
    })), buttonDefined && (0, import_jsx_runtime23.jsx)(Popper, _extends({}, popperProps, {
      children: (0, import_jsx_runtime23.jsx)(ListboxRoot, _extends({}, listboxProps, {
        children: (0, import_jsx_runtime23.jsx)(SelectUnstyledContext.Provider, {
          value: context,
          children
        })
      }))
    })), name && (0, import_jsx_runtime23.jsx)("input", {
      type: "hidden",
      name,
      value: getSerializedValue(selectedOption)
    })]
  });
});
true ? SelectUnstyled.propTypes = {
  autoFocus: import_prop_types16.default.bool,
  children: import_prop_types16.default.node,
  component: import_prop_types16.default.elementType,
  components: import_prop_types16.default.shape({
    Listbox: import_prop_types16.default.elementType,
    Popper: import_prop_types16.default.elementType,
    Root: import_prop_types16.default.elementType
  }),
  componentsProps: import_prop_types16.default.shape({
    listbox: import_prop_types16.default.oneOfType([import_prop_types16.default.func, import_prop_types16.default.object]),
    popper: import_prop_types16.default.oneOfType([import_prop_types16.default.func, import_prop_types16.default.object]),
    root: import_prop_types16.default.oneOfType([import_prop_types16.default.func, import_prop_types16.default.object])
  }),
  defaultListboxOpen: import_prop_types16.default.bool,
  defaultValue: import_prop_types16.default.any,
  disabled: import_prop_types16.default.bool,
  getSerializedValue: import_prop_types16.default.func,
  listboxId: import_prop_types16.default.string,
  listboxOpen: import_prop_types16.default.bool,
  name: import_prop_types16.default.string,
  onChange: import_prop_types16.default.func,
  onListboxOpenChange: import_prop_types16.default.func,
  optionStringifier: import_prop_types16.default.func,
  renderValue: import_prop_types16.default.func,
  value: import_prop_types16.default.any
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/SliderUnstyled/SliderUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React33 = __toESM(require_react());
var import_prop_types18 = __toESM(require_prop_types());
init_clsx_m();
init_esm();

// node_modules/@mui/joy/node_modules/@mui/base/SliderUnstyled/sliderUnstyledClasses.js
function getSliderUtilityClass(slot) {
  return generateUtilityClass("MuiSlider", slot);
}
var sliderUnstyledClasses = generateUtilityClasses("MuiSlider", ["root", "active", "focusVisible", "disabled", "dragging", "marked", "vertical", "trackInverted", "trackFalse", "rail", "track", "mark", "markActive", "markLabel", "markLabelActive", "thumb", "valueLabel", "valueLabelOpen", "valueLabelCircle", "valueLabelLabel"]);
var sliderUnstyledClasses_default = sliderUnstyledClasses;

// node_modules/@mui/joy/node_modules/@mui/base/SliderUnstyled/SliderValueLabelUnstyled.js
var React31 = __toESM(require_react());
var import_prop_types17 = __toESM(require_prop_types());
init_clsx_m();
var import_jsx_runtime25 = __toESM(require_jsx_runtime());
var import_jsx_runtime26 = __toESM(require_jsx_runtime());
var useValueLabelClasses = (props) => {
  const {
    open
  } = props;
  const utilityClasses = {
    offset: clsx_m_default(open && sliderUnstyledClasses_default.valueLabelOpen),
    circle: sliderUnstyledClasses_default.valueLabelCircle,
    label: sliderUnstyledClasses_default.valueLabelLabel
  };
  return utilityClasses;
};
function SliderValueLabelUnstyled(props) {
  const {
    children,
    className,
    value
  } = props;
  const classes = useValueLabelClasses(props);
  return React31.cloneElement(children, {
    className: clsx_m_default(children.props.className)
  }, (0, import_jsx_runtime26.jsxs)(React31.Fragment, {
    children: [children.props.children, (0, import_jsx_runtime25.jsx)("span", {
      className: clsx_m_default(classes.offset, className),
      "aria-hidden": true,
      children: (0, import_jsx_runtime25.jsx)("span", {
        className: classes.circle,
        children: (0, import_jsx_runtime25.jsx)("span", {
          className: classes.label,
          children: value
        })
      })
    })]
  }));
}
true ? SliderValueLabelUnstyled.propTypes = {
  children: import_prop_types17.default.element.isRequired,
  className: import_prop_types17.default.string,
  theme: import_prop_types17.default.any,
  value: import_prop_types17.default.node
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/SliderUnstyled/useSlider.js
init_extends();
var React32 = __toESM(require_react());
init_esm();
var INTENTIONAL_DRAG_COUNT_THRESHOLD = 2;
function asc(a, b) {
  return a - b;
}
function clamp(value, min, max) {
  if (value == null) {
    return min;
  }
  return Math.min(Math.max(min, value), max);
}
function findClosest(values, currentValue) {
  var _values$reduce;
  const {
    index: closestIndex
  } = (_values$reduce = values.reduce((acc, value, index) => {
    const distance = Math.abs(currentValue - value);
    if (acc === null || distance < acc.distance || distance === acc.distance) {
      return {
        distance,
        index
      };
    }
    return acc;
  }, null)) != null ? _values$reduce : {};
  return closestIndex;
}
function trackFinger(event, touchId) {
  if (touchId.current !== void 0 && event.changedTouches) {
    const touchEvent = event;
    for (let i = 0; i < touchEvent.changedTouches.length; i += 1) {
      const touch = touchEvent.changedTouches[i];
      if (touch.identifier === touchId.current) {
        return {
          x: touch.clientX,
          y: touch.clientY
        };
      }
    }
    return false;
  }
  return {
    x: event.clientX,
    y: event.clientY
  };
}
function valueToPercent(value, min, max) {
  return (value - min) * 100 / (max - min);
}
function percentToValue(percent, min, max) {
  return (max - min) * percent + min;
}
function getDecimalPrecision(num) {
  if (Math.abs(num) < 1) {
    const parts = num.toExponential().split("e-");
    const matissaDecimalPart = parts[0].split(".")[1];
    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);
  }
  const decimalPart = num.toString().split(".")[1];
  return decimalPart ? decimalPart.length : 0;
}
function roundValueToStep(value, step, min) {
  const nearest = Math.round((value - min) / step) * step + min;
  return Number(nearest.toFixed(getDecimalPrecision(step)));
}
function setValueIndex({
  values,
  newValue,
  index
}) {
  const output = values.slice();
  output[index] = newValue;
  return output.sort(asc);
}
function focusThumb({
  sliderRef,
  activeIndex,
  setActive
}) {
  var _sliderRef$current, _doc$activeElement;
  const doc = ownerDocument(sliderRef.current);
  if (!((_sliderRef$current = sliderRef.current) != null && _sliderRef$current.contains(doc.activeElement)) || Number(doc == null ? void 0 : (_doc$activeElement = doc.activeElement) == null ? void 0 : _doc$activeElement.getAttribute("data-index")) !== activeIndex) {
    var _sliderRef$current2;
    (_sliderRef$current2 = sliderRef.current) == null ? void 0 : _sliderRef$current2.querySelector(`[type="range"][data-index="${activeIndex}"]`).focus();
  }
  if (setActive) {
    setActive(activeIndex);
  }
}
var axisProps = {
  horizontal: {
    offset: (percent) => ({
      left: `${percent}%`
    }),
    leap: (percent) => ({
      width: `${percent}%`
    })
  },
  "horizontal-reverse": {
    offset: (percent) => ({
      right: `${percent}%`
    }),
    leap: (percent) => ({
      width: `${percent}%`
    })
  },
  vertical: {
    offset: (percent) => ({
      bottom: `${percent}%`
    }),
    leap: (percent) => ({
      height: `${percent}%`
    })
  }
};
var Identity = (x) => x;
var cachedSupportsTouchActionNone;
function doesSupportTouchActionNone() {
  if (cachedSupportsTouchActionNone === void 0) {
    if (typeof CSS !== "undefined" && typeof CSS.supports === "function") {
      cachedSupportsTouchActionNone = CSS.supports("touch-action", "none");
    } else {
      cachedSupportsTouchActionNone = true;
    }
  }
  return cachedSupportsTouchActionNone;
}
function useSlider(parameters) {
  const {
    "aria-labelledby": ariaLabelledby,
    defaultValue,
    disabled = false,
    disableSwap = false,
    isRtl = false,
    marks: marksProp = false,
    max = 100,
    min = 0,
    name,
    onChange,
    onChangeCommitted,
    orientation = "horizontal",
    ref,
    scale = Identity,
    step = 1,
    tabIndex,
    value: valueProp
  } = parameters;
  const touchId = React32.useRef();
  const [active, setActive] = React32.useState(-1);
  const [open, setOpen] = React32.useState(-1);
  const [dragging, setDragging] = React32.useState(false);
  const moveCount = React32.useRef(0);
  const [valueDerived, setValueState] = useControlled({
    controlled: valueProp,
    default: defaultValue != null ? defaultValue : min,
    name: "Slider"
  });
  const handleChange = onChange && ((event, value, thumbIndex) => {
    const nativeEvent = event.nativeEvent || event;
    const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
    Object.defineProperty(clonedEvent, "target", {
      writable: true,
      value: {
        value,
        name
      }
    });
    onChange(clonedEvent, value, thumbIndex);
  });
  const range = Array.isArray(valueDerived);
  let values = range ? valueDerived.slice().sort(asc) : [valueDerived];
  values = values.map((value) => clamp(value, min, max));
  const marks = marksProp === true && step !== null ? [...Array(Math.floor((max - min) / step) + 1)].map((_2, index) => ({
    value: min + step * index
  })) : marksProp || [];
  const marksValues = marks.map((mark) => mark.value);
  const {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible();
  const [focusedThumbIndex, setFocusedThumbIndex] = React32.useState(-1);
  const sliderRef = React32.useRef();
  const handleFocusRef = useForkRef(focusVisibleRef, sliderRef);
  const handleRef = useForkRef(ref, handleFocusRef);
  const createHandleHiddenInputFocus = (otherHandlers) => (event) => {
    var _otherHandlers$onFocu;
    const index = Number(event.currentTarget.getAttribute("data-index"));
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setFocusedThumbIndex(index);
    }
    setOpen(index);
    otherHandlers == null ? void 0 : (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);
  };
  const createHandleHiddenInputBlur = (otherHandlers) => (event) => {
    var _otherHandlers$onBlur;
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusedThumbIndex(-1);
    }
    setOpen(-1);
    otherHandlers == null ? void 0 : (_otherHandlers$onBlur = otherHandlers.onBlur) == null ? void 0 : _otherHandlers$onBlur.call(otherHandlers, event);
  };
  useEnhancedEffect_default(() => {
    if (disabled && sliderRef.current.contains(document.activeElement)) {
      var _document$activeEleme;
      (_document$activeEleme = document.activeElement) == null ? void 0 : _document$activeEleme.blur();
    }
  }, [disabled]);
  if (disabled && active !== -1) {
    setActive(-1);
  }
  if (disabled && focusedThumbIndex !== -1) {
    setFocusedThumbIndex(-1);
  }
  const createHandleHiddenInputChange = (otherHandlers) => (event) => {
    var _otherHandlers$onChan;
    (_otherHandlers$onChan = otherHandlers.onChange) == null ? void 0 : _otherHandlers$onChan.call(otherHandlers, event);
    const index = Number(event.currentTarget.getAttribute("data-index"));
    const value = values[index];
    const marksIndex = marksValues.indexOf(value);
    let newValue = event.target.valueAsNumber;
    if (marks && step == null) {
      newValue = newValue < value ? marksValues[marksIndex - 1] : marksValues[marksIndex + 1];
    }
    newValue = clamp(newValue, min, max);
    if (marks && step == null) {
      const currentMarkIndex = marksValues.indexOf(values[index]);
      newValue = newValue < values[index] ? marksValues[currentMarkIndex - 1] : marksValues[currentMarkIndex + 1];
    }
    if (range) {
      if (disableSwap) {
        newValue = clamp(newValue, values[index - 1] || -Infinity, values[index + 1] || Infinity);
      }
      const previousValue = newValue;
      newValue = setValueIndex({
        values,
        newValue,
        index
      });
      let activeIndex = index;
      if (!disableSwap) {
        activeIndex = newValue.indexOf(previousValue);
      }
      focusThumb({
        sliderRef,
        activeIndex
      });
    }
    setValueState(newValue);
    setFocusedThumbIndex(index);
    if (handleChange) {
      handleChange(event, newValue, index);
    }
    if (onChangeCommitted) {
      onChangeCommitted(event, newValue);
    }
  };
  const previousIndex = React32.useRef();
  let axis = orientation;
  if (isRtl && orientation === "horizontal") {
    axis += "-reverse";
  }
  const getFingerNewValue = ({
    finger,
    move = false
  }) => {
    const {
      current: slider
    } = sliderRef;
    const {
      width,
      height,
      bottom,
      left
    } = slider.getBoundingClientRect();
    let percent;
    if (axis.indexOf("vertical") === 0) {
      percent = (bottom - finger.y) / height;
    } else {
      percent = (finger.x - left) / width;
    }
    if (axis.indexOf("-reverse") !== -1) {
      percent = 1 - percent;
    }
    let newValue;
    newValue = percentToValue(percent, min, max);
    if (step) {
      newValue = roundValueToStep(newValue, step, min);
    } else {
      const closestIndex = findClosest(marksValues, newValue);
      newValue = marksValues[closestIndex];
    }
    newValue = clamp(newValue, min, max);
    let activeIndex = 0;
    if (range) {
      if (!move) {
        activeIndex = findClosest(values, newValue);
      } else {
        activeIndex = previousIndex.current;
      }
      if (disableSwap) {
        newValue = clamp(newValue, values[activeIndex - 1] || -Infinity, values[activeIndex + 1] || Infinity);
      }
      const previousValue = newValue;
      newValue = setValueIndex({
        values,
        newValue,
        index: activeIndex
      });
      if (!(disableSwap && move)) {
        activeIndex = newValue.indexOf(previousValue);
        previousIndex.current = activeIndex;
      }
    }
    return {
      newValue,
      activeIndex
    };
  };
  const handleTouchMove = useEventCallback((nativeEvent) => {
    const finger = trackFinger(nativeEvent, touchId);
    if (!finger) {
      return;
    }
    moveCount.current += 1;
    if (nativeEvent.type === "mousemove" && nativeEvent.buttons === 0) {
      handleTouchEnd(nativeEvent);
      return;
    }
    const {
      newValue,
      activeIndex
    } = getFingerNewValue({
      finger,
      move: true
    });
    focusThumb({
      sliderRef,
      activeIndex,
      setActive
    });
    setValueState(newValue);
    if (!dragging && moveCount.current > INTENTIONAL_DRAG_COUNT_THRESHOLD) {
      setDragging(true);
    }
    if (handleChange && newValue !== valueDerived) {
      handleChange(nativeEvent, newValue, activeIndex);
    }
  });
  const handleTouchEnd = useEventCallback((nativeEvent) => {
    const finger = trackFinger(nativeEvent, touchId);
    setDragging(false);
    if (!finger) {
      return;
    }
    const {
      newValue
    } = getFingerNewValue({
      finger,
      move: true
    });
    setActive(-1);
    if (nativeEvent.type === "touchend") {
      setOpen(-1);
    }
    if (onChangeCommitted) {
      onChangeCommitted(nativeEvent, newValue);
    }
    touchId.current = void 0;
    stopListening();
  });
  const handleTouchStart = useEventCallback((nativeEvent) => {
    if (disabled) {
      return;
    }
    if (!doesSupportTouchActionNone()) {
      nativeEvent.preventDefault();
    }
    const touch = nativeEvent.changedTouches[0];
    if (touch != null) {
      touchId.current = touch.identifier;
    }
    const finger = trackFinger(nativeEvent, touchId);
    if (finger !== false) {
      const {
        newValue,
        activeIndex
      } = getFingerNewValue({
        finger
      });
      focusThumb({
        sliderRef,
        activeIndex,
        setActive
      });
      setValueState(newValue);
      if (handleChange) {
        handleChange(nativeEvent, newValue, activeIndex);
      }
    }
    moveCount.current = 0;
    const doc = ownerDocument(sliderRef.current);
    doc.addEventListener("touchmove", handleTouchMove);
    doc.addEventListener("touchend", handleTouchEnd);
  });
  const stopListening = React32.useCallback(() => {
    const doc = ownerDocument(sliderRef.current);
    doc.removeEventListener("mousemove", handleTouchMove);
    doc.removeEventListener("mouseup", handleTouchEnd);
    doc.removeEventListener("touchmove", handleTouchMove);
    doc.removeEventListener("touchend", handleTouchEnd);
  }, [handleTouchEnd, handleTouchMove]);
  React32.useEffect(() => {
    const {
      current: slider
    } = sliderRef;
    slider.addEventListener("touchstart", handleTouchStart, {
      passive: doesSupportTouchActionNone()
    });
    return () => {
      slider.removeEventListener("touchstart", handleTouchStart, {
        passive: doesSupportTouchActionNone()
      });
      stopListening();
    };
  }, [stopListening, handleTouchStart]);
  React32.useEffect(() => {
    if (disabled) {
      stopListening();
    }
  }, [disabled, stopListening]);
  const createHandleMouseDown = (otherHandlers) => (event) => {
    var _otherHandlers$onMous;
    (_otherHandlers$onMous = otherHandlers.onMouseDown) == null ? void 0 : _otherHandlers$onMous.call(otherHandlers, event);
    if (disabled) {
      return;
    }
    if (event.defaultPrevented) {
      return;
    }
    if (event.button !== 0) {
      return;
    }
    event.preventDefault();
    const finger = trackFinger(event, touchId);
    if (finger !== false) {
      const {
        newValue,
        activeIndex
      } = getFingerNewValue({
        finger
      });
      focusThumb({
        sliderRef,
        activeIndex,
        setActive
      });
      setValueState(newValue);
      if (handleChange) {
        handleChange(event, newValue, activeIndex);
      }
    }
    moveCount.current = 0;
    const doc = ownerDocument(sliderRef.current);
    doc.addEventListener("mousemove", handleTouchMove);
    doc.addEventListener("mouseup", handleTouchEnd);
  };
  const trackOffset = valueToPercent(range ? values[0] : min, min, max);
  const trackLeap = valueToPercent(values[values.length - 1], min, max) - trackOffset;
  const getRootProps = (otherHandlers = {}) => {
    const ownEventHandlers = {
      onMouseDown: createHandleMouseDown(otherHandlers || {})
    };
    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);
    return _extends({
      ref: handleRef
    }, mergedEventHandlers);
  };
  const createHandleMouseOver = (otherHandlers) => (event) => {
    var _otherHandlers$onMous2;
    (_otherHandlers$onMous2 = otherHandlers.onMouseOver) == null ? void 0 : _otherHandlers$onMous2.call(otherHandlers, event);
    const index = Number(event.currentTarget.getAttribute("data-index"));
    setOpen(index);
  };
  const createHandleMouseLeave = (otherHandlers) => (event) => {
    var _otherHandlers$onMous3;
    (_otherHandlers$onMous3 = otherHandlers.onMouseLeave) == null ? void 0 : _otherHandlers$onMous3.call(otherHandlers, event);
    setOpen(-1);
  };
  const getThumbProps = (otherHandlers = {}) => {
    const ownEventHandlers = {
      onMouseOver: createHandleMouseOver(otherHandlers || {}),
      onMouseLeave: createHandleMouseLeave(otherHandlers || {})
    };
    return _extends({}, otherHandlers, ownEventHandlers);
  };
  const getHiddenInputProps = (otherHandlers = {}) => {
    var _parameters$step;
    const ownEventHandlers = {
      onChange: createHandleHiddenInputChange(otherHandlers || {}),
      onFocus: createHandleHiddenInputFocus(otherHandlers || {}),
      onBlur: createHandleHiddenInputBlur(otherHandlers || {})
    };
    const mergedEventHandlers = _extends({}, otherHandlers, ownEventHandlers);
    return _extends({
      tabIndex,
      "aria-labelledby": ariaLabelledby,
      "aria-orientation": orientation,
      "aria-valuemax": scale(max),
      "aria-valuemin": scale(min),
      name,
      type: "range",
      min: parameters.min,
      max: parameters.max,
      step: (_parameters$step = parameters.step) != null ? _parameters$step : void 0,
      disabled
    }, mergedEventHandlers, {
      style: _extends({}, visuallyHidden_default, {
        direction: isRtl ? "rtl" : "ltr",
        width: "100%",
        height: "100%"
      })
    });
  };
  return {
    active,
    axis,
    axisProps,
    dragging,
    focusedThumbIndex,
    getHiddenInputProps,
    getRootProps,
    getThumbProps,
    marks,
    open,
    range,
    trackLeap,
    trackOffset,
    values
  };
}

// node_modules/@mui/joy/node_modules/@mui/base/SliderUnstyled/SliderUnstyled.js
var import_jsx_runtime27 = __toESM(require_jsx_runtime());
var import_jsx_runtime28 = __toESM(require_jsx_runtime());
var _excluded17 = ["aria-label", "aria-valuetext", "className", "component", "classes", "disableSwap", "disabled", "getAriaLabel", "getAriaValueText", "marks", "max", "min", "name", "onChange", "onChangeCommitted", "orientation", "scale", "step", "tabIndex", "track", "value", "valueLabelDisplay", "valueLabelFormat", "isRtl", "components", "componentsProps"];
var Identity2 = (x) => x;
var useUtilityClasses10 = (ownerState) => {
  const {
    disabled,
    dragging,
    marked,
    orientation,
    track,
    classes
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", dragging && "dragging", marked && "marked", orientation === "vertical" && "vertical", track === "inverted" && "trackInverted", track === false && "trackFalse"],
    rail: ["rail"],
    track: ["track"],
    mark: ["mark"],
    markActive: ["markActive"],
    markLabel: ["markLabel"],
    markLabelActive: ["markLabelActive"],
    valueLabel: ["valueLabel"],
    thumb: ["thumb", disabled && "disabled"],
    active: ["active"],
    disabled: ["disabled"],
    focusVisible: ["focusVisible"]
  };
  return composeClasses(slots, getSliderUtilityClass, classes);
};
var Forward = ({
  children
}) => children;
var SliderUnstyled = React33.forwardRef(function SliderUnstyled2(props, ref) {
  var _ref, _components$Rail, _components$Track, _components$Thumb, _components$ValueLabe, _components$Mark, _components$MarkLabel;
  const {
    "aria-label": ariaLabel,
    "aria-valuetext": ariaValuetext,
    className,
    component,
    classes: classesProp,
    disableSwap = false,
    disabled = false,
    getAriaLabel,
    getAriaValueText,
    marks: marksProp = false,
    max = 100,
    min = 0,
    orientation = "horizontal",
    scale = Identity2,
    step = 1,
    track = "normal",
    valueLabelDisplay = "off",
    valueLabelFormat = Identity2,
    isRtl = false,
    components = {},
    componentsProps = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded17);
  const ownerState = _extends({}, props, {
    marks: marksProp,
    classes: classesProp,
    disabled,
    isRtl,
    max,
    min,
    orientation,
    scale,
    step,
    track,
    valueLabelDisplay,
    valueLabelFormat
  });
  const {
    axisProps: axisProps2,
    getRootProps,
    getHiddenInputProps,
    getThumbProps,
    open,
    active,
    axis,
    range,
    focusedThumbIndex,
    dragging,
    marks,
    values,
    trackOffset,
    trackLeap
  } = useSlider(_extends({}, ownerState, {
    ref
  }));
  ownerState.marked = marks.length > 0 && marks.some((mark) => mark.label);
  ownerState.dragging = dragging;
  ownerState.focusedThumbIndex = focusedThumbIndex;
  const classes = useUtilityClasses10(ownerState);
  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : "span";
  const rootProps = useSlotProps({
    elementType: Root,
    getSlotProps: getRootProps,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    ownerState,
    className: [classes.root, className]
  });
  const Rail = (_components$Rail = components.Rail) != null ? _components$Rail : "span";
  const railProps = useSlotProps({
    elementType: Rail,
    externalSlotProps: componentsProps.rail,
    ownerState,
    className: classes.rail
  });
  const Track = (_components$Track = components.Track) != null ? _components$Track : "span";
  const trackProps = useSlotProps({
    elementType: Track,
    externalSlotProps: componentsProps.track,
    additionalProps: {
      style: _extends({}, axisProps2[axis].offset(trackOffset), axisProps2[axis].leap(trackLeap))
    },
    ownerState,
    className: classes.track
  });
  const Thumb = (_components$Thumb = components.Thumb) != null ? _components$Thumb : "span";
  const thumbProps = useSlotProps({
    elementType: Thumb,
    getSlotProps: getThumbProps,
    externalSlotProps: componentsProps.thumb,
    ownerState
  });
  const ValueLabel = (_components$ValueLabe = components.ValueLabel) != null ? _components$ValueLabe : SliderValueLabelUnstyled;
  const valueLabelProps = useSlotProps({
    elementType: ValueLabel,
    externalSlotProps: componentsProps.valueLabel,
    ownerState
  });
  const Mark = (_components$Mark = components.Mark) != null ? _components$Mark : "span";
  const markProps = useSlotProps({
    elementType: Mark,
    externalSlotProps: componentsProps.mark,
    ownerState,
    className: classes.mark
  });
  const MarkLabel = (_components$MarkLabel = components.MarkLabel) != null ? _components$MarkLabel : "span";
  const markLabelProps = useSlotProps({
    elementType: MarkLabel,
    externalSlotProps: componentsProps.markLabel,
    ownerState
  });
  const Input3 = components.Input || "input";
  const inputProps = useSlotProps({
    elementType: Input3,
    getSlotProps: getHiddenInputProps,
    externalSlotProps: componentsProps.input,
    ownerState
  });
  return (0, import_jsx_runtime28.jsxs)(Root, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime27.jsx)(Rail, _extends({}, railProps)), (0, import_jsx_runtime27.jsx)(Track, _extends({}, trackProps)), marks.filter((mark) => mark.value >= min && mark.value <= max).map((mark, index) => {
      const percent = valueToPercent(mark.value, min, max);
      const style = axisProps2[axis].offset(percent);
      let markActive;
      if (track === false) {
        markActive = values.indexOf(mark.value) !== -1;
      } else {
        markActive = track === "normal" && (range ? mark.value >= values[0] && mark.value <= values[values.length - 1] : mark.value <= values[0]) || track === "inverted" && (range ? mark.value <= values[0] || mark.value >= values[values.length - 1] : mark.value >= values[0]);
      }
      return (0, import_jsx_runtime28.jsxs)(React33.Fragment, {
        children: [(0, import_jsx_runtime27.jsx)(Mark, _extends({
          "data-index": index
        }, markProps, !isHostComponent_default(Mark) && {
          markActive
        }, {
          style: _extends({}, style, markProps.style),
          className: clsx_m_default(markProps.className, markActive && classes.markActive)
        })), mark.label != null ? (0, import_jsx_runtime27.jsx)(MarkLabel, _extends({
          "aria-hidden": true,
          "data-index": index
        }, markLabelProps, !isHostComponent_default(MarkLabel) && {
          markLabelActive: markActive
        }, {
          style: _extends({}, style, markLabelProps.style),
          className: clsx_m_default(classes.markLabel, markLabelProps.className, markActive && classes.markLabelActive),
          children: mark.label
        })) : null]
      }, mark.value);
    }), values.map((value, index) => {
      const percent = valueToPercent(value, min, max);
      const style = axisProps2[axis].offset(percent);
      const ValueLabelComponent = valueLabelDisplay === "off" ? Forward : ValueLabel;
      return (0, import_jsx_runtime27.jsx)(React33.Fragment, {
        children: (0, import_jsx_runtime27.jsx)(ValueLabelComponent, _extends({}, !isHostComponent_default(ValueLabelComponent) && {
          valueLabelFormat,
          valueLabelDisplay,
          value: typeof valueLabelFormat === "function" ? valueLabelFormat(scale(value), index) : valueLabelFormat,
          index,
          open: open === index || active === index || valueLabelDisplay === "on",
          disabled
        }, valueLabelProps, {
          className: clsx_m_default(classes.valueLabel, valueLabelProps.className),
          children: (0, import_jsx_runtime27.jsx)(Thumb, _extends({
            "data-index": index,
            "data-focusvisible": focusedThumbIndex === index
          }, thumbProps, {
            className: clsx_m_default(classes.thumb, thumbProps.className, active === index && classes.active, focusedThumbIndex === index && classes.focusVisible),
            style: _extends({}, style, {
              pointerEvents: disableSwap && active !== index ? "none" : void 0
            }, thumbProps.style),
            children: (0, import_jsx_runtime27.jsx)(Input3, _extends({
              "data-index": index,
              "aria-label": getAriaLabel ? getAriaLabel(index) : ariaLabel,
              "aria-valuenow": scale(value),
              "aria-valuetext": getAriaValueText ? getAriaValueText(scale(value), index) : ariaValuetext,
              value: values[index]
            }, inputProps))
          }))
        }))
      }, index);
    })]
  }));
});
true ? SliderUnstyled.propTypes = {
  "aria-label": chainPropTypes(import_prop_types18.default.string, (props) => {
    const range = Array.isArray(props.value || props.defaultValue);
    if (range && props["aria-label"] != null) {
      return new Error("MUI: You need to use the `getAriaLabel` prop instead of `aria-label` when using a range slider.");
    }
    return null;
  }),
  "aria-labelledby": import_prop_types18.default.string,
  "aria-valuetext": chainPropTypes(import_prop_types18.default.string, (props) => {
    const range = Array.isArray(props.value || props.defaultValue);
    if (range && props["aria-valuetext"] != null) {
      return new Error("MUI: You need to use the `getAriaValueText` prop instead of `aria-valuetext` when using a range slider.");
    }
    return null;
  }),
  children: import_prop_types18.default.node,
  classes: import_prop_types18.default.object,
  className: import_prop_types18.default.string,
  component: import_prop_types18.default.elementType,
  components: import_prop_types18.default.shape({
    Input: import_prop_types18.default.elementType,
    Mark: import_prop_types18.default.elementType,
    MarkLabel: import_prop_types18.default.elementType,
    Rail: import_prop_types18.default.elementType,
    Root: import_prop_types18.default.elementType,
    Thumb: import_prop_types18.default.elementType,
    Track: import_prop_types18.default.elementType,
    ValueLabel: import_prop_types18.default.elementType
  }),
  componentsProps: import_prop_types18.default.shape({
    input: import_prop_types18.default.oneOfType([import_prop_types18.default.func, import_prop_types18.default.object]),
    mark: import_prop_types18.default.oneOfType([import_prop_types18.default.func, import_prop_types18.default.object]),
    markLabel: import_prop_types18.default.oneOfType([import_prop_types18.default.func, import_prop_types18.default.object]),
    rail: import_prop_types18.default.oneOfType([import_prop_types18.default.func, import_prop_types18.default.object]),
    root: import_prop_types18.default.oneOfType([import_prop_types18.default.func, import_prop_types18.default.object]),
    thumb: import_prop_types18.default.oneOfType([import_prop_types18.default.func, import_prop_types18.default.object]),
    track: import_prop_types18.default.oneOfType([import_prop_types18.default.func, import_prop_types18.default.object]),
    valueLabel: import_prop_types18.default.oneOfType([import_prop_types18.default.func, import_prop_types18.default.shape({
      children: import_prop_types18.default.element,
      className: import_prop_types18.default.string,
      components: import_prop_types18.default.shape({
        Root: import_prop_types18.default.elementType
      }),
      open: import_prop_types18.default.bool,
      style: import_prop_types18.default.object,
      value: import_prop_types18.default.number,
      valueLabelDisplay: import_prop_types18.default.oneOf(["auto", "off", "on"])
    })])
  }),
  defaultValue: import_prop_types18.default.oneOfType([import_prop_types18.default.arrayOf(import_prop_types18.default.number), import_prop_types18.default.number]),
  disabled: import_prop_types18.default.bool,
  disableSwap: import_prop_types18.default.bool,
  getAriaLabel: import_prop_types18.default.func,
  getAriaValueText: import_prop_types18.default.func,
  isRtl: import_prop_types18.default.bool,
  marks: import_prop_types18.default.oneOfType([import_prop_types18.default.arrayOf(import_prop_types18.default.shape({
    label: import_prop_types18.default.node,
    value: import_prop_types18.default.number.isRequired
  })), import_prop_types18.default.bool]),
  max: import_prop_types18.default.number,
  min: import_prop_types18.default.number,
  name: import_prop_types18.default.string,
  onChange: import_prop_types18.default.func,
  onChangeCommitted: import_prop_types18.default.func,
  orientation: import_prop_types18.default.oneOf(["horizontal", "vertical"]),
  scale: import_prop_types18.default.func,
  step: import_prop_types18.default.number,
  tabIndex: import_prop_types18.default.number,
  track: import_prop_types18.default.oneOf(["inverted", "normal", false]),
  value: import_prop_types18.default.oneOfType([import_prop_types18.default.arrayOf(import_prop_types18.default.number), import_prop_types18.default.number]),
  valueLabelDisplay: import_prop_types18.default.oneOf(["auto", "off", "on"]),
  valueLabelFormat: import_prop_types18.default.oneOfType([import_prop_types18.default.func, import_prop_types18.default.string])
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/SwitchUnstyled/SwitchUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React35 = __toESM(require_react());
var import_prop_types19 = __toESM(require_prop_types());

// node_modules/@mui/joy/node_modules/@mui/base/SwitchUnstyled/useSwitch.js
init_extends();
var React34 = __toESM(require_react());
init_esm();
function useSwitch(props) {
  const {
    checked: checkedProp,
    defaultChecked,
    disabled,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible,
    readOnly,
    required
  } = props;
  const [checked, setCheckedState] = useControlled({
    controlled: checkedProp,
    default: Boolean(defaultChecked),
    name: "Switch",
    state: "checked"
  });
  const createHandleInputChange = (otherProps) => (event) => {
    var _otherProps$onChange;
    if (event.nativeEvent.defaultPrevented) {
      return;
    }
    setCheckedState(event.target.checked);
    onChange == null ? void 0 : onChange(event);
    (_otherProps$onChange = otherProps.onChange) == null ? void 0 : _otherProps$onChange.call(otherProps, event);
  };
  const {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible();
  const [focusVisible, setFocusVisible] = React34.useState(false);
  if (disabled && focusVisible) {
    setFocusVisible(false);
  }
  React34.useEffect(() => {
    isFocusVisibleRef.current = focusVisible;
  }, [focusVisible, isFocusVisibleRef]);
  const inputRef = React34.useRef(null);
  const createHandleFocus = (otherProps) => (event) => {
    var _otherProps$onFocus;
    if (!inputRef.current) {
      inputRef.current = event.currentTarget;
    }
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setFocusVisible(true);
      onFocusVisible == null ? void 0 : onFocusVisible(event);
    }
    onFocus == null ? void 0 : onFocus(event);
    (_otherProps$onFocus = otherProps.onFocus) == null ? void 0 : _otherProps$onFocus.call(otherProps, event);
  };
  const createHandleBlur = (otherProps) => (event) => {
    var _otherProps$onBlur;
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }
    onBlur == null ? void 0 : onBlur(event);
    (_otherProps$onBlur = otherProps.onBlur) == null ? void 0 : _otherProps$onBlur.call(otherProps, event);
  };
  const handleRefChange = useForkRef(focusVisibleRef, inputRef);
  const getInputProps = (otherProps = {}) => _extends({
    checked: checkedProp,
    defaultChecked,
    disabled,
    readOnly,
    ref: handleRefChange,
    required,
    type: "checkbox"
  }, otherProps, {
    onChange: createHandleInputChange(otherProps),
    onFocus: createHandleFocus(otherProps),
    onBlur: createHandleBlur(otherProps)
  });
  return {
    checked,
    disabled: Boolean(disabled),
    focusVisible,
    getInputProps,
    readOnly: Boolean(readOnly)
  };
}

// node_modules/@mui/joy/node_modules/@mui/base/SwitchUnstyled/switchUnstyledClasses.js
function getSwitchUnstyledUtilityClass(slot) {
  return generateUtilityClass("MuiSwitch", slot);
}
var switchUnstyledClasses = generateUtilityClasses("MuiSwitch", ["root", "input", "track", "thumb", "checked", "disabled", "focusVisible", "readOnly"]);

// node_modules/@mui/joy/node_modules/@mui/base/SwitchUnstyled/SwitchUnstyled.js
var import_jsx_runtime29 = __toESM(require_jsx_runtime());
var import_jsx_runtime30 = __toESM(require_jsx_runtime());
var _excluded18 = ["checked", "component", "components", "componentsProps", "defaultChecked", "disabled", "onBlur", "onChange", "onFocus", "onFocusVisible", "readOnly", "required"];
var useUtilityClasses11 = (ownerState) => {
  const {
    checked,
    disabled,
    focusVisible,
    readOnly
  } = ownerState;
  const slots = {
    root: ["root", checked && "checked", disabled && "disabled", focusVisible && "focusVisible", readOnly && "readOnly"],
    thumb: ["thumb"],
    input: ["input"],
    track: ["track"]
  };
  return composeClasses(slots, getSwitchUnstyledUtilityClass, {});
};
var SwitchUnstyled = React35.forwardRef(function SwitchUnstyled2(props, ref) {
  var _ref, _components$Thumb, _components$Input, _components$Track;
  const {
    checked: checkedProp,
    component,
    components = {},
    componentsProps = {},
    defaultChecked,
    disabled: disabledProp,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible,
    readOnly: readOnlyProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded18);
  const useSwitchProps = {
    checked: checkedProp,
    defaultChecked,
    disabled: disabledProp,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible,
    readOnly: readOnlyProp
  };
  const {
    getInputProps,
    checked,
    disabled,
    focusVisible,
    readOnly
  } = useSwitch(useSwitchProps);
  const ownerState = _extends({}, props, {
    checked,
    disabled,
    focusVisible,
    readOnly
  });
  const classes = useUtilityClasses11(ownerState);
  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : "span";
  const rootProps = useSlotProps({
    elementType: Root,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref
    },
    ownerState,
    className: classes.root
  });
  const Thumb = (_components$Thumb = components.Thumb) != null ? _components$Thumb : "span";
  const thumbProps = useSlotProps({
    elementType: Thumb,
    externalSlotProps: componentsProps.thumb,
    ownerState,
    className: classes.thumb
  });
  const Input3 = (_components$Input = components.Input) != null ? _components$Input : "input";
  const inputProps = useSlotProps({
    elementType: Input3,
    getSlotProps: getInputProps,
    externalSlotProps: componentsProps.input,
    ownerState,
    className: classes.input
  });
  const Track = components.Track === null ? () => null : (_components$Track = components.Track) != null ? _components$Track : "span";
  const trackProps = useSlotProps({
    elementType: Track,
    externalSlotProps: componentsProps.track,
    ownerState,
    className: classes.track
  });
  return (0, import_jsx_runtime30.jsxs)(Root, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime29.jsx)(Track, _extends({}, trackProps)), (0, import_jsx_runtime29.jsx)(Thumb, _extends({}, thumbProps)), (0, import_jsx_runtime29.jsx)(Input3, _extends({}, inputProps))]
  }));
});
true ? SwitchUnstyled.propTypes = {
  checked: import_prop_types19.default.bool,
  children: import_prop_types19.default.node,
  component: import_prop_types19.default.elementType,
  components: import_prop_types19.default.shape({
    Input: import_prop_types19.default.elementType,
    Root: import_prop_types19.default.elementType,
    Thumb: import_prop_types19.default.elementType,
    Track: import_prop_types19.default.oneOfType([import_prop_types19.default.elementType, import_prop_types19.default.oneOf([null])])
  }),
  componentsProps: import_prop_types19.default.shape({
    input: import_prop_types19.default.oneOfType([import_prop_types19.default.func, import_prop_types19.default.object]),
    root: import_prop_types19.default.oneOfType([import_prop_types19.default.func, import_prop_types19.default.object]),
    thumb: import_prop_types19.default.oneOfType([import_prop_types19.default.func, import_prop_types19.default.object]),
    track: import_prop_types19.default.oneOfType([import_prop_types19.default.func, import_prop_types19.default.object])
  }),
  defaultChecked: import_prop_types19.default.bool,
  disabled: import_prop_types19.default.bool,
  onBlur: import_prop_types19.default.func,
  onChange: import_prop_types19.default.func,
  onFocus: import_prop_types19.default.func,
  onFocusVisible: import_prop_types19.default.func,
  readOnly: import_prop_types19.default.bool,
  required: import_prop_types19.default.bool
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/TablePaginationUnstyled/TablePaginationUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React37 = __toESM(require_react());
var import_prop_types20 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/node_modules/@mui/base/TablePaginationUnstyled/TablePaginationActionsUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React36 = __toESM(require_react());
var import_jsx_runtime31 = __toESM(require_jsx_runtime());
var import_jsx_runtime32 = __toESM(require_jsx_runtime());
var _excluded19 = ["component", "components", "componentsProps", "count", "getItemAriaLabel", "onPageChange", "page", "rowsPerPage", "showFirstButton", "showLastButton", "direction", "ownerState"];
var _span;
var _span2;
var _span3;
var _span4;
var LastPageIconDefault = () => _span || (_span = (0, import_jsx_runtime31.jsx)("span", {
  children: "\u21FE|"
}));
var FirstPageIconDefault = () => _span2 || (_span2 = (0, import_jsx_runtime31.jsx)("span", {
  children: "|\u21FD"
}));
var NextPageIconDefault = () => _span3 || (_span3 = (0, import_jsx_runtime31.jsx)("span", {
  children: "\u21FE"
}));
var BackPageIconDefault = () => _span4 || (_span4 = (0, import_jsx_runtime31.jsx)("span", {
  children: "\u21FD"
}));
function defaultGetAriaLabel(type) {
  return `Go to ${type} page`;
}
var TablePaginationActionsUnstyled = React36.forwardRef(function TablePaginationActionsUnstyled2(props, ref) {
  var _ref, _components$Root, _components$FirstButt, _components$LastButto, _components$NextButto, _components$BackButto, _components$LastPageI, _components$FirstPage, _components$NextPageI, _components$BackPageI;
  const {
    component,
    components = {},
    componentsProps = {},
    count,
    getItemAriaLabel = defaultGetAriaLabel,
    onPageChange,
    page,
    rowsPerPage,
    showFirstButton = false,
    showLastButton = false,
    direction
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded19);
  const ownerState = props;
  const handleFirstPageButtonClick = (event) => {
    onPageChange(event, 0);
  };
  const handleBackButtonClick = (event) => {
    onPageChange(event, page - 1);
  };
  const handleNextButtonClick = (event) => {
    onPageChange(event, page + 1);
  };
  const handleLastPageButtonClick = (event) => {
    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));
  };
  const Root = (_ref = (_components$Root = components.Root) != null ? _components$Root : component) != null ? _ref : "div";
  const rootProps = useSlotProps({
    elementType: Root,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref
    },
    ownerState
  });
  const FirstButton = (_components$FirstButt = components.FirstButton) != null ? _components$FirstButt : "button";
  const firstButtonProps = useSlotProps({
    elementType: FirstButton,
    externalSlotProps: componentsProps.firstButton,
    additionalProps: {
      onClick: handleFirstPageButtonClick,
      disabled: page === 0,
      "aria-label": getItemAriaLabel("first", page),
      title: getItemAriaLabel("first", page)
    },
    ownerState
  });
  const LastButton = (_components$LastButto = components.LastButton) != null ? _components$LastButto : "button";
  const lastButtonProps = useSlotProps({
    elementType: LastButton,
    externalSlotProps: componentsProps.lastButton,
    additionalProps: {
      onClick: handleLastPageButtonClick,
      disabled: page >= Math.ceil(count / rowsPerPage) - 1,
      "aria-label": getItemAriaLabel("last", page),
      title: getItemAriaLabel("last", page)
    },
    ownerState
  });
  const NextButton = (_components$NextButto = components.NextButton) != null ? _components$NextButto : "button";
  const nextButtonProps = useSlotProps({
    elementType: NextButton,
    externalSlotProps: componentsProps.nextButton,
    additionalProps: {
      onClick: handleNextButtonClick,
      disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,
      "aria-label": getItemAriaLabel("next", page),
      title: getItemAriaLabel("next", page)
    },
    ownerState
  });
  const BackButton = (_components$BackButto = components.BackButton) != null ? _components$BackButto : "button";
  const backButtonProps = useSlotProps({
    elementType: BackButton,
    externalSlotProps: componentsProps.backButton,
    additionalProps: {
      onClick: handleBackButtonClick,
      disabled: page === 0,
      "aria-label": getItemAriaLabel("previous", page),
      title: getItemAriaLabel("previous", page)
    },
    ownerState
  });
  const LastPageIcon = (_components$LastPageI = components.LastPageIcon) != null ? _components$LastPageI : LastPageIconDefault;
  const FirstPageIcon = (_components$FirstPage = components.FirstPageIcon) != null ? _components$FirstPage : FirstPageIconDefault;
  const NextPageIcon = (_components$NextPageI = components.NextPageIcon) != null ? _components$NextPageI : NextPageIconDefault;
  const BackPageIcon = (_components$BackPageI = components.BackPageIcon) != null ? _components$BackPageI : BackPageIconDefault;
  return (0, import_jsx_runtime32.jsxs)(Root, _extends({}, rootProps, {
    children: [showFirstButton && (0, import_jsx_runtime31.jsx)(FirstButton, _extends({}, firstButtonProps, {
      children: direction === "rtl" ? (0, import_jsx_runtime31.jsx)(LastPageIcon, {}) : (0, import_jsx_runtime31.jsx)(FirstPageIcon, {})
    })), (0, import_jsx_runtime31.jsx)(BackButton, _extends({}, backButtonProps, {
      children: direction === "rtl" ? (0, import_jsx_runtime31.jsx)(NextPageIcon, {}) : (0, import_jsx_runtime31.jsx)(BackPageIcon, {})
    })), (0, import_jsx_runtime31.jsx)(NextButton, _extends({}, nextButtonProps, {
      children: direction === "rtl" ? (0, import_jsx_runtime31.jsx)(BackPageIcon, {}) : (0, import_jsx_runtime31.jsx)(NextPageIcon, {})
    })), showLastButton && (0, import_jsx_runtime31.jsx)(LastButton, _extends({}, lastButtonProps, {
      children: direction === "rtl" ? (0, import_jsx_runtime31.jsx)(FirstPageIcon, {}) : (0, import_jsx_runtime31.jsx)(LastPageIcon, {})
    }))]
  }));
});
var TablePaginationActionsUnstyled_default = TablePaginationActionsUnstyled;

// node_modules/@mui/joy/node_modules/@mui/base/TablePaginationUnstyled/tablePaginationUnstyledClasses.js
function getTablePaginationUnstyledUtilityClass(slot) {
  return generateUtilityClass("MuiTablePaginationUnstyled", slot);
}
var tablePaginationClasses = generateUtilityClasses("MuiTablePaginationUnstyled", ["root", "toolbar", "spacer", "selectLabel", "selectRoot", "select", "selectIcon", "input", "menuItem", "displayedRows", "actions"]);

// node_modules/@mui/joy/node_modules/@mui/base/TablePaginationUnstyled/TablePaginationUnstyled.js
var import_jsx_runtime33 = __toESM(require_jsx_runtime());
var import_react4 = __toESM(require_react());
var import_jsx_runtime34 = __toESM(require_jsx_runtime());
var _excluded20 = ["component", "components", "componentsProps", "colSpan", "count", "getItemAriaLabel", "labelDisplayedRows", "labelId", "labelRowsPerPage", "onPageChange", "onRowsPerPageChange", "page", "rowsPerPage", "rowsPerPageOptions", "selectId"];
function defaultLabelDisplayedRows({
  from,
  to,
  count
}) {
  return `${from}\u2013${to} of ${count !== -1 ? count : `more than ${to}`}`;
}
function defaultGetAriaLabel2(type) {
  return `Go to ${type} page`;
}
var useUtilityClasses12 = () => {
  const slots = {
    root: ["root"],
    toolbar: ["toolbar"],
    spacer: ["spacer"],
    selectLabel: ["selectLabel"],
    select: ["select"],
    input: ["input"],
    selectIcon: ["selectIcon"],
    menuItem: ["menuItem"],
    displayedRows: ["displayedRows"],
    actions: ["actions"]
  };
  return composeClasses(slots, getTablePaginationUnstyledUtilityClass, {});
};
var TablePaginationUnstyled = React37.forwardRef(function TablePaginationUnstyled2(props, ref) {
  var _ref, _components$Select, _components$Actions, _components$MenuItem, _components$SelectLab, _components$Displayed, _components$Toolbar, _components$Spacer;
  const {
    component,
    components = {},
    componentsProps = {},
    colSpan: colSpanProp,
    count,
    getItemAriaLabel = defaultGetAriaLabel2,
    labelDisplayedRows = defaultLabelDisplayedRows,
    labelId: labelIdProp,
    labelRowsPerPage = "Rows per page:",
    onPageChange,
    onRowsPerPageChange,
    page,
    rowsPerPage,
    rowsPerPageOptions = [10, 25, 50, 100],
    selectId: selectIdProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded20);
  const ownerState = props;
  const classes = useUtilityClasses12();
  let colSpan;
  if (!component || component === "td" || !isHostComponent_default(component)) {
    colSpan = colSpanProp || 1e3;
  }
  const getLabelDisplayedRowsTo = () => {
    if (count === -1) {
      return (page + 1) * rowsPerPage;
    }
    return rowsPerPage === -1 ? count : Math.min(count, (page + 1) * rowsPerPage);
  };
  const selectId = useId(selectIdProp);
  const labelId = useId(labelIdProp);
  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : "td";
  const rootProps = useSlotProps({
    elementType: Root,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      colSpan,
      ref
    },
    ownerState,
    className: classes.root
  });
  const Select3 = (_components$Select = components.Select) != null ? _components$Select : "select";
  const selectProps = useSlotProps({
    elementType: Select3,
    externalSlotProps: componentsProps.select,
    additionalProps: {
      value: rowsPerPage,
      id: selectId,
      onChange: (e) => onRowsPerPageChange && onRowsPerPageChange(e),
      "aria-label": rowsPerPage.toString(),
      "aria-labelledby": [labelId, selectId].filter(Boolean).join(" ") || void 0
    },
    ownerState,
    className: classes.select
  });
  const Actions = (_components$Actions = components.Actions) != null ? _components$Actions : TablePaginationActionsUnstyled_default;
  const actionsProps = useSlotProps({
    elementType: Actions,
    externalSlotProps: componentsProps.actions,
    additionalProps: {
      page,
      rowsPerPage,
      count,
      onPageChange,
      getItemAriaLabel
    },
    ownerState,
    className: classes.actions
  });
  const MenuItem3 = (_components$MenuItem = components.MenuItem) != null ? _components$MenuItem : "option";
  const menuItemProps = useSlotProps({
    elementType: MenuItem3,
    externalSlotProps: componentsProps.menuItem,
    additionalProps: {
      value: void 0
    },
    ownerState,
    className: classes.menuItem
  });
  const SelectLabel = (_components$SelectLab = components.SelectLabel) != null ? _components$SelectLab : "p";
  const selectLabelProps = useSlotProps({
    elementType: SelectLabel,
    externalSlotProps: componentsProps.selectLabel,
    additionalProps: {
      id: labelId
    },
    ownerState,
    className: classes.selectLabel
  });
  const DisplayedRows = (_components$Displayed = components.DisplayedRows) != null ? _components$Displayed : "p";
  const displayedRowsProps = useSlotProps({
    elementType: DisplayedRows,
    externalSlotProps: componentsProps.displayedRows,
    ownerState,
    className: classes.displayedRows
  });
  const Toolbar = (_components$Toolbar = components.Toolbar) != null ? _components$Toolbar : "div";
  const toolbarProps = useSlotProps({
    elementType: Toolbar,
    externalSlotProps: componentsProps.toolbar,
    ownerState,
    className: classes.toolbar
  });
  const Spacer = (_components$Spacer = components.Spacer) != null ? _components$Spacer : "div";
  const spacerProps = useSlotProps({
    elementType: Spacer,
    externalSlotProps: componentsProps.spacer,
    ownerState,
    className: classes.spacer
  });
  return (0, import_jsx_runtime33.jsx)(Root, _extends({}, rootProps, {
    children: (0, import_jsx_runtime34.jsxs)(Toolbar, _extends({}, toolbarProps, {
      children: [(0, import_jsx_runtime33.jsx)(Spacer, _extends({}, spacerProps)), rowsPerPageOptions.length > 1 && (0, import_jsx_runtime33.jsx)(SelectLabel, _extends({}, selectLabelProps, {
        children: labelRowsPerPage
      })), rowsPerPageOptions.length > 1 && (0, import_jsx_runtime33.jsx)(Select3, _extends({}, selectProps, {
        children: rowsPerPageOptions.map((rowsPerPageOption) => (0, import_react4.createElement)(MenuItem3, _extends({}, menuItemProps, {
          key: typeof rowsPerPageOption !== "number" && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption,
          value: typeof rowsPerPageOption !== "number" && rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption
        }), typeof rowsPerPageOption !== "number" && rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption))
      })), (0, import_jsx_runtime33.jsx)(DisplayedRows, _extends({}, displayedRowsProps, {
        children: labelDisplayedRows({
          from: count === 0 ? 0 : page * rowsPerPage + 1,
          to: getLabelDisplayedRowsTo(),
          count: count === -1 ? -1 : count,
          page
        })
      })), (0, import_jsx_runtime33.jsx)(Actions, _extends({}, actionsProps))]
    }))
  }));
});
true ? TablePaginationUnstyled.propTypes = {
  children: import_prop_types20.default.node,
  colSpan: import_prop_types20.default.number,
  component: import_prop_types20.default.elementType,
  components: import_prop_types20.default.shape({
    Actions: import_prop_types20.default.elementType,
    DisplayedRows: import_prop_types20.default.elementType,
    MenuItem: import_prop_types20.default.elementType,
    Root: import_prop_types20.default.elementType,
    Select: import_prop_types20.default.elementType,
    SelectLabel: import_prop_types20.default.elementType,
    Spacer: import_prop_types20.default.elementType,
    Toolbar: import_prop_types20.default.elementType
  }),
  componentsProps: import_prop_types20.default.shape({
    actions: import_prop_types20.default.oneOfType([import_prop_types20.default.func, import_prop_types20.default.object]),
    displayedRows: import_prop_types20.default.oneOfType([import_prop_types20.default.func, import_prop_types20.default.object]),
    menuItem: import_prop_types20.default.oneOfType([import_prop_types20.default.func, import_prop_types20.default.object]),
    root: import_prop_types20.default.oneOfType([import_prop_types20.default.func, import_prop_types20.default.object]),
    select: import_prop_types20.default.oneOfType([import_prop_types20.default.func, import_prop_types20.default.object]),
    selectLabel: import_prop_types20.default.oneOfType([import_prop_types20.default.func, import_prop_types20.default.object]),
    spacer: import_prop_types20.default.oneOfType([import_prop_types20.default.func, import_prop_types20.default.object]),
    toolbar: import_prop_types20.default.oneOfType([import_prop_types20.default.func, import_prop_types20.default.object])
  }),
  count: import_prop_types20.default.number.isRequired,
  getItemAriaLabel: import_prop_types20.default.func,
  labelDisplayedRows: import_prop_types20.default.func,
  labelId: import_prop_types20.default.string,
  labelRowsPerPage: import_prop_types20.default.node,
  onPageChange: import_prop_types20.default.func.isRequired,
  onRowsPerPageChange: import_prop_types20.default.func,
  page: chainPropTypes(integerPropType_default.isRequired, (props) => {
    const {
      count,
      page,
      rowsPerPage
    } = props;
    if (count === -1) {
      return null;
    }
    const newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);
    if (page < 0 || page > newLastPage) {
      return new Error(`MUI: The page prop of a TablePaginationUnstyled is out of range (0 to ${newLastPage}, but page is ${page}).`);
    }
    return null;
  }),
  rowsPerPage: integerPropType_default.isRequired,
  rowsPerPageOptions: import_prop_types20.default.arrayOf(import_prop_types20.default.oneOfType([import_prop_types20.default.number, import_prop_types20.default.shape({
    label: import_prop_types20.default.string.isRequired,
    value: import_prop_types20.default.number.isRequired
  })]).isRequired),
  selectId: import_prop_types20.default.string
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/TabPanelUnstyled/TabPanelUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React41 = __toESM(require_react());
var import_prop_types22 = __toESM(require_prop_types());

// node_modules/@mui/joy/node_modules/@mui/base/TabPanelUnstyled/tabPanelUnstyledClasses.js
function getTabPanelUnstyledUtilityClass(slot) {
  return generateUtilityClass("TabPanelUnstyled", slot);
}
var tabPanelUnstyledClasses = generateUtilityClasses("TabPanelUnstyled", ["root", "hidden"]);

// node_modules/@mui/joy/node_modules/@mui/base/TabsUnstyled/TabsUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React40 = __toESM(require_react());
var import_prop_types21 = __toESM(require_prop_types());

// node_modules/@mui/joy/node_modules/@mui/base/TabsUnstyled/tabsUnstyledClasses.js
function getTabsUnstyledUtilityClass(slot) {
  return generateUtilityClass("TabsUnstyled", slot);
}
var tabsUnstyledClasses = generateUtilityClasses("TabsUnstyled", ["root", "horizontal", "vertical"]);

// node_modules/@mui/joy/node_modules/@mui/base/TabsUnstyled/useTabs.js
var React38 = __toESM(require_react());
init_esm();
var useTabs = (parameters) => {
  const {
    value: valueProp,
    defaultValue,
    onChange,
    orientation,
    direction,
    selectionFollowsFocus
  } = parameters;
  const [value, setValue] = useControlled({
    controlled: valueProp,
    default: defaultValue,
    name: "Tabs",
    state: "value"
  });
  const idPrefix = useId();
  const onSelected = React38.useCallback((e, newValue) => {
    setValue(newValue);
    if (onChange) {
      onChange(e, newValue);
    }
  }, [onChange, setValue]);
  const tabsContextValue = React38.useMemo(() => {
    return {
      idPrefix,
      value,
      onSelected,
      orientation,
      direction,
      selectionFollowsFocus
    };
  }, [idPrefix, value, onSelected, orientation, direction, selectionFollowsFocus]);
  return {
    tabsContextValue
  };
};
var useTabs_default = useTabs;

// node_modules/@mui/joy/node_modules/@mui/base/TabsUnstyled/TabsContext.js
var React39 = __toESM(require_react());
var Context = React39.createContext(null);
if (true) {
  Context.displayName = "TabsContext";
}
function useTabContext() {
  return React39.useContext(Context);
}
function getPanelId(context, value) {
  const {
    idPrefix
  } = context;
  if (idPrefix === null) {
    return null;
  }
  return `${context.idPrefix}-P-${value}`;
}
function getTabId(context, value) {
  const {
    idPrefix
  } = context;
  if (idPrefix === null) {
    return null;
  }
  return `${context.idPrefix}-T-${value}`;
}
var TabsContext_default = Context;

// node_modules/@mui/joy/node_modules/@mui/base/TabsUnstyled/TabsUnstyled.js
var import_jsx_runtime35 = __toESM(require_jsx_runtime());
var _excluded21 = ["children", "value", "defaultValue", "orientation", "direction", "component", "components", "componentsProps", "onChange", "selectionFollowsFocus"];
var useUtilityClasses13 = (ownerState) => {
  const {
    orientation
  } = ownerState;
  const slots = {
    root: ["root", orientation]
  };
  return composeClasses(slots, getTabsUnstyledUtilityClass, {});
};
var TabsUnstyled = React40.forwardRef((props, ref) => {
  var _ref;
  const {
    children,
    orientation = "horizontal",
    direction = "ltr",
    component,
    components = {},
    componentsProps = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded21);
  const {
    tabsContextValue
  } = useTabs_default(props);
  const ownerState = _extends({}, props, {
    orientation,
    direction
  });
  const classes = useUtilityClasses13(ownerState);
  const TabsRoot2 = (_ref = component != null ? component : components.Root) != null ? _ref : "div";
  const tabsRootProps = useSlotProps({
    elementType: TabsRoot2,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref
    },
    ownerState,
    className: classes.root
  });
  return (0, import_jsx_runtime35.jsx)(TabsRoot2, _extends({}, tabsRootProps, {
    children: (0, import_jsx_runtime35.jsx)(TabsContext_default.Provider, {
      value: tabsContextValue,
      children
    })
  }));
});
true ? TabsUnstyled.propTypes = {
  children: import_prop_types21.default.node,
  component: import_prop_types21.default.elementType,
  components: import_prop_types21.default.shape({
    Root: import_prop_types21.default.elementType
  }),
  componentsProps: import_prop_types21.default.shape({
    root: import_prop_types21.default.oneOfType([import_prop_types21.default.func, import_prop_types21.default.object])
  }),
  defaultValue: import_prop_types21.default.oneOfType([import_prop_types21.default.oneOf([false]), import_prop_types21.default.number, import_prop_types21.default.string]),
  direction: import_prop_types21.default.oneOf(["ltr", "rtl"]),
  onChange: import_prop_types21.default.func,
  orientation: import_prop_types21.default.oneOf(["horizontal", "vertical"]),
  selectionFollowsFocus: import_prop_types21.default.bool,
  value: import_prop_types21.default.oneOfType([import_prop_types21.default.oneOf([false]), import_prop_types21.default.number, import_prop_types21.default.string])
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/TabPanelUnstyled/useTabPanel.js
var useTabPanel = (parameters) => {
  const {
    value
  } = parameters;
  const context = useTabContext();
  if (context === null) {
    throw new Error("No TabContext provided");
  }
  const hidden = value !== context.value;
  const id = getPanelId(context, value);
  const tabId = getTabId(context, value);
  const getRootProps = () => {
    return {
      "aria-labelledby": tabId != null ? tabId : void 0,
      hidden,
      id: id != null ? id : void 0
    };
  };
  return {
    hidden,
    getRootProps
  };
};
var useTabPanel_default = useTabPanel;

// node_modules/@mui/joy/node_modules/@mui/base/TabPanelUnstyled/TabPanelUnstyled.js
var import_jsx_runtime36 = __toESM(require_jsx_runtime());
var _excluded24 = ["children", "value", "components", "componentsProps", "component"];
var useUtilityClasses14 = (ownerState) => {
  const {
    hidden
  } = ownerState;
  const slots = {
    root: ["root", hidden && "hidden"]
  };
  return composeClasses(slots, getTabPanelUnstyledUtilityClass, {});
};
var TabPanelUnstyled = React41.forwardRef(function TabPanelUnstyled2(props, ref) {
  var _ref;
  const {
    children,
    components = {},
    componentsProps = {},
    component
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded24);
  const {
    hidden,
    getRootProps
  } = useTabPanel_default(props);
  const ownerState = _extends({}, props, {
    hidden
  });
  const classes = useUtilityClasses14(ownerState);
  const TabPanelRoot2 = (_ref = component != null ? component : components.Root) != null ? _ref : "div";
  const tabPanelRootProps = useSlotProps({
    elementType: TabPanelRoot2,
    getSlotProps: getRootProps,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      role: "tabpanel",
      ref
    },
    ownerState,
    className: classes.root
  });
  return (0, import_jsx_runtime36.jsx)(TabPanelRoot2, _extends({}, tabPanelRootProps, {
    children: !hidden && children
  }));
});
true ? TabPanelUnstyled.propTypes = {
  children: import_prop_types22.default.node,
  component: import_prop_types22.default.elementType,
  components: import_prop_types22.default.shape({
    Root: import_prop_types22.default.elementType
  }),
  componentsProps: import_prop_types22.default.shape({
    root: import_prop_types22.default.oneOfType([import_prop_types22.default.func, import_prop_types22.default.object])
  }),
  value: import_prop_types22.default.oneOfType([import_prop_types22.default.number, import_prop_types22.default.string]).isRequired
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/TabsListUnstyled/TabsListUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React43 = __toESM(require_react());
var import_prop_types23 = __toESM(require_prop_types());

// node_modules/@mui/joy/node_modules/@mui/base/TabsListUnstyled/tabsListUnstyledClasses.js
function getTabsListUnstyledUtilityClass(slot) {
  return generateUtilityClass("TabsListUnstyled", slot);
}
var tabsListUnstyledClasses = generateUtilityClasses("TabsListUnstyled", ["root", "horizontal", "vertical"]);

// node_modules/@mui/joy/node_modules/@mui/base/TabsListUnstyled/useTabsList.js
init_extends();
var React42 = __toESM(require_react());
init_esm();
var import_react_is = __toESM(require_react_is());
var nextItem = (list, item) => {
  if (!list) {
    return null;
  }
  if (list === item) {
    return list.firstChild;
  }
  if (item && item.nextElementSibling) {
    return item.nextElementSibling;
  }
  return list.firstChild;
};
var previousItem = (list, item) => {
  if (!list) {
    return null;
  }
  if (list === item) {
    return list.lastChild;
  }
  if (item && item.previousElementSibling) {
    return item.previousElementSibling;
  }
  return list.lastChild;
};
var moveFocus = (list, currentFocus, traversalFunction) => {
  let wrappedOnce = false;
  let nextFocus = traversalFunction(list, currentFocus);
  while (list && nextFocus) {
    if (nextFocus === list.firstChild) {
      if (wrappedOnce) {
        return;
      }
      wrappedOnce = true;
    }
    const nextFocusDisabled = nextFocus.disabled || nextFocus.getAttribute("aria-disabled") === "true";
    if (!nextFocus.hasAttribute("tabindex") || nextFocusDisabled) {
      nextFocus = traversalFunction(list, nextFocus);
    } else {
      nextFocus.focus();
      return;
    }
  }
};
var useTabsList = (parameters) => {
  const {
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledBy,
    children,
    ref
  } = parameters;
  const tabsListRef = React42.createRef();
  const handleRef = useForkRef(tabsListRef, ref);
  const context = useTabContext();
  if (context === null) {
    throw new Error("No TabContext provided");
  }
  const {
    value,
    orientation = "horizontal",
    direction = "ltr"
  } = context;
  const isRtl = direction === "rtl";
  const handleKeyDown2 = (event) => {
    const list = tabsListRef.current;
    const currentFocus = ownerDocument(list).activeElement;
    const role = currentFocus == null ? void 0 : currentFocus.getAttribute("role");
    if (role !== "tab") {
      return;
    }
    let previousItemKey = orientation === "horizontal" ? "ArrowLeft" : "ArrowUp";
    let nextItemKey = orientation === "horizontal" ? "ArrowRight" : "ArrowDown";
    if (orientation === "horizontal" && isRtl) {
      previousItemKey = "ArrowRight";
      nextItemKey = "ArrowLeft";
    }
    switch (event.key) {
      case previousItemKey:
        event.preventDefault();
        moveFocus(list, currentFocus, previousItem);
        break;
      case nextItemKey:
        event.preventDefault();
        moveFocus(list, currentFocus, nextItem);
        break;
      case "Home":
        event.preventDefault();
        moveFocus(list, null, nextItem);
        break;
      case "End":
        event.preventDefault();
        moveFocus(list, null, previousItem);
        break;
      default:
        break;
    }
  };
  const createHandleKeyDown = (otherHandlers) => (event) => {
    var _otherHandlers$onKeyD;
    handleKeyDown2(event);
    (_otherHandlers$onKeyD = otherHandlers.onKeyDown) == null ? void 0 : _otherHandlers$onKeyD.call(otherHandlers, event);
  };
  const getRootProps = (otherHandlers = {}) => {
    const propsEventHandlers = extractEventHandlers(parameters);
    const externalEventHandlers = _extends({}, propsEventHandlers, otherHandlers);
    const ownEventHandlers = {
      onKeyDown: createHandleKeyDown(externalEventHandlers)
    };
    const mergedEventHandlers = _extends({}, externalEventHandlers, ownEventHandlers);
    return _extends({
      "aria-label": ariaLabel,
      "aria-labelledby": ariaLabelledBy,
      "aria-orientation": orientation === "vertical" ? "vertical" : void 0,
      role: "tablist",
      ref: handleRef
    }, mergedEventHandlers);
  };
  const processChildren = React42.useCallback(() => {
    const valueToIndex = /* @__PURE__ */ new Map();
    let childIndex = 0;
    const processedChildren = React42.Children.map(children, (child) => {
      if (!React42.isValidElement(child)) {
        return null;
      }
      if (true) {
        if ((0, import_react_is.isFragment)(child)) {
          console.error(["MUI: The Tabs component doesn't accept a Fragment as a child.", "Consider providing an array instead."].join("\n"));
        }
      }
      const childValue = child.props.value === void 0 ? childIndex : child.props.value;
      valueToIndex.set(childValue, childIndex);
      childIndex += 1;
      return React42.cloneElement(child, _extends({
        value: childValue
      }, childIndex === 1 && value === false && !child.props.tabIndex || value === childValue ? {
        tabIndex: 0
      } : {
        tabIndex: -1
      }));
    });
    return processedChildren;
  }, [children, value]);
  return {
    isRtl,
    orientation,
    value,
    processChildren,
    getRootProps
  };
};
var useTabsList_default = useTabsList;

// node_modules/@mui/joy/node_modules/@mui/base/TabsListUnstyled/TabsListUnstyled.js
var import_jsx_runtime37 = __toESM(require_jsx_runtime());
var _excluded25 = ["children", "component", "components", "componentsProps"];
var useUtilityClasses15 = (ownerState) => {
  const {
    orientation
  } = ownerState;
  const slots = {
    root: ["root", orientation]
  };
  return composeClasses(slots, getTabsListUnstyledUtilityClass, {});
};
var TabsListUnstyled = React43.forwardRef((props, ref) => {
  var _ref;
  const {
    component,
    components = {},
    componentsProps = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded25);
  const {
    isRtl,
    orientation,
    getRootProps,
    processChildren
  } = useTabsList_default(_extends({}, props, {
    ref
  }));
  const ownerState = _extends({}, props, {
    isRtl,
    orientation
  });
  const classes = useUtilityClasses15(ownerState);
  const TabsListRoot = (_ref = component != null ? component : components.Root) != null ? _ref : "div";
  const tabsListRootProps = useSlotProps({
    elementType: TabsListRoot,
    getSlotProps: getRootProps,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    ownerState,
    className: classes.root
  });
  const processedChildren = processChildren();
  return (0, import_jsx_runtime37.jsx)(TabsListRoot, _extends({}, tabsListRootProps, {
    children: processedChildren
  }));
});
true ? TabsListUnstyled.propTypes = {
  children: import_prop_types23.default.node,
  component: import_prop_types23.default.elementType,
  components: import_prop_types23.default.shape({
    Root: import_prop_types23.default.elementType
  }),
  componentsProps: import_prop_types23.default.shape({
    root: import_prop_types23.default.oneOfType([import_prop_types23.default.func, import_prop_types23.default.object])
  })
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/TabUnstyled/TabUnstyled.js
init_extends();
init_objectWithoutPropertiesLoose();
var React44 = __toESM(require_react());
var import_prop_types24 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/node_modules/@mui/base/TabUnstyled/tabUnstyledClasses.js
function getTabUnstyledUtilityClass(slot) {
  return generateUtilityClass("TabUnstyled", slot);
}
var tabUnstyledClasses = generateUtilityClasses("TabUnstyled", ["root", "selected", "disabled"]);

// node_modules/@mui/joy/node_modules/@mui/base/TabUnstyled/useTab.js
init_extends();
init_objectWithoutPropertiesLoose();
var _excluded26 = ["getRootProps"];
var useTab = (parameters) => {
  var _getPanelId, _getTabId;
  const {
    value: valueProp,
    onChange,
    onClick,
    onFocus
  } = parameters;
  const _useButton = useButton(parameters), {
    getRootProps: getRootPropsButton
  } = _useButton, otherButtonProps = _objectWithoutPropertiesLoose(_useButton, _excluded26);
  const context = useTabContext();
  if (context === null) {
    throw new Error("No TabContext provided");
  }
  const value = valueProp != null ? valueProp : 0;
  const selected = context.value === value;
  const selectionFollowsFocus = context.selectionFollowsFocus;
  const a11yAttributes = {
    role: "tab",
    "aria-controls": (_getPanelId = getPanelId(context, value)) != null ? _getPanelId : void 0,
    id: (_getTabId = getTabId(context, value)) != null ? _getTabId : void 0,
    "aria-selected": selected,
    disabled: otherButtonProps.disabled
  };
  const createHandleFocus = (otherHandlers) => (event) => {
    var _otherHandlers$onFocu;
    (_otherHandlers$onFocu = otherHandlers.onFocus) == null ? void 0 : _otherHandlers$onFocu.call(otherHandlers, event);
    if (event.defaultPrevented) {
      return;
    }
    if (selectionFollowsFocus && !selected) {
      if (onChange) {
        onChange(event, value);
      }
      context.onSelected(event, value);
    }
    if (onFocus) {
      onFocus(event);
    }
  };
  const createHandleClick = (otherHandlers) => (event) => {
    var _otherHandlers$onClic;
    (_otherHandlers$onClic = otherHandlers.onClick) == null ? void 0 : _otherHandlers$onClic.call(otherHandlers, event);
    if (event.defaultPrevented) {
      return;
    }
    if (!selected) {
      if (onChange) {
        onChange(event, value);
      }
      context.onSelected(event, value);
    }
    if (onClick) {
      onClick(event);
    }
  };
  const getRootProps = (otherHandlers = {}) => {
    const buttonResolvedProps = getRootPropsButton(_extends({}, otherHandlers, {
      onClick: createHandleClick(otherHandlers),
      onFocus: createHandleFocus(otherHandlers)
    }));
    return _extends({}, buttonResolvedProps, a11yAttributes);
  };
  return _extends({
    getRootProps
  }, otherButtonProps, {
    selected
  });
};
var useTab_default = useTab;

// node_modules/@mui/joy/node_modules/@mui/base/TabUnstyled/TabUnstyled.js
var import_jsx_runtime38 = __toESM(require_jsx_runtime());
var _excluded27 = ["action", "children", "value", "disabled", "onChange", "onClick", "onFocus", "component", "components", "componentsProps"];
var useUtilityClasses16 = (ownerState) => {
  const {
    selected,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", selected && "selected", disabled && "disabled"]
  };
  return composeClasses(slots, getTabUnstyledUtilityClass, {});
};
var TabUnstyled = React44.forwardRef(function TabUnstyled2(props, ref) {
  var _ref;
  const {
    action,
    children,
    disabled = false,
    component,
    components = {},
    componentsProps = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded27);
  const tabRef = React44.useRef();
  const handleRef = useForkRef(tabRef, ref);
  const {
    active,
    focusVisible,
    setFocusVisible,
    selected,
    getRootProps
  } = useTab_default(_extends({}, props, {
    ref: handleRef
  }));
  React44.useImperativeHandle(action, () => ({
    focusVisible: () => {
      setFocusVisible(true);
      tabRef.current.focus();
    }
  }), [setFocusVisible]);
  const ownerState = _extends({}, props, {
    active,
    focusVisible,
    disabled,
    selected
  });
  const classes = useUtilityClasses16(ownerState);
  const TabRoot2 = (_ref = component != null ? component : components.Root) != null ? _ref : "button";
  const tabRootProps = useSlotProps({
    elementType: TabRoot2,
    getSlotProps: getRootProps,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref
    },
    ownerState,
    className: classes.root
  });
  return (0, import_jsx_runtime38.jsx)(TabRoot2, _extends({}, tabRootProps, {
    children
  }));
});
true ? TabUnstyled.propTypes = {
  action: import_prop_types24.default.oneOfType([import_prop_types24.default.func, import_prop_types24.default.shape({
    current: import_prop_types24.default.shape({
      focusVisible: import_prop_types24.default.func.isRequired
    })
  })]),
  children: import_prop_types24.default.node,
  component: import_prop_types24.default.elementType,
  components: import_prop_types24.default.shape({
    Root: import_prop_types24.default.elementType
  }),
  componentsProps: import_prop_types24.default.shape({
    root: import_prop_types24.default.oneOfType([import_prop_types24.default.func, import_prop_types24.default.object])
  }),
  disabled: import_prop_types24.default.bool,
  onChange: import_prop_types24.default.func,
  onClick: import_prop_types24.default.func,
  onFocus: import_prop_types24.default.func,
  value: import_prop_types24.default.oneOfType([import_prop_types24.default.number, import_prop_types24.default.string])
} : void 0;

// node_modules/@mui/joy/node_modules/@mui/base/TextareaAutosize/TextareaAutosize.js
init_extends();
init_objectWithoutPropertiesLoose();
var React45 = __toESM(require_react());
var import_prop_types25 = __toESM(require_prop_types());
var import_react_dom = __toESM(require_react_dom());
init_esm();
var import_jsx_runtime39 = __toESM(require_jsx_runtime());
var import_jsx_runtime40 = __toESM(require_jsx_runtime());
var _excluded28 = ["onChange", "maxRows", "minRows", "style", "value"];
function getStyleValue(computedStyle, property) {
  return parseInt(computedStyle[property], 10) || 0;
}
var styles = {
  shadow: {
    visibility: "hidden",
    position: "absolute",
    overflow: "hidden",
    height: 0,
    top: 0,
    left: 0,
    transform: "translateZ(0)"
  }
};
function isEmpty(obj) {
  return obj === void 0 || obj === null || Object.keys(obj).length === 0;
}
var TextareaAutosize = React45.forwardRef(function TextareaAutosize2(props, ref) {
  const {
    onChange,
    maxRows,
    minRows = 1,
    style,
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded28);
  const {
    current: isControlled
  } = React45.useRef(value != null);
  const inputRef = React45.useRef(null);
  const handleRef = useForkRef(ref, inputRef);
  const shadowRef = React45.useRef(null);
  const renders = React45.useRef(0);
  const [state, setState] = React45.useState({});
  const getUpdatedState = React45.useCallback(() => {
    const input = inputRef.current;
    const containerWindow = ownerWindow(input);
    const computedStyle = containerWindow.getComputedStyle(input);
    if (computedStyle.width === "0px") {
      return {};
    }
    const inputShallow = shadowRef.current;
    inputShallow.style.width = computedStyle.width;
    inputShallow.value = input.value || props.placeholder || "x";
    if (inputShallow.value.slice(-1) === "\n") {
      inputShallow.value += " ";
    }
    const boxSizing = computedStyle["box-sizing"];
    const padding = getStyleValue(computedStyle, "padding-bottom") + getStyleValue(computedStyle, "padding-top");
    const border2 = getStyleValue(computedStyle, "border-bottom-width") + getStyleValue(computedStyle, "border-top-width");
    const innerHeight = inputShallow.scrollHeight;
    inputShallow.value = "x";
    const singleRowHeight = inputShallow.scrollHeight;
    let outerHeight = innerHeight;
    if (minRows) {
      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);
    }
    if (maxRows) {
      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);
    }
    outerHeight = Math.max(outerHeight, singleRowHeight);
    const outerHeightStyle = outerHeight + (boxSizing === "border-box" ? padding + border2 : 0);
    const overflow = Math.abs(outerHeight - innerHeight) <= 1;
    return {
      outerHeightStyle,
      overflow
    };
  }, [maxRows, minRows, props.placeholder]);
  const updateState = (prevState, newState) => {
    const {
      outerHeightStyle,
      overflow
    } = newState;
    if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {
      renders.current += 1;
      return {
        overflow,
        outerHeightStyle
      };
    }
    if (true) {
      if (renders.current === 20) {
        console.error(["MUI: Too many re-renders. The layout is unstable.", "TextareaAutosize limits the number of renders to prevent an infinite loop."].join("\n"));
      }
    }
    return prevState;
  };
  const syncHeight = React45.useCallback(() => {
    const newState = getUpdatedState();
    if (isEmpty(newState)) {
      return;
    }
    setState((prevState) => {
      return updateState(prevState, newState);
    });
  }, [getUpdatedState]);
  const syncHeightWithFlushSycn = () => {
    const newState = getUpdatedState();
    if (isEmpty(newState)) {
      return;
    }
    (0, import_react_dom.flushSync)(() => {
      setState((prevState) => {
        return updateState(prevState, newState);
      });
    });
  };
  React45.useEffect(() => {
    const handleResize = debounce(() => {
      renders.current = 0;
      if (inputRef.current) {
        syncHeightWithFlushSycn();
      }
    });
    const containerWindow = ownerWindow(inputRef.current);
    containerWindow.addEventListener("resize", handleResize);
    let resizeObserver;
    if (typeof ResizeObserver !== "undefined") {
      resizeObserver = new ResizeObserver(handleResize);
      resizeObserver.observe(inputRef.current);
    }
    return () => {
      handleResize.clear();
      containerWindow.removeEventListener("resize", handleResize);
      if (resizeObserver) {
        resizeObserver.disconnect();
      }
    };
  });
  useEnhancedEffect_default(() => {
    syncHeight();
  });
  React45.useEffect(() => {
    renders.current = 0;
  }, [value]);
  const handleChange = (event) => {
    renders.current = 0;
    if (!isControlled) {
      syncHeight();
    }
    if (onChange) {
      onChange(event);
    }
  };
  return (0, import_jsx_runtime40.jsxs)(React45.Fragment, {
    children: [(0, import_jsx_runtime39.jsx)("textarea", _extends({
      value,
      onChange: handleChange,
      ref: handleRef,
      rows: minRows,
      style: _extends({
        height: state.outerHeightStyle,
        overflow: state.overflow ? "hidden" : null
      }, style)
    }, other)), (0, import_jsx_runtime39.jsx)("textarea", {
      "aria-hidden": true,
      className: props.className,
      readOnly: true,
      ref: shadowRef,
      tabIndex: -1,
      style: _extends({}, styles.shadow, style, {
        padding: 0
      })
    })]
  });
});
true ? TextareaAutosize.propTypes = {
  className: import_prop_types25.default.string,
  maxRows: import_prop_types25.default.oneOfType([import_prop_types25.default.number, import_prop_types25.default.string]),
  minRows: import_prop_types25.default.oneOfType([import_prop_types25.default.number, import_prop_types25.default.string]),
  onChange: import_prop_types25.default.func,
  placeholder: import_prop_types25.default.string,
  style: import_prop_types25.default.object,
  value: import_prop_types25.default.oneOfType([import_prop_types25.default.arrayOf(import_prop_types25.default.string), import_prop_types25.default.number, import_prop_types25.default.string])
} : void 0;
var TextareaAutosize_default = TextareaAutosize;

// node_modules/@mui/joy/AspectRatio/AspectRatio.js
init_esm();

// node_modules/@mui/joy/AspectRatio/aspectRatioClasses.js
function getAspectRatioUtilityClass(slot) {
  return generateUtilityClass2("JoyAspectRatio", slot);
}
var aspectRatioClasses = generateUtilityClasses2("JoyAspectRatio", ["root", "content", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var aspectRatioClasses_default = aspectRatioClasses;

// node_modules/@mui/joy/AspectRatio/AspectRatio.js
var import_jsx_runtime41 = __toESM(require_jsx_runtime());
var _excluded29 = ["component", "children", "componentsProps", "ratio", "minHeight", "maxHeight", "objectFit", "color", "variant"];
var useUtilityClasses17 = (ownerState) => {
  const {
    variant,
    color
  } = ownerState;
  const slots = {
    root: ["root"],
    content: ["content", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]
  };
  return composeClasses(slots, getAspectRatioUtilityClass, {});
};
var AspectRatioRoot = styled_default("div", {
  name: "JoyAspectRatio",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  ownerState
}) => {
  const minHeight = typeof ownerState.minHeight === "number" ? `${ownerState.minHeight}px` : ownerState.minHeight;
  const maxHeight = typeof ownerState.maxHeight === "number" ? `${ownerState.maxHeight}px` : ownerState.maxHeight;
  return {
    "--AspectRatio-paddingBottom": minHeight || maxHeight ? `clamp(${minHeight || "0px"}, calc(100% / (${ownerState.ratio})), ${maxHeight || "9999px"})` : `calc(100% / (${ownerState.ratio}))`,
    flexDirection: "column",
    margin: "var(--AspectRatio-margin)"
  };
});
var AspectRatioContent = styled_default("div", {
  name: "JoyAspectRatio",
  slot: "Content",
  overridesResolver: (props, styles2) => styles2.content
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  return [{
    flex: 1,
    position: "relative",
    borderRadius: "var(--AspectRatio-radius)",
    height: 0,
    paddingBottom: "var(--AspectRatio-paddingBottom)",
    overflow: "hidden",
    "& [data-first-child]": {
      display: "flex",
      justifyContent: "center",
      alignItems: "center",
      boxSizing: "border-box",
      position: "absolute",
      width: "100%",
      height: "100%",
      objectFit: ownerState.objectFit,
      margin: 0,
      padding: 0,
      "& > img": {
        width: "100%",
        height: "100%",
        objectFit: ownerState.objectFit
      }
    }
  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]];
});
var AspectRatio = React46.forwardRef(function AspectRatio2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyAspectRatio"
  });
  const {
    component = "div",
    children,
    componentsProps = {},
    ratio = "16 / 9",
    minHeight,
    maxHeight,
    objectFit = "cover",
    color = "neutral",
    variant = "soft"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded29);
  const ownerState = _extends({}, props, {
    component,
    minHeight,
    maxHeight,
    objectFit,
    ratio,
    color,
    variant
  });
  const classes = useUtilityClasses17(ownerState);
  const rootProps = useSlotProps({
    elementType: AspectRatioRoot,
    ownerState,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    className: classes.root
  });
  const contentProps = useSlotProps({
    elementType: AspectRatioContent,
    ownerState,
    externalSlotProps: componentsProps.content,
    className: classes.content
  });
  return (0, import_jsx_runtime41.jsx)(AspectRatioRoot, _extends({}, rootProps, {
    children: (0, import_jsx_runtime41.jsx)(AspectRatioContent, _extends({}, contentProps, {
      children: React46.Children.map(children, (child, index) => index === 0 && React46.isValidElement(child) ? React46.cloneElement(child, {
        "data-first-child": ""
      }) : child)
    }))
  }));
});
true ? AspectRatio.propTypes = {
  children: import_prop_types26.default.node,
  color: import_prop_types26.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]),
  component: import_prop_types26.default.elementType,
  componentsProps: import_prop_types26.default.shape({
    content: import_prop_types26.default.oneOfType([import_prop_types26.default.func, import_prop_types26.default.object]),
    root: import_prop_types26.default.oneOfType([import_prop_types26.default.func, import_prop_types26.default.object])
  }),
  maxHeight: import_prop_types26.default.oneOfType([import_prop_types26.default.number, import_prop_types26.default.string]),
  minHeight: import_prop_types26.default.oneOfType([import_prop_types26.default.number, import_prop_types26.default.string]),
  objectFit: import_prop_types26.default.oneOf(["-moz-initial", "contain", "cover", "fill", "inherit", "initial", "none", "revert-layer", "revert", "scale-down", "unset"]),
  ratio: import_prop_types26.default.oneOfType([import_prop_types26.default.number, import_prop_types26.default.string]),
  sx: import_prop_types26.default.oneOfType([import_prop_types26.default.arrayOf(import_prop_types26.default.oneOfType([import_prop_types26.default.func, import_prop_types26.default.object, import_prop_types26.default.bool])), import_prop_types26.default.func, import_prop_types26.default.object]),
  variant: import_prop_types26.default.oneOfType([import_prop_types26.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types26.default.string])
} : void 0;
var AspectRatio_default = AspectRatio;

// node_modules/@mui/joy/Alert/Alert.js
init_objectWithoutPropertiesLoose();
init_extends();
init_esm();
init_clsx_m();
var import_prop_types27 = __toESM(require_prop_types());
var React47 = __toESM(require_react());

// node_modules/@mui/joy/Alert/alertClasses.js
function getAlertUtilityClass(slot) {
  return generateUtilityClass2("JoyAlert", slot);
}
var alertClasses = generateUtilityClasses2("JoyAlert", ["root", "action", "icon", "message", "colorPrimary", "colorDanger", "colorInfo", "colorNeutral", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantOutlined", "variantSoft", "variantSolid"]);
var alertClasses_default = alertClasses;

// node_modules/@mui/joy/Alert/Alert.js
var import_jsx_runtime42 = __toESM(require_jsx_runtime());
var import_jsx_runtime43 = __toESM(require_jsx_runtime());
var _excluded30 = ["children", "className", "component", "color", "role", "variant", "size", "startDecorator", "endDecorator"];
var useUtilityClasses18 = (ownerState) => {
  const {
    variant,
    color,
    size
  } = ownerState;
  const slots = {
    root: ["root", size && `size${capitalize(size)}`, color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  return composeClasses(slots, getAlertUtilityClass, {});
};
var AlertRoot = styled_default("div", {
  name: "JoyAlert",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  return _extends({
    "--Alert-radius": theme.vars.radius.sm,
    "--Alert-decorator-childRadius": "max((var(--Alert-radius) - var(--variant-borderWidth)) - var(--Alert-padding), min(var(--Alert-padding) / 2, (var(--Alert-radius) - var(--variant-borderWidth)) / 2))",
    "--Button-minHeight": "var(--Alert-decorator-childHeight)",
    "--IconButton-size": "var(--Alert-decorator-childHeight)",
    "--Button-radius": "var(--Alert-decorator-childRadius)",
    "--IconButton-radius": "var(--Alert-decorator-childRadius)"
  }, ownerState.size === "sm" && {
    "--Alert-padding": "0.5rem",
    "--Alert-gap": "0.375rem",
    "--Alert-decorator-childHeight": "1.5rem",
    "--Icon-fontSize": "1.125rem",
    fontSize: theme.vars.fontSize.sm
  }, ownerState.size === "md" && {
    "--Alert-padding": "0.75rem",
    "--Alert-gap": "0.5rem",
    "--Alert-decorator-childHeight": "2rem",
    "--Icon-fontSize": "1.25rem",
    fontSize: theme.vars.fontSize.sm,
    fontWeight: theme.vars.fontWeight.md
  }, ownerState.size === "lg" && {
    "--Alert-padding": "1rem",
    "--Alert-gap": "0.75rem",
    "--Alert-decorator-childHeight": "2.375rem",
    "--Icon-fontSize": "1.5rem",
    fontSize: theme.vars.fontSize.md,
    fontWeight: theme.vars.fontWeight.md
  }, {
    fontFamily: theme.vars.fontFamily.body,
    lineHeight: theme.vars.lineHeight.md,
    backgroundColor: "transparent",
    display: "flex",
    alignItems: "center",
    padding: `var(--Alert-padding)`,
    borderRadius: "var(--Alert-radius)"
  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]);
});
var AlertStartDecorator = styled_default("span", {
  name: "JoyAlert",
  slot: "StartDecorator",
  overridesResolver: (props, styles2) => styles2.startDecorator
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette;
  return {
    display: "inherit",
    flex: "none",
    marginInlineEnd: "var(--Alert-gap)",
    color: (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette[`${ownerState.variant}Color`]
  };
});
var AlertEndDecorator = styled_default("span", {
  name: "JoyAlert",
  slot: "EndDecorator",
  overridesResolver: (props, styles2) => styles2.endDecorator
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette2;
  return {
    display: "inherit",
    flex: "none",
    marginInlineStart: "var(--Alert-gap)",
    marginLeft: "auto",
    color: (_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2[`${ownerState.variant}Color`]
  };
});
var Alert = React47.forwardRef(function Alert2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyAlert"
  });
  const {
    children,
    className,
    component = "div",
    color = "primary",
    role = "alert",
    variant = "soft",
    size = "md",
    startDecorator,
    endDecorator
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded30);
  const ownerState = _extends({}, props, {
    color,
    variant,
    size
  });
  const classes = useUtilityClasses18(ownerState);
  return (0, import_jsx_runtime43.jsxs)(AlertRoot, _extends({
    as: component,
    role,
    ownerState,
    className: clsx_m_default(classes.root, className),
    ref
  }, other, {
    children: [startDecorator && (0, import_jsx_runtime42.jsx)(AlertStartDecorator, {
      className: classes.startDecorator,
      ownerState,
      children: startDecorator
    }), children, endDecorator && (0, import_jsx_runtime42.jsx)(AlertEndDecorator, {
      className: classes.endDecorator,
      ownerState,
      children: endDecorator
    })]
  }));
});
true ? Alert.propTypes = {
  children: import_prop_types27.default.node,
  className: import_prop_types27.default.string,
  color: import_prop_types27.default.oneOfType([import_prop_types27.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types27.default.string]),
  component: import_prop_types27.default.elementType,
  endDecorator: import_prop_types27.default.node,
  role: import_prop_types27.default.string,
  size: import_prop_types27.default.oneOf(["sm", "md", "lg"]),
  startDecorator: import_prop_types27.default.node,
  sx: import_prop_types27.default.oneOfType([import_prop_types27.default.arrayOf(import_prop_types27.default.oneOfType([import_prop_types27.default.func, import_prop_types27.default.object, import_prop_types27.default.bool])), import_prop_types27.default.func, import_prop_types27.default.object]),
  variant: import_prop_types27.default.oneOfType([import_prop_types27.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types27.default.string])
} : void 0;
var Alert_default = Alert;

// node_modules/@mui/joy/Avatar/Avatar.js
init_objectWithoutPropertiesLoose();
init_extends();
var React52 = __toESM(require_react());
var import_prop_types30 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/internal/svg-icons/Person.js
var React50 = __toESM(require_react());

// node_modules/@mui/joy/utils/createSvgIcon.js
init_extends();
var React49 = __toESM(require_react());

// node_modules/@mui/joy/SvgIcon/SvgIcon.js
init_objectWithoutPropertiesLoose();
init_extends();
init_esm();
init_clsx_m();
var import_prop_types28 = __toESM(require_prop_types());
var React48 = __toESM(require_react());

// node_modules/@mui/joy/SvgIcon/svgIconClasses.js
function getSvgIconUtilityClass(slot) {
  return generateUtilityClass2("JoySvgIcon", slot);
}
var svgIconClasses = generateUtilityClasses2("JoySvgIcon", ["root", "colorInherit", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "fontSizeInherit", "fontSizeXs", "fontSizeSm", "fontSizeMd", "fontSizeLg", "fontSizeXl", "fontSizeXl2", "fontSizeXl3", "fontSizeXl4", "fontSizeXl5", "fontSizeXl6"]);
var svgIconClasses_default = svgIconClasses;

// node_modules/@mui/joy/SvgIcon/SvgIcon.js
var import_jsx_runtime44 = __toESM(require_jsx_runtime());
var import_jsx_runtime45 = __toESM(require_jsx_runtime());
var _excluded31 = ["children", "className", "color", "component", "fontSize", "htmlColor", "inheritViewBox", "titleAccess", "viewBox"];
var useUtilityClasses19 = (ownerState) => {
  const {
    color,
    fontSize: fontSize2,
    classes
  } = ownerState;
  const slots = {
    root: ["root", color && `color${capitalize(color)}`, fontSize2 && `fontSize${capitalize(fontSize2)}`]
  };
  return composeClasses(slots, getSvgIconUtilityClass, classes);
};
var SvgIconRoot = styled_default("svg", {
  name: "JoySvgIcon",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  return _extends({}, ownerState.instanceFontSize && ownerState.instanceFontSize !== "inherit" && {
    "--Icon-fontSize": theme.vars.fontSize[ownerState.instanceFontSize]
  }, {
    userSelect: "none",
    margin: "var(--Icon-margin)",
    width: "1em",
    height: "1em",
    display: "inline-block",
    fill: "currentColor",
    flexShrink: 0,
    transition: "fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"
  }, ownerState.fontSize && ownerState.fontSize !== "inherit" && {
    fontSize: `var(--Icon-fontSize, ${theme.fontSize[ownerState.fontSize]})`
  }, {
    color: ownerState.color !== "inherit" && theme.vars.palette[ownerState.color] ? theme.vars.palette[ownerState.color].plainColor : "var(--Icon-color)"
  });
});
var SvgIcon = React48.forwardRef(function SvgIcon2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoySvgIcon"
  });
  const {
    children,
    className,
    color = "inherit",
    component = "svg",
    fontSize: fontSize2 = "xl",
    htmlColor,
    inheritViewBox = false,
    titleAccess,
    viewBox = "0 0 24 24"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded31);
  const ownerState = _extends({}, props, {
    color,
    component,
    fontSize: fontSize2,
    instanceFontSize: inProps.fontSize,
    inheritViewBox,
    viewBox
  });
  const classes = useUtilityClasses19(ownerState);
  return (0, import_jsx_runtime45.jsxs)(SvgIconRoot, _extends({
    as: component,
    className: clsx_m_default(classes.root, className),
    focusable: "false",
    color: htmlColor,
    "aria-hidden": titleAccess ? void 0 : true,
    role: titleAccess ? "img" : void 0,
    ref
  }, other, !inheritViewBox && {
    viewBox
  }, {
    ownerState,
    children: [children, titleAccess ? (0, import_jsx_runtime44.jsx)("title", {
      children: titleAccess
    }) : null]
  }));
});
true ? SvgIcon.propTypes = {
  children: import_prop_types28.default.node,
  classes: import_prop_types28.default.object,
  className: import_prop_types28.default.string,
  color: import_prop_types28.default.oneOfType([import_prop_types28.default.oneOf(["danger", "info", "inherit", "neutral", "primary", "success", "warning"]), import_prop_types28.default.string]),
  component: import_prop_types28.default.elementType,
  fontSize: import_prop_types28.default.oneOf(["inherit", "lg", "md", "sm", "xl", "xl2", "xl3", "xl4", "xl5", "xl6", "xl7", "xs", "xs2", "xs3"]),
  htmlColor: import_prop_types28.default.string,
  inheritViewBox: import_prop_types28.default.bool,
  shapeRendering: import_prop_types28.default.string,
  sx: import_prop_types28.default.oneOfType([import_prop_types28.default.arrayOf(import_prop_types28.default.oneOfType([import_prop_types28.default.func, import_prop_types28.default.object, import_prop_types28.default.bool])), import_prop_types28.default.func, import_prop_types28.default.object]),
  titleAccess: import_prop_types28.default.string,
  viewBox: import_prop_types28.default.string
} : void 0;
var SvgIcon_default = SvgIcon;

// node_modules/@mui/joy/utils/createSvgIcon.js
var import_jsx_runtime46 = __toESM(require_jsx_runtime());
function createSvgIcon(path, displayName) {
  const Component = (props, ref) => (0, import_jsx_runtime46.jsx)(SvgIcon_default, _extends({
    "data-testid": `${displayName}Icon`,
    ref
  }, props, {
    children: path
  }));
  if (true) {
    Component.displayName = `${displayName}Icon`;
  }
  Component.muiName = SvgIcon_default.muiName;
  return React49.memo(React49.forwardRef(Component));
}

// node_modules/@mui/joy/internal/svg-icons/Person.js
var import_jsx_runtime47 = __toESM(require_jsx_runtime());
var Person_default = createSvgIcon((0, import_jsx_runtime47.jsx)("path", {
  d: "M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"
}), "Person");

// node_modules/@mui/joy/Avatar/avatarClasses.js
function getAvatarUtilityClass(slot) {
  return generateUtilityClass2("JoyAvatar", slot);
}
var avatarClasses = generateUtilityClasses2("JoyAvatar", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "fallback", "sizeSm", "sizeMd", "sizeLg", "img", "variantOutlined", "variantSoft", "variantSolid"]);
var avatarClasses_default = avatarClasses;

// node_modules/@mui/joy/AvatarGroup/AvatarGroup.js
init_objectWithoutPropertiesLoose();
init_extends();
var React51 = __toESM(require_react());
init_clsx_m();
var import_prop_types29 = __toESM(require_prop_types());

// node_modules/@mui/joy/AvatarGroup/avatarGroupClasses.js
function getAvatarGroupUtilityClass(slot) {
  return generateUtilityClass2("JoyAvatarGroup", slot);
}
var avatarGroupClasses = generateUtilityClasses2("JoyAvatarGroup", ["root"]);
var avatarGroupClasses_default = avatarGroupClasses;

// node_modules/@mui/joy/AvatarGroup/AvatarGroup.js
var import_jsx_runtime48 = __toESM(require_jsx_runtime());
var _excluded32 = ["className", "color", "component", "size", "variant", "children"];
var AvatarGroupContext = React51.createContext(void 0);
var useUtilityClasses20 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getAvatarGroupUtilityClass, {});
};
var AvatarGroupGroupRoot = styled_default("div", {
  name: "JoyAvatarGroup",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  ownerState,
  theme
}) => _extends({}, ownerState.size === "sm" && {
  "--AvatarGroup-gap": "-0.375rem",
  "--Avatar-ringSize": "2px"
}, ownerState.size === "md" && {
  "--AvatarGroup-gap": "-0.5rem",
  "--Avatar-ringSize": "2px"
}, ownerState.size === "lg" && {
  "--AvatarGroup-gap": "-0.625rem",
  "--Avatar-ringSize": "4px"
}, {
  "--Avatar-ring": `0 0 0 var(--Avatar-ringSize) var(--Avatar-ringColor, ${theme.vars.palette.background.surface})`,
  "--Avatar-marginInlineStart": "var(--AvatarGroup-gap)",
  display: "flex",
  marginInlineStart: "calc(-1 * var(--AvatarGroup-gap))"
}));
var AvatarGroup = React51.forwardRef(function AvatarGroup2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyAvatarGroup"
  });
  const {
    className,
    color,
    component = "div",
    size = "md",
    variant,
    children
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded32);
  const ownerState = _extends({}, props, {
    color,
    component,
    size,
    variant
  });
  const classes = useUtilityClasses20();
  return (0, import_jsx_runtime48.jsx)(AvatarGroupContext.Provider, {
    value: ownerState,
    children: (0, import_jsx_runtime48.jsx)(AvatarGroupGroupRoot, _extends({
      as: component,
      ownerState,
      className: clsx_m_default(classes.root, className),
      ref
    }, other, {
      children
    }))
  });
});
true ? AvatarGroup.propTypes = {
  children: import_prop_types29.default.node,
  className: import_prop_types29.default.string,
  color: import_prop_types29.default.oneOfType([import_prop_types29.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types29.default.string]),
  component: import_prop_types29.default.elementType,
  size: import_prop_types29.default.oneOfType([import_prop_types29.default.oneOf(["lg", "md", "sm"]), import_prop_types29.default.string]),
  sx: import_prop_types29.default.oneOfType([import_prop_types29.default.arrayOf(import_prop_types29.default.oneOfType([import_prop_types29.default.func, import_prop_types29.default.object, import_prop_types29.default.bool])), import_prop_types29.default.func, import_prop_types29.default.object]),
  variant: import_prop_types29.default.oneOfType([import_prop_types29.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types29.default.string])
} : void 0;
var AvatarGroup_default = AvatarGroup;

// node_modules/@mui/joy/Avatar/Avatar.js
var import_jsx_runtime49 = __toESM(require_jsx_runtime());
var _excluded33 = ["alt", "color", "component", "componentsProps", "size", "variant", "imgProps", "src", "srcSet", "children"];
var useUtilityClasses21 = (ownerState) => {
  const {
    size,
    variant,
    color,
    src,
    srcSet
  } = ownerState;
  const slots = {
    root: ["root", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],
    img: [(src || srcSet) && "img"],
    fallback: ["fallback"]
  };
  return composeClasses(slots, getAvatarUtilityClass, {});
};
var AvatarRoot = styled_default("div", {
  name: "JoyAvatar",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  return [_extends({}, ownerState.size === "sm" && {
    width: `var(--Avatar-size, 2rem)`,
    height: `var(--Avatar-size, 2rem)`,
    fontSize: theme.vars.fontSize.sm
  }, ownerState.size === "md" && {
    width: `var(--Avatar-size, 2.5rem)`,
    height: `var(--Avatar-size, 2.5rem)`,
    fontSize: theme.vars.fontSize.md
  }, ownerState.size === "lg" && {
    width: `var(--Avatar-size, 3rem)`,
    height: `var(--Avatar-size, 3rem)`,
    fontSize: theme.vars.fontSize.lg
  }, {
    marginInlineStart: "var(--Avatar-marginInlineStart)",
    boxShadow: `var(--Avatar-ring)`,
    fontFamily: theme.vars.fontFamily.body,
    fontWeight: theme.vars.fontWeight.md,
    position: "relative",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    flexShrink: 0,
    lineHeight: 1,
    overflow: "hidden",
    borderRadius: "var(--Avatar-radius, 50%)",
    userSelect: "none"
  }), (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]];
});
var AvatarImg = styled_default("img", {
  name: "JoyAvatar",
  slot: "Img",
  overridesResolver: (props, styles2) => styles2.img
})({
  width: "100%",
  height: "100%",
  textAlign: "center",
  objectFit: "cover",
  color: "transparent",
  textIndent: 1e4
});
var AvatarFallback = styled_default(Person_default, {
  name: "JoyAvatar",
  slot: "Fallback",
  overridesResolver: (props, styles2) => styles2.fallback
})({
  width: "64%",
  height: "64%"
});
function useLoaded({
  crossOrigin,
  referrerPolicy,
  src,
  srcSet
}) {
  const [loaded, setLoaded] = React52.useState(false);
  React52.useEffect(() => {
    if (!src && !srcSet) {
      return void 0;
    }
    setLoaded(false);
    let active = true;
    const image = new Image();
    image.onload = () => {
      if (!active) {
        return;
      }
      setLoaded("loaded");
    };
    image.onerror = () => {
      if (!active) {
        return;
      }
      setLoaded("error");
    };
    image.crossOrigin = crossOrigin;
    image.referrerPolicy = referrerPolicy;
    if (src) {
      image.src = src;
    }
    if (srcSet) {
      image.srcset = srcSet;
    }
    return () => {
      active = false;
    };
  }, [crossOrigin, referrerPolicy, src, srcSet]);
  return loaded;
}
var Avatar = React52.forwardRef(function Avatar2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyAvatar"
  });
  const groupContext = React52.useContext(AvatarGroupContext);
  const {
    alt,
    color: colorProp = "neutral",
    component = "div",
    componentsProps = {},
    size: sizeProp = "md",
    variant: variantProp = "soft",
    imgProps,
    src,
    srcSet,
    children: childrenProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded33);
  const color = inProps.color || (groupContext == null ? void 0 : groupContext.color) || colorProp;
  const variant = inProps.variant || (groupContext == null ? void 0 : groupContext.variant) || variantProp;
  const size = inProps.size || (groupContext == null ? void 0 : groupContext.size) || sizeProp;
  let children = null;
  const ownerState = _extends({}, props, {
    color,
    component,
    size,
    variant,
    grouped: !!groupContext
  });
  const loaded = useLoaded(_extends({}, imgProps, typeof componentsProps.img === "function" ? componentsProps.img(ownerState) : componentsProps.img, {
    src,
    srcSet
  }));
  const hasImg = src || srcSet;
  const hasImgNotFailing = hasImg && loaded !== "error";
  const classes = useUtilityClasses21(ownerState);
  const imageProps = useSlotProps({
    elementType: AvatarImg,
    externalSlotProps: componentsProps.img,
    ownerState,
    additionalProps: _extends({
      alt,
      src,
      srcSet
    }, imgProps),
    className: classes.img
  });
  const fallbackProps = useSlotProps({
    elementType: AvatarFallback,
    externalSlotProps: componentsProps.fallback,
    ownerState,
    className: classes.fallback
  });
  if (hasImgNotFailing) {
    children = (0, import_jsx_runtime49.jsx)(AvatarImg, _extends({}, imageProps));
  } else if (childrenProp != null) {
    children = childrenProp;
  } else if (hasImg && alt) {
    children = alt[0];
  } else {
    children = (0, import_jsx_runtime49.jsx)(AvatarFallback, _extends({}, fallbackProps));
  }
  const rootProps = useSlotProps({
    elementType: AvatarRoot,
    externalSlotProps: componentsProps.root,
    ownerState,
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    className: classes.root
  });
  return (0, import_jsx_runtime49.jsx)(AvatarRoot, _extends({}, rootProps, {
    children
  }));
});
true ? Avatar.propTypes = {
  alt: import_prop_types30.default.string,
  children: import_prop_types30.default.node,
  color: import_prop_types30.default.oneOfType([import_prop_types30.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types30.default.string]),
  component: import_prop_types30.default.elementType,
  componentsProps: import_prop_types30.default.shape({
    fallback: import_prop_types30.default.oneOfType([import_prop_types30.default.func, import_prop_types30.default.object]),
    img: import_prop_types30.default.oneOfType([import_prop_types30.default.func, import_prop_types30.default.object]),
    root: import_prop_types30.default.oneOfType([import_prop_types30.default.func, import_prop_types30.default.object])
  }),
  imgProps: import_prop_types30.default.object,
  size: import_prop_types30.default.oneOfType([import_prop_types30.default.oneOf(["lg", "md", "sm"]), import_prop_types30.default.string]),
  src: import_prop_types30.default.string,
  srcSet: import_prop_types30.default.string,
  sx: import_prop_types30.default.oneOfType([import_prop_types30.default.arrayOf(import_prop_types30.default.oneOfType([import_prop_types30.default.func, import_prop_types30.default.object, import_prop_types30.default.bool])), import_prop_types30.default.func, import_prop_types30.default.object]),
  variant: import_prop_types30.default.oneOfType([import_prop_types30.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types30.default.string])
} : void 0;
var Avatar_default = Avatar;

// node_modules/@mui/joy/Badge/Badge.js
init_objectWithoutPropertiesLoose();
init_extends();
var React53 = __toESM(require_react());
var import_prop_types31 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Badge/badgeClasses.js
function getBadgeUtilityClass(slot) {
  return generateUtilityClass2("JoyBadge", slot);
}
var badgeClasses = generateUtilityClasses2("JoyBadge", ["root", "badge", "anchorOriginTopRight", "anchorOriginBottomRight", "anchorOriginTopLeft", "anchorOriginBottomLeft", "colorPrimary", "colorDanger", "colorInfo", "colorNeutral", "colorSuccess", "colorWarning", "invisible", "locationInside", "locationOutside", "sizeSm", "sizeMd", "sizeLg", "variantOutlined", "variantSoft", "variantSolid"]);
var badgeClasses_default = badgeClasses;

// node_modules/@mui/joy/Badge/Badge.js
var import_jsx_runtime50 = __toESM(require_jsx_runtime());
var import_jsx_runtime51 = __toESM(require_jsx_runtime());
var _excluded34 = ["anchorOrigin", "badgeInset", "children", "component", "componentsProps", "size", "color", "invisible", "max", "badgeContent", "showZero", "variant"];
var useUtilityClasses22 = (ownerState) => {
  const {
    color,
    variant,
    size,
    anchorOrigin,
    invisible
  } = ownerState;
  const slots = {
    root: ["root"],
    badge: ["badge", invisible && "invisible", anchorOrigin && `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`, variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getBadgeUtilityClass, {});
};
var BadgeRoot = styled_default("span", {
  name: "JoyBadge",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => _extends({}, ownerState.size === "sm" && _extends({
  "--Badge-minHeight": "0.5rem"
}, ownerState.badgeContent && {
  "--Badge-minHeight": "1rem"
}, {
  "--Badge-paddingX": "0.25rem",
  fontSize: theme.vars.fontSize.xs
}), ownerState.size === "md" && _extends({
  "--Badge-minHeight": "0.75rem"
}, ownerState.badgeContent && {
  "--Badge-minHeight": "1.25rem"
}, {
  "--Badge-paddingX": "0.375rem",
  fontSize: theme.vars.fontSize.sm
}), ownerState.size === "lg" && _extends({
  "--Badge-minHeight": "1rem"
}, ownerState.badgeContent && {
  "--Badge-minHeight": "1.5rem"
}, {
  "--Badge-paddingX": "0.5rem",
  fontSize: theme.vars.fontSize.md
}), {
  "--Badge-ringSize": "2px",
  "--Badge-ring": `0 0 0 var(--Badge-ringSize) var(--Badge-ringColor, ${theme.vars.palette.background.surface})`,
  position: "relative",
  display: "inline-flex",
  verticalAlign: "middle",
  flexShrink: 0
}));
var BadgeBadge = styled_default("span", {
  name: "JoyBadge",
  slot: "Badge",
  overridesResolver: (props, styles2) => styles2.badge
})(({
  theme,
  ownerState
}) => {
  var _ownerState$anchorOri, _ownerState$anchorOri2, _ownerState$anchorOri3, _ownerState$anchorOri4, _theme$variants;
  const inset = {
    top: ownerState.badgeInset,
    left: ownerState.badgeInset,
    bottom: ownerState.badgeInset,
    right: ownerState.badgeInset
  };
  if (typeof ownerState.badgeInset === "string") {
    const insetValues = ownerState.badgeInset.split(" ");
    if (insetValues.length > 1) {
      inset.top = insetValues[0];
      inset.right = insetValues[1];
      if (insetValues.length === 2) {
        inset.bottom = insetValues[0];
        inset.left = insetValues[1];
      }
      if (insetValues.length === 3) {
        inset.left = insetValues[1];
        inset.bottom = insetValues[2];
      }
      if (insetValues.length === 4) {
        inset.bottom = insetValues[2];
        inset.left = insetValues[3];
      }
    }
  }
  const translateY = ((_ownerState$anchorOri = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri.vertical) === "top" ? "translateY(-50%)" : "translateY(50%)";
  const translateX = ((_ownerState$anchorOri2 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri2.horizontal) === "left" ? "translateX(-50%)" : "translateX(50%)";
  const transformOriginY = ((_ownerState$anchorOri3 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri3.vertical) === "top" ? "0%" : "100%";
  const transformOriginX = ((_ownerState$anchorOri4 = ownerState.anchorOrigin) == null ? void 0 : _ownerState$anchorOri4.horizontal) === "left" ? "0%" : "100%";
  return _extends({
    display: "inline-flex",
    flexWrap: "wrap",
    justifyContent: "center",
    alignContent: "center",
    alignItems: "center",
    position: "absolute",
    boxSizing: "border-box",
    boxShadow: "var(--Badge-ring)",
    fontFamily: theme.vars.fontFamily.body,
    fontWeight: theme.vars.fontWeight.md,
    lineHeight: 1,
    padding: "calc(var(--Badge-paddingX) / 2 - var(--variant-borderWidth)) calc(var(--Badge-paddingX) - var(--variant-borderWidth))",
    minHeight: "var(--Badge-minHeight)",
    minWidth: "var(--Badge-minHeight)",
    borderRadius: "var(--Badge-radius, var(--Badge-minHeight))",
    zIndex: 1,
    transition: "transform 225ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    backgroundColor: theme.vars.palette.background.surface,
    [ownerState.anchorOrigin.vertical]: inset[ownerState.anchorOrigin.vertical],
    [ownerState.anchorOrigin.horizontal]: inset[ownerState.anchorOrigin.horizontal],
    transform: `scale(1) ${translateX} ${translateY}`,
    transformOrigin: `${transformOriginX} ${transformOriginY}`,
    [`&.${badgeClasses_default.invisible}`]: {
      transform: `scale(0) ${translateX} ${translateY}`
    }
  }, ownerState.invisible && {
    transition: "transform 195ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"
  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]);
});
var Badge = React53.forwardRef(function Badge2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyBadge"
  });
  const {
    anchorOrigin: anchorOriginProp = {
      vertical: "top",
      horizontal: "right"
    },
    badgeInset: badgeInsetProp = 0,
    children,
    component = "span",
    componentsProps = {},
    size: sizeProp = "md",
    color: colorProp = "primary",
    invisible: invisibleProp = false,
    max = 99,
    badgeContent: badgeContentProp = "",
    showZero = false,
    variant: variantProp = "solid"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded34);
  const prevProps = usePreviousProps_default({
    anchorOrigin: anchorOriginProp,
    size: sizeProp,
    badgeInset: badgeInsetProp,
    color: colorProp,
    variant: variantProp
  });
  let invisible = invisibleProp;
  if (invisibleProp === false && (badgeContentProp === 0 && !showZero || badgeContentProp == null)) {
    invisible = true;
  }
  const {
    color = colorProp,
    size = sizeProp,
    anchorOrigin = anchorOriginProp,
    variant = variantProp,
    badgeInset = badgeInsetProp
  } = invisible ? prevProps : props;
  const ownerState = _extends({}, props, {
    anchorOrigin,
    badgeInset,
    variant,
    invisible,
    color,
    size
  });
  const classes = useUtilityClasses22(ownerState);
  let displayValue = badgeContentProp && Number(badgeContentProp) > max ? `${max}+` : badgeContentProp;
  if (invisible && badgeContentProp === 0) {
    displayValue = "";
  }
  const rootProps = useSlotProps({
    elementType: BadgeRoot,
    ownerState,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    className: classes.root
  });
  const badgeProps = useSlotProps({
    elementType: BadgeBadge,
    ownerState,
    externalSlotProps: componentsProps.badge,
    className: classes.badge
  });
  return (0, import_jsx_runtime51.jsxs)(BadgeRoot, _extends({}, rootProps, {
    children: [children, (0, import_jsx_runtime50.jsx)(BadgeBadge, _extends({}, badgeProps, {
      children: displayValue
    }))]
  }));
});
true ? Badge.propTypes = {
  anchorOrigin: import_prop_types31.default.shape({
    horizontal: import_prop_types31.default.oneOf(["left", "right"]).isRequired,
    vertical: import_prop_types31.default.oneOf(["bottom", "top"]).isRequired
  }),
  badgeContent: import_prop_types31.default.node,
  badgeInset: import_prop_types31.default.oneOfType([import_prop_types31.default.number, import_prop_types31.default.string]),
  children: import_prop_types31.default.node,
  color: import_prop_types31.default.oneOfType([import_prop_types31.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types31.default.string]),
  component: import_prop_types31.default.elementType,
  componentsProps: import_prop_types31.default.shape({
    badge: import_prop_types31.default.oneOfType([import_prop_types31.default.func, import_prop_types31.default.object]),
    root: import_prop_types31.default.oneOfType([import_prop_types31.default.func, import_prop_types31.default.object])
  }),
  invisible: import_prop_types31.default.bool,
  max: import_prop_types31.default.number,
  showZero: import_prop_types31.default.bool,
  size: import_prop_types31.default.oneOf(["sm", "md", "lg"]),
  sx: import_prop_types31.default.oneOfType([import_prop_types31.default.arrayOf(import_prop_types31.default.oneOfType([import_prop_types31.default.func, import_prop_types31.default.object, import_prop_types31.default.bool])), import_prop_types31.default.func, import_prop_types31.default.object]),
  variant: import_prop_types31.default.oneOfType([import_prop_types31.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types31.default.string])
} : void 0;
var Badge_default = Badge;

// node_modules/@mui/joy/Box/Box.js
init_esm2();
var import_prop_types32 = __toESM(require_prop_types());
var Box = createBox({
  defaultTheme: defaultTheme_default,
  defaultClassName: "JoyBox-root",
  generateClassName: ClassNameGenerator_default.generate,
  styleFunctionSx: styleFunctionSx_default
});
true ? Box.propTypes = {
  children: import_prop_types32.default.node,
  component: import_prop_types32.default.elementType,
  sx: import_prop_types32.default.oneOfType([import_prop_types32.default.arrayOf(import_prop_types32.default.oneOfType([import_prop_types32.default.func, import_prop_types32.default.object, import_prop_types32.default.bool])), import_prop_types32.default.func, import_prop_types32.default.object])
} : void 0;
var Box_default = Box;

// node_modules/@mui/joy/Breadcrumbs/Breadcrumbs.js
init_objectWithoutPropertiesLoose();
init_extends();
var React54 = __toESM(require_react());
var import_prop_types33 = __toESM(require_prop_types());
init_esm();
init_clsx_m();

// node_modules/@mui/joy/Breadcrumbs/breadcrumbsClasses.js
function getBreadcrumbsUtilityClass(slot) {
  return generateUtilityClass("MuiBreadcrumbs", slot);
}
var breadcrumbsClasses = generateUtilityClasses("MuiBreadcrumbs", ["root", "ol", "li", "separator", "sizeSm", "sizeMd", "sizeLg"]);
var breadcrumbsClasses_default = breadcrumbsClasses;

// node_modules/@mui/joy/Breadcrumbs/Breadcrumbs.js
var import_jsx_runtime52 = __toESM(require_jsx_runtime());
var _excluded35 = ["children", "className", "component", "componentsProps", "size", "separator"];
var useUtilityClasses23 = (ownerState) => {
  const {
    size
  } = ownerState;
  const slots = {
    root: ["root", size && `size${capitalize(size)}`],
    li: ["li"],
    ol: ["ol"],
    separator: ["separator"]
  };
  return composeClasses(slots, getBreadcrumbsUtilityClass, {});
};
var BreadcrumbsRoot = styled_default("nav", {
  name: "JoyBreadcrumbs",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => _extends({}, ownerState.size === "sm" && {
  "--Breadcrumbs-gap": "0.25rem",
  fontSize: theme.vars.fontSize.sm,
  padding: "0.5rem"
}, ownerState.size === "md" && {
  "--Breadcrumbs-gap": "0.375rem",
  fontSize: theme.vars.fontSize.md,
  padding: "0.75rem"
}, ownerState.size === "lg" && {
  "--Breadcrumbs-gap": "0.5rem",
  fontSize: theme.vars.fontSize.lg,
  padding: "1rem"
}, {
  lineHeight: 1
}));
var BreadcrumbsOl = styled_default("ol", {
  name: "JoyBreadcrumbs",
  slot: "Ol",
  overridesResolver: (props, styles2) => styles2.ol
})({
  display: "flex",
  flexWrap: "wrap",
  alignItems: "center",
  padding: 0,
  margin: 0,
  listStyle: "none"
});
var BreadcrumbsLi = styled_default("li", {
  name: "JoyBreadcrumbs",
  slot: "Ol",
  overridesResolver: (props, styles2) => styles2.ol
})({});
var BreadcrumbsSeparator = styled_default("li", {
  name: "JoyBreadcrumbs",
  slot: "Separator",
  overridesResolver: (props, styles2) => styles2.separator
})({
  display: "flex",
  userSelect: "none",
  marginInline: "var(--Breadcrumbs-gap)"
});
var Breadcrumbs = React54.forwardRef(function Breadcrumbs2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyBreadcrumbs"
  });
  const {
    children,
    className,
    component = "nav",
    componentsProps = {},
    size = "md",
    separator = "/"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded35);
  const ownerState = _extends({}, props, {
    component,
    separator,
    size
  });
  const classes = useUtilityClasses23(ownerState);
  const rootProps = useSlotProps({
    elementType: BreadcrumbsRoot,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    ownerState,
    additionalProps: {
      ref,
      as: component
    },
    className: clsx_m_default(classes.root, className)
  });
  const olProps = useSlotProps({
    elementType: BreadcrumbsOl,
    externalSlotProps: componentsProps.ol,
    ownerState,
    className: classes.ol
  });
  const liProps = useSlotProps({
    elementType: BreadcrumbsLi,
    externalSlotProps: componentsProps.li,
    ownerState,
    className: classes.li
  });
  const separatorProps = useSlotProps({
    elementType: BreadcrumbsSeparator,
    externalSlotProps: componentsProps.separator,
    ownerState,
    additionalProps: {
      "aria-hidden": true
    },
    className: classes.separator
  });
  const allItems = React54.Children.toArray(children).filter((child) => {
    return React54.isValidElement(child);
  }).map((child, index) => (0, import_jsx_runtime52.jsx)(BreadcrumbsLi, _extends({}, liProps, {
    children: child
  }), `child-${index}`));
  return (0, import_jsx_runtime52.jsx)(BreadcrumbsRoot, _extends({}, rootProps, {
    children: (0, import_jsx_runtime52.jsx)(BreadcrumbsOl, _extends({}, olProps, {
      children: allItems.reduce((acc, current, index) => {
        if (index < allItems.length - 1) {
          acc = acc.concat(current, (0, import_jsx_runtime52.jsx)(BreadcrumbsSeparator, _extends({}, separatorProps, {
            children: separator
          }), `separator-${index}`));
        } else {
          acc.push(current);
        }
        return acc;
      }, [])
    }))
  }));
});
true ? Breadcrumbs.propTypes = {
  children: import_prop_types33.default.node,
  className: import_prop_types33.default.string,
  component: import_prop_types33.default.elementType,
  componentsProps: import_prop_types33.default.shape({
    li: import_prop_types33.default.oneOfType([import_prop_types33.default.func, import_prop_types33.default.object]),
    ol: import_prop_types33.default.oneOfType([import_prop_types33.default.func, import_prop_types33.default.object]),
    root: import_prop_types33.default.oneOfType([import_prop_types33.default.func, import_prop_types33.default.object]),
    separator: import_prop_types33.default.oneOfType([import_prop_types33.default.func, import_prop_types33.default.object])
  }),
  separator: import_prop_types33.default.node,
  size: import_prop_types33.default.oneOf(["sm", "md", "lg"]),
  sx: import_prop_types33.default.oneOfType([import_prop_types33.default.arrayOf(import_prop_types33.default.oneOfType([import_prop_types33.default.func, import_prop_types33.default.object, import_prop_types33.default.bool])), import_prop_types33.default.func, import_prop_types33.default.object])
} : void 0;
var Breadcrumbs_default = Breadcrumbs;

// node_modules/@mui/joy/Button/Button.js
init_objectWithoutPropertiesLoose();
init_extends();
var React55 = __toESM(require_react());
var import_prop_types34 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Button/buttonClasses.js
function getButtonUtilityClass(slot) {
  return generateUtilityClass2("JoyButton", slot);
}
var buttonClasses = generateUtilityClasses2("JoyButton", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "focusVisible", "disabled", "sizeSm", "sizeMd", "sizeLg", "fullWidth", "startDecorator", "endDecorator"]);
var buttonClasses_default = buttonClasses;

// node_modules/@mui/joy/Button/Button.js
var import_jsx_runtime53 = __toESM(require_jsx_runtime());
var import_jsx_runtime54 = __toESM(require_jsx_runtime());
var _excluded36 = ["children", "action", "component", "componentsProps", "color", "variant", "size", "fullWidth", "startDecorator", "endDecorator"];
var useUtilityClasses24 = (ownerState) => {
  const {
    color,
    disabled,
    focusVisible,
    focusVisibleClassName,
    fullWidth,
    size,
    variant
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", fullWidth && "fullWidth", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  const composedClasses = composeClasses(slots, getButtonUtilityClass, {});
  if (focusVisible && focusVisibleClassName) {
    composedClasses.root += ` ${focusVisibleClassName}`;
  }
  return composedClasses;
};
var ButtonStartDecorator = styled_default("span", {
  name: "JoyButton",
  slot: "StartDecorator",
  overridesResolver: (props, styles2) => styles2.startDecorator
})({
  "--Icon-margin": "0 0 0 calc(var(--Button-gap) / -2)",
  "--CircularProgress-margin": "0 0 0 calc(var(--Button-gap) / -2)",
  display: "inherit",
  marginRight: "var(--Button-gap)"
});
var ButtonEndDecorator = styled_default("span", {
  name: "JoyButton",
  slot: "EndDecorator",
  overridesResolver: (props, styles2) => styles2.endDecorator
})({
  "--Icon-margin": "0 calc(var(--Button-gap) / -2) 0 0",
  "--CircularProgress-margin": "0 calc(var(--Button-gap) / -2) 0 0",
  display: "inherit",
  marginLeft: "var(--Button-gap)"
});
var ButtonRoot = styled_default("button", {
  name: "JoyButton",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;
  return [_extends({
    "--Icon-margin": "initial",
    "--CircularProgress-size": "var(--Icon-fontSize)"
  }, ownerState.size === "sm" && {
    "--Icon-fontSize": "1.25rem",
    "--Button-gap": "0.375rem",
    minHeight: "var(--Button-minHeight, 2rem)",
    fontSize: theme.vars.fontSize.sm,
    paddingBlock: "2px",
    paddingInline: "0.75rem"
  }, ownerState.size === "md" && {
    "--Icon-fontSize": "1.5rem",
    "--Button-gap": "0.5rem",
    minHeight: "var(--Button-minHeight, 2.5rem)",
    fontSize: theme.vars.fontSize.sm,
    paddingBlock: "0.25rem",
    paddingInline: "1rem"
  }, ownerState.size === "lg" && {
    "--Icon-fontSize": "1.75rem",
    "--Button-gap": "0.75rem",
    minHeight: "var(--Button-minHeight, 3rem)",
    fontSize: theme.vars.fontSize.md,
    paddingBlock: "0.375rem",
    paddingInline: "1.5rem"
  }, {
    borderRadius: `var(--Button-radius, ${theme.vars.radius.sm})`,
    margin: `var(--Button-margin)`,
    border: "none",
    backgroundColor: "transparent",
    cursor: "pointer",
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    position: "relative",
    textDecoration: "none",
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    fontFamily: theme.vars.fontFamily.body,
    fontWeight: theme.vars.fontWeight.md,
    lineHeight: 1
  }, ownerState.fullWidth && {
    width: "100%"
  }, {
    [theme.focus.selector]: theme.focus.default
  }), (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {
    "&:hover": (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color]
  }, {
    "&:active": (_theme$variants3 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants3[ownerState.color]
  }, {
    [`&.${buttonClasses_default.disabled}`]: (_theme$variants4 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants4[ownerState.color]
  }];
});
var Button = React55.forwardRef(function Button2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyButton"
  });
  const {
    children,
    action,
    component = "button",
    componentsProps = {},
    color = "primary",
    variant = "solid",
    size = "md",
    fullWidth = false,
    startDecorator,
    endDecorator
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded36);
  const buttonRef = React55.useRef(null);
  const handleRef = useForkRef(buttonRef, ref);
  const {
    focusVisible,
    setFocusVisible,
    getRootProps
  } = useButton(_extends({}, props, {
    ref: handleRef
  }));
  React55.useImperativeHandle(action, () => ({
    focusVisible: () => {
      var _buttonRef$current;
      setFocusVisible(true);
      (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();
    }
  }), [setFocusVisible]);
  const ownerState = _extends({}, props, {
    component,
    color,
    fullWidth,
    variant,
    size,
    focusVisible
  });
  const classes = useUtilityClasses24(ownerState);
  const rootProps = useSlotProps({
    elementType: ButtonRoot,
    externalSlotProps: componentsProps.root,
    ownerState,
    getSlotProps: getRootProps,
    externalForwardedProps: other,
    additionalProps: {
      as: component
    },
    className: classes.root
  });
  const startDecoratorProps = useSlotProps({
    elementType: ButtonStartDecorator,
    externalSlotProps: componentsProps.startDecorator,
    ownerState,
    className: classes.startDecorator
  });
  const endDecoratorProps = useSlotProps({
    elementType: ButtonEndDecorator,
    externalSlotProps: componentsProps.endDecorator,
    ownerState,
    className: classes.endDecorator
  });
  return (0, import_jsx_runtime54.jsxs)(ButtonRoot, _extends({}, rootProps, {
    children: [startDecorator && (0, import_jsx_runtime53.jsx)(ButtonStartDecorator, _extends({}, startDecoratorProps, {
      children: startDecorator
    })), children, endDecorator && (0, import_jsx_runtime53.jsx)(ButtonEndDecorator, _extends({}, endDecoratorProps, {
      children: endDecorator
    }))]
  }));
});
true ? Button.propTypes = {
  action: import_prop_types34.default.oneOfType([import_prop_types34.default.func, import_prop_types34.default.shape({
    current: import_prop_types34.default.shape({
      focusVisible: import_prop_types34.default.func.isRequired
    })
  })]),
  children: import_prop_types34.default.node,
  color: import_prop_types34.default.oneOfType([import_prop_types34.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types34.default.string]),
  component: import_prop_types34.default.elementType,
  componentsProps: import_prop_types34.default.shape({
    endDecorator: import_prop_types34.default.oneOfType([import_prop_types34.default.func, import_prop_types34.default.object]),
    root: import_prop_types34.default.oneOfType([import_prop_types34.default.func, import_prop_types34.default.object]),
    startDecorator: import_prop_types34.default.oneOfType([import_prop_types34.default.func, import_prop_types34.default.object])
  }),
  disabled: import_prop_types34.default.bool,
  endDecorator: import_prop_types34.default.node,
  focusVisibleClassName: import_prop_types34.default.string,
  fullWidth: import_prop_types34.default.bool,
  size: import_prop_types34.default.oneOfType([import_prop_types34.default.oneOf(["sm", "md", "lg"]), import_prop_types34.default.string]),
  startDecorator: import_prop_types34.default.node,
  sx: import_prop_types34.default.oneOfType([import_prop_types34.default.arrayOf(import_prop_types34.default.oneOfType([import_prop_types34.default.func, import_prop_types34.default.object, import_prop_types34.default.bool])), import_prop_types34.default.func, import_prop_types34.default.object]),
  tabIndex: import_prop_types34.default.number,
  variant: import_prop_types34.default.oneOfType([import_prop_types34.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types34.default.string])
} : void 0;
var Button_default = Button;

// node_modules/@mui/joy/CircularProgress/CircularProgress.js
init_extends();
init_objectWithoutPropertiesLoose();
var React56 = __toESM(require_react());
var import_prop_types35 = __toESM(require_prop_types());
init_clsx_m();
init_esm2();
init_esm();

// node_modules/@mui/joy/CircularProgress/circularProgressClasses.js
function getCircularProgressUtilityClass(slot) {
  return generateUtilityClass2("JoyCircularProgress", slot);
}
var circularProgressClasses = generateUtilityClasses2("JoyCircularProgress", ["root", "determinate", "svg", "track", "progress", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var circularProgressClasses_default = circularProgressClasses;

// node_modules/@mui/joy/CircularProgress/CircularProgress.js
var import_jsx_runtime55 = __toESM(require_jsx_runtime());
var import_jsx_runtime56 = __toESM(require_jsx_runtime());
var _ = (t) => t;
var _t;
var _excluded37 = ["color", "backgroundColor"];
var _excluded210 = ["componentsProps", "component", "children", "className", "color", "size", "variant", "thickness", "determinate", "value"];
var circulate = keyframes({
  "0%": {
    transform: "rotate(-90deg)"
  },
  "100%": {
    transform: "rotate(270deg)"
  }
});
var useUtilityClasses25 = (ownerState) => {
  const {
    determinate,
    color,
    variant,
    size
  } = ownerState;
  const slots = {
    root: ["root", determinate && "indeterminate", color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`, size && `size${capitalize(size)}`],
    svg: ["svg"],
    track: ["track"],
    progress: ["progress"]
  };
  return composeClasses(slots, getCircularProgressUtilityClass, {});
};
var CircularProgressRoot = styled_default("span", {
  name: "JoyCircularProgress",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  ownerState,
  theme
}) => {
  var _theme$variants;
  const _ref = ((_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]) || {}, {
    color,
    backgroundColor
  } = _ref, rest = _objectWithoutPropertiesLoose(_ref, _excluded37);
  return _extends({
    "--Icon-fontSize": "calc(0.4 * var(--_root-size))",
    "--CircularProgress-track-color": backgroundColor,
    "--CircularProgress-progress-color": color,
    "--CircularProgress-percent": ownerState.value,
    "--CircularProgress-linecap": "round"
  }, ownerState.size === "sm" && {
    "--CircularProgress-track-thickness": "3px",
    "--CircularProgress-progress-thickness": "3px",
    "--_root-size": "var(--CircularProgress-size, 24px)"
  }, ownerState.instanceSize === "sm" && {
    "--CircularProgress-size": "24px"
  }, ownerState.size === "md" && {
    "--CircularProgress-track-thickness": "6px",
    "--CircularProgress-progress-thickness": "6px",
    "--_root-size": "var(--CircularProgress-size, 40px)"
  }, ownerState.instanceSize === "md" && {
    "--CircularProgress-size": "40px"
  }, ownerState.size === "lg" && {
    "--CircularProgress-track-thickness": "8px",
    "--CircularProgress-progress-thickness": "8px",
    "--_root-size": "var(--CircularProgress-size, 64px)"
  }, ownerState.instanceSize === "lg" && {
    "--CircularProgress-size": "64px"
  }, ownerState.thickness && {
    "--CircularProgress-track-thickness": `${ownerState.thickness}px`,
    "--CircularProgress-progress-thickness": `${ownerState.thickness}px`
  }, {
    "--_thickness-diff": "calc(var(--CircularProgress-track-thickness) - var(--CircularProgress-progress-thickness))",
    "--_inner-size": "calc(var(--_root-size) - 2 * var(--variant-borderWidth))",
    width: "var(--_root-size)",
    height: "var(--_root-size)",
    borderRadius: "var(--_root-size)",
    margin: "var(--CircularProgress-margin)",
    boxSizing: "border-box",
    display: "inline-flex",
    justifyContent: "center",
    alignItems: "center",
    position: "relative",
    color
  }, ownerState.children && {
    fontFamily: theme.vars.fontFamily.body,
    fontWeight: theme.vars.fontWeight.md,
    fontSize: "calc(0.2 * var(--_root-size))"
  }, rest);
});
var CircularProgressSvg = styled_default("svg", {
  name: "JoyCircularProgress",
  slot: "Svg",
  overridesResolver: (props, styles2) => styles2.svg
})({
  width: "inherit",
  height: "inherit",
  display: "inherit",
  boxSizing: "inherit",
  position: "absolute",
  top: "calc(-1 * var(--variant-borderWidth))",
  left: "calc(-1 * var(--variant-borderWidth))"
});
var CircularProgressTrack = styled_default("circle", {
  name: "JoyCircularProgress",
  slot: "track",
  overridesResolver: (props, styles2) => styles2.track
})({
  cx: "50%",
  cy: "50%",
  r: "calc(var(--_inner-size) / 2 - var(--CircularProgress-track-thickness) / 2 + min(0px, var(--_thickness-diff) / 2))",
  fill: "transparent",
  strokeWidth: "var(--CircularProgress-track-thickness)",
  stroke: "var(--CircularProgress-track-color)"
});
var CircularProgressProgress = styled_default("circle", {
  name: "JoyCircularProgress",
  slot: "progress",
  overridesResolver: (props, styles2) => styles2.progress
})({
  "--_progress-radius": "calc(var(--_inner-size) / 2 - var(--CircularProgress-progress-thickness) / 2 - max(0px, var(--_thickness-diff) / 2))",
  "--_progress-length": "calc(2 * 3.1415926535 * var(--_progress-radius))",
  cx: "50%",
  cy: "50%",
  r: "var(--_progress-radius)",
  fill: "transparent",
  strokeWidth: "var(--CircularProgress-progress-thickness)",
  stroke: "var(--CircularProgress-progress-color)",
  strokeLinecap: "var(--CircularProgress-linecap, round)",
  strokeDasharray: "var(--_progress-length)",
  strokeDashoffset: "calc(var(--_progress-length) - var(--CircularProgress-percent) * var(--_progress-length) / 100)",
  transformOrigin: "center",
  transform: "rotate(-90deg)"
}, ({
  ownerState
}) => ownerState.determinate ? {
  transition: "stroke-dashoffset 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"
} : css(_t || (_t = _`
          animation: var(
              --CircularProgress-circulation,
              0.5s linear 0s infinite normal none running
            )
            ${0};
        `), circulate));
var CircularProgress = React56.forwardRef(function CircularProgress2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyCircularProgress"
  });
  const {
    componentsProps = {},
    component = "span",
    children,
    className,
    color = "primary",
    size = "md",
    variant = "soft",
    thickness,
    determinate = false,
    value = determinate ? 0 : 25
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded210);
  const ownerState = _extends({}, props, {
    color,
    size,
    variant,
    thickness,
    value,
    determinate,
    instanceSize: inProps.size
  });
  const classes = useUtilityClasses25(ownerState);
  const rootProps = useSlotProps(_extends({
    elementType: CircularProgressRoot,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    ownerState,
    additionalProps: {
      ref,
      as: component,
      role: "progressbar"
    },
    className: clsx_m_default(classes.root, className)
  }, value && determinate && {
    "aria-valuenow": typeof value === "number" ? Math.round(value) : Math.round(Number(value || 0))
  }));
  const svgProps = useSlotProps({
    elementType: CircularProgressSvg,
    externalSlotProps: componentsProps.svg,
    ownerState,
    className: classes.svg
  });
  const trackProps = useSlotProps({
    elementType: CircularProgressTrack,
    externalSlotProps: componentsProps.track,
    ownerState,
    className: classes.track
  });
  const progressProps = useSlotProps({
    elementType: CircularProgressProgress,
    externalSlotProps: componentsProps.progress,
    ownerState,
    className: classes.progress
  });
  return (0, import_jsx_runtime56.jsxs)(CircularProgressRoot, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime56.jsxs)(CircularProgressSvg, _extends({}, svgProps, {
      children: [(0, import_jsx_runtime55.jsx)(CircularProgressTrack, _extends({}, trackProps)), (0, import_jsx_runtime55.jsx)(CircularProgressProgress, _extends({}, progressProps))]
    })), children]
  }));
});
true ? CircularProgress.propTypes = {
  children: import_prop_types35.default.node,
  className: import_prop_types35.default.string,
  color: import_prop_types35.default.oneOfType([import_prop_types35.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types35.default.string]),
  component: import_prop_types35.default.elementType,
  componentsProps: import_prop_types35.default.shape({
    progress: import_prop_types35.default.oneOfType([import_prop_types35.default.func, import_prop_types35.default.object]),
    root: import_prop_types35.default.oneOfType([import_prop_types35.default.func, import_prop_types35.default.object]),
    svg: import_prop_types35.default.oneOfType([import_prop_types35.default.func, import_prop_types35.default.object]),
    track: import_prop_types35.default.oneOfType([import_prop_types35.default.func, import_prop_types35.default.object])
  }),
  determinate: import_prop_types35.default.bool,
  size: import_prop_types35.default.oneOfType([import_prop_types35.default.oneOf(["sm", "md", "lg"]), import_prop_types35.default.string]),
  sx: import_prop_types35.default.oneOfType([import_prop_types35.default.arrayOf(import_prop_types35.default.oneOfType([import_prop_types35.default.func, import_prop_types35.default.object, import_prop_types35.default.bool])), import_prop_types35.default.func, import_prop_types35.default.object]),
  thickness: import_prop_types35.default.number,
  value: import_prop_types35.default.number,
  variant: import_prop_types35.default.oneOfType([import_prop_types35.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types35.default.string])
} : void 0;
var CircularProgress_default = CircularProgress;

// node_modules/@mui/joy/Card/Card.js
init_objectWithoutPropertiesLoose();
init_extends();
var React58 = __toESM(require_react());
init_clsx_m();
var import_prop_types36 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Card/cardClasses.js
function getCardUtilityClass(slot) {
  return generateUtilityClass2("JoyCard", slot);
}
var cardClasses = generateUtilityClasses2("JoyCard", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg", "row"]);
var cardClasses_default = cardClasses;

// node_modules/@mui/joy/styles/styleUtils.js
init_extends();
var resolveSxValue = ({
  theme,
  ownerState
}, key, defaultValue) => {
  let parsedValue;
  let sxObject = {};
  function resolveSx(sxProp) {
    if (typeof sxProp === "function") {
      const result = sxProp(theme);
      resolveSx(result);
    } else if (Array.isArray(sxProp)) {
      sxProp.forEach((sxItem) => {
        if (typeof sxItem !== "boolean") {
          resolveSx(sxItem);
        }
      });
    } else if (typeof sxProp === "object") {
      sxObject = _extends({}, sxObject, sxProp);
    }
  }
  if (ownerState.sx) {
    resolveSx(ownerState.sx);
    const value = sxObject[key];
    if (typeof value === "string" || typeof value === "number") {
      if (key === "borderRadius") {
        var _theme$vars;
        if (typeof value === "number") {
          return `${value}px`;
        }
        parsedValue = ((_theme$vars = theme.vars) == null ? void 0 : _theme$vars.radius[value]) || value;
      }
    }
  }
  return parsedValue || defaultValue;
};

// node_modules/@mui/joy/Card/CardContext.js
var React57 = __toESM(require_react());
var CardRowContext = React57.createContext(false);

// node_modules/@mui/joy/Card/Card.js
var import_jsx_runtime57 = __toESM(require_jsx_runtime());
var _excluded38 = ["className", "color", "component", "size", "variant", "children", "row"];
var useUtilityClasses26 = (ownerState) => {
  const {
    size,
    variant,
    color,
    row
  } = ownerState;
  const slots = {
    root: ["root", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`, row && "row"]
  };
  return composeClasses(slots, getCardUtilityClass, {});
};
var CardRoot = styled_default("div", {
  name: "JoyCard",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  return [_extends({
    "--Card-childRadius": "max((var(--Card-radius) - var(--variant-borderWidth)) - var(--Card-padding), min(var(--Card-padding) / 2, (var(--Card-radius) - var(--variant-borderWidth)) / 2))",
    "--AspectRatio-radius": "var(--Card-childRadius)",
    "--internal-action-margin": "calc(-1 * var(--variant-borderWidth))",
    "--internal-action-radius": resolveSxValue({
      theme,
      ownerState
    }, "borderRadius", "var(--Card-radius)"),
    "--CardCover-radius": "calc(var(--Card-radius) - var(--variant-borderWidth))",
    "--CardOverflow-offset": `calc(-1 * var(--Card-padding))`,
    "--CardOverflow-radius": "calc(var(--Card-radius) - var(--variant-borderWidth))",
    "--Divider-inset": "calc(-1 * var(--Card-padding))"
  }, ownerState.size === "sm" && {
    "--Card-radius": theme.vars.radius.sm,
    "--Card-padding": "0.5rem"
  }, ownerState.size === "md" && {
    "--Card-radius": theme.vars.radius.md,
    "--Card-padding": "1rem",
    fontSize: theme.vars.fontSize.md
  }, ownerState.size === "lg" && {
    "--Card-radius": theme.vars.radius.lg,
    "--Card-padding": "1.5rem"
  }, {
    padding: "var(--Card-padding)",
    borderRadius: "var(--Card-radius)",
    boxShadow: theme.vars.shadow.sm,
    backgroundColor: theme.vars.palette.background.surface,
    fontFamily: theme.vars.fontFamily.body,
    transition: "box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    position: "relative",
    display: "flex",
    flexDirection: ownerState.row ? "row" : "column"
  }), (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]];
});
var Card = React58.forwardRef(function Card2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyCard"
  });
  const {
    className,
    color = "neutral",
    component = "div",
    size = "md",
    variant = "plain",
    children,
    row = false
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded38);
  const ownerState = _extends({}, props, {
    color,
    component,
    row,
    size,
    variant
  });
  const classes = useUtilityClasses26(ownerState);
  return (0, import_jsx_runtime57.jsx)(CardRowContext.Provider, {
    value: row,
    children: (0, import_jsx_runtime57.jsx)(CardRoot, _extends({
      as: component,
      ownerState,
      className: clsx_m_default(classes.root, className),
      ref
    }, other, {
      children: React58.Children.map(children, (child, index) => {
        if (!React58.isValidElement(child)) {
          return child;
        }
        const extraProps = {};
        if (isMuiElement(child, ["Divider"])) {
          extraProps.inset = "inset" in child.props ? child.props.inset : "context";
          const orientation = row ? "vertical" : "horizontal";
          extraProps.orientation = "orientation" in child.props ? child.props.orientation : orientation;
        }
        if (index === 0) {
          extraProps["data-first-child"] = "";
        }
        if (index === React58.Children.count(children) - 1) {
          extraProps["data-last-child"] = "";
        }
        return React58.cloneElement(child, extraProps);
      })
    }))
  });
});
true ? Card.propTypes = {
  children: import_prop_types36.default.node,
  className: import_prop_types36.default.string,
  color: import_prop_types36.default.oneOfType([import_prop_types36.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types36.default.string]),
  component: import_prop_types36.default.elementType,
  row: import_prop_types36.default.bool,
  size: import_prop_types36.default.oneOfType([import_prop_types36.default.oneOf(["lg", "md", "sm"]), import_prop_types36.default.string]),
  sx: import_prop_types36.default.oneOfType([import_prop_types36.default.arrayOf(import_prop_types36.default.oneOfType([import_prop_types36.default.func, import_prop_types36.default.object, import_prop_types36.default.bool])), import_prop_types36.default.func, import_prop_types36.default.object]),
  variant: import_prop_types36.default.oneOfType([import_prop_types36.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types36.default.string])
} : void 0;
var Card_default = Card;

// node_modules/@mui/joy/CardContent/CardContent.js
init_extends();
init_objectWithoutPropertiesLoose();
var React59 = __toESM(require_react());
init_clsx_m();
var import_prop_types37 = __toESM(require_prop_types());

// node_modules/@mui/joy/CardContent/cardContentClasses.js
function getCardContentUtilityClass(slot) {
  return generateUtilityClass2("JoyCardContent", slot);
}
var cardClasses2 = generateUtilityClasses2("JoyCardContent", ["root"]);
var cardContentClasses_default = cardClasses2;

// node_modules/@mui/joy/CardContent/CardContent.js
var import_jsx_runtime58 = __toESM(require_jsx_runtime());
var _excluded39 = ["className", "component", "children"];
var useUtilityClasses27 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getCardContentUtilityClass, {});
};
var CardContentRoot = styled_default("div", {
  name: "JoyCardContent",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})({
  display: "flex",
  flexDirection: "column",
  flexGrow: 1,
  zIndex: 1
});
var CardContent = React59.forwardRef(function CardContent2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyCardContent"
  });
  const {
    className,
    component = "div",
    children
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded39);
  const ownerState = _extends({}, props, {
    component
  });
  const classes = useUtilityClasses27();
  return (0, import_jsx_runtime58.jsx)(CardContentRoot, _extends({
    as: component,
    ownerState,
    className: clsx_m_default(classes.root, className),
    ref
  }, other, {
    children
  }));
});
true ? CardContent.propTypes = {
  children: import_prop_types37.default.node,
  className: import_prop_types37.default.string,
  component: import_prop_types37.default.elementType,
  sx: import_prop_types37.default.oneOfType([import_prop_types37.default.arrayOf(import_prop_types37.default.oneOfType([import_prop_types37.default.func, import_prop_types37.default.object, import_prop_types37.default.bool])), import_prop_types37.default.func, import_prop_types37.default.object])
} : void 0;
var CardContent_default = CardContent;

// node_modules/@mui/joy/CardCover/CardCover.js
init_extends();
init_objectWithoutPropertiesLoose();
var React60 = __toESM(require_react());
init_clsx_m();
var import_prop_types38 = __toESM(require_prop_types());

// node_modules/@mui/joy/CardCover/cardCoverClasses.js
function getCardCoverUtilityClass(slot) {
  return generateUtilityClass2("JoyCardCover", slot);
}
var cardCoverClasses = generateUtilityClasses2("JoyCardCover", ["root"]);
var cardCoverClasses_default = cardCoverClasses;

// node_modules/@mui/joy/CardCover/CardCover.js
var import_jsx_runtime59 = __toESM(require_jsx_runtime());
var _excluded40 = ["className", "component", "children"];
var useUtilityClasses28 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getCardCoverUtilityClass, {});
};
var CardCoverRoot = styled_default("div", {
  name: "JoyCardCover",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})({
  position: "absolute",
  zIndex: 0,
  top: 0,
  left: 0,
  width: "100%",
  height: "100%",
  borderRadius: "var(--CardCover-radius)",
  "& [data-first-child]": {
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    width: "100%",
    height: "100%",
    objectFit: "cover",
    boxSizing: "border-box",
    borderRadius: "var(--CardCover-radius)",
    margin: 0,
    padding: 0,
    "& > img": {
      width: "100%",
      height: "100%",
      objectFit: "cover"
    }
  }
});
var CardCover = React60.forwardRef(function CardCover2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyCardCover"
  });
  const {
    className,
    component = "div",
    children
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded40);
  const ownerState = _extends({}, props, {
    component
  });
  const classes = useUtilityClasses28();
  return (0, import_jsx_runtime59.jsx)(CardCoverRoot, _extends({
    as: component,
    ownerState,
    className: clsx_m_default(classes.root, className),
    ref
  }, other, {
    children: React60.Children.map(children, (child, index) => index === 0 && React60.isValidElement(child) ? React60.cloneElement(child, {
      "data-first-child": ""
    }) : child)
  }));
});
true ? CardCover.propTypes = {
  children: import_prop_types38.default.node,
  className: import_prop_types38.default.string,
  component: import_prop_types38.default.elementType,
  sx: import_prop_types38.default.oneOfType([import_prop_types38.default.arrayOf(import_prop_types38.default.oneOfType([import_prop_types38.default.func, import_prop_types38.default.object, import_prop_types38.default.bool])), import_prop_types38.default.func, import_prop_types38.default.object])
} : void 0;
var CardCover_default = CardCover;

// node_modules/@mui/joy/CardOverflow/CardOverflow.js
init_objectWithoutPropertiesLoose();
init_extends();
var React61 = __toESM(require_react());
init_clsx_m();
var import_prop_types39 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/CardOverflow/cardOverflowClasses.js
function getCardOverflowUtilityClass(slot) {
  return generateUtilityClass2("JoyCardOverflow", slot);
}
var aspectRatioClasses2 = generateUtilityClasses2("JoyCardOverflow", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var cardOverflowClasses_default = aspectRatioClasses2;

// node_modules/@mui/joy/CardOverflow/CardOverflow.js
var import_jsx_runtime60 = __toESM(require_jsx_runtime());
var _excluded41 = ["className", "component", "children", "color", "variant"];
var useUtilityClasses29 = (ownerState) => {
  const {
    variant,
    color
  } = ownerState;
  const slots = {
    root: ["root", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]
  };
  return composeClasses(slots, getCardOverflowUtilityClass, {});
};
var CardOverflowRoot = styled_default("div", {
  name: "JoyCardOverflow",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  const childRadius = "calc(var(--CardOverflow-radius) - var(--variant-borderWidth))";
  return [ownerState.row ? _extends({
    "--AspectRatio-margin": "calc(-1 * var(--Card-padding)) 0px",
    marginTop: "var(--CardOverflow-offset)",
    marginBottom: "var(--CardOverflow-offset)",
    padding: "var(--Card-padding) 0px",
    borderRadius: "var(--CardOverflow-radius)",
    position: "relative"
  }, ownerState["data-first-child"] !== void 0 && {
    "--AspectRatio-radius": `${childRadius} 0 0 ${childRadius}`,
    borderTopRightRadius: 0,
    borderBottomRightRadius: 0,
    marginLeft: "var(--CardOverflow-offset)"
  }, ownerState["data-last-child"] !== void 0 && {
    "--AspectRatio-radius": `0 ${childRadius} ${childRadius} 0`,
    borderTopLeftRadius: 0,
    borderBottomLeftRadius: 0,
    marginRight: "var(--CardOverflow-offset)"
  }) : _extends({
    "--AspectRatio-margin": "0px calc(-1 * var(--Card-padding))",
    marginLeft: "var(--CardOverflow-offset)",
    marginRight: "var(--CardOverflow-offset)",
    padding: "0px var(--Card-padding)",
    borderRadius: "var(--CardOverflow-radius)",
    position: "relative"
  }, ownerState["data-first-child"] !== void 0 && {
    "--AspectRatio-radius": `${childRadius} ${childRadius} 0 0`,
    borderBottomLeftRadius: 0,
    borderBottomRightRadius: 0,
    marginTop: "var(--CardOverflow-offset)"
  }, ownerState["data-last-child"] !== void 0 && {
    "--AspectRatio-radius": `0 0 ${childRadius} ${childRadius}`,
    borderTopLeftRadius: 0,
    borderTopRightRadius: 0,
    marginBottom: "var(--CardOverflow-offset)"
  }), (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]];
});
var CardOverflow = React61.forwardRef(function CardOverflow2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyCardOverflow"
  });
  const row = React61.useContext(CardRowContext);
  const {
    className,
    component = "div",
    children,
    color = "neutral",
    variant = "plain"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded41);
  const ownerState = _extends({}, props, {
    component,
    color,
    variant,
    row
  });
  const classes = useUtilityClasses29(ownerState);
  return (0, import_jsx_runtime60.jsx)(CardOverflowRoot, _extends({
    as: component,
    ownerState,
    className: clsx_m_default(classes.root, className),
    ref
  }, other, {
    children
  }));
});
true ? CardOverflow.propTypes = {
  children: import_prop_types39.default.node,
  className: import_prop_types39.default.string,
  color: import_prop_types39.default.oneOfType([import_prop_types39.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types39.default.string]),
  component: import_prop_types39.default.elementType,
  sx: import_prop_types39.default.oneOfType([import_prop_types39.default.arrayOf(import_prop_types39.default.oneOfType([import_prop_types39.default.func, import_prop_types39.default.object, import_prop_types39.default.bool])), import_prop_types39.default.func, import_prop_types39.default.object]),
  variant: import_prop_types39.default.oneOfType([import_prop_types39.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types39.default.string])
} : void 0;
var CardOverflow_default = CardOverflow;

// node_modules/@mui/joy/Checkbox/Checkbox.js
init_objectWithoutPropertiesLoose();
init_extends();
var React66 = __toESM(require_react());
var import_prop_types41 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Checkbox/checkboxClasses.js
function getCheckboxUtilityClass(slot) {
  return generateUtilityClass2("JoyCheckbox", slot);
}
var checkboxClasses = generateUtilityClasses2("JoyCheckbox", ["root", "checkbox", "action", "input", "label", "checked", "disabled", "focusVisible", "indeterminate", "colorPrimary", "colorDanger", "colorInfo", "colorNeutral", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantOutlined", "variantSoft", "variantSolid"]);
var checkboxClasses_default = checkboxClasses;

// node_modules/@mui/joy/internal/svg-icons/Check.js
var React62 = __toESM(require_react());
var import_jsx_runtime61 = __toESM(require_jsx_runtime());
var Check_default = createSvgIcon((0, import_jsx_runtime61.jsx)("path", {
  d: "M9 16.17 5.53 12.7a.9959.9959 0 0 0-1.41 0c-.39.39-.39 1.02 0 1.41l4.18 4.18c.39.39 1.02.39 1.41 0L20.29 7.71c.39-.39.39-1.02 0-1.41a.9959.9959 0 0 0-1.41 0L9 16.17z"
}), "Check");

// node_modules/@mui/joy/internal/svg-icons/HorizontalRule.js
var React63 = __toESM(require_react());
var import_jsx_runtime62 = __toESM(require_jsx_runtime());
var HorizontalRule_default = createSvgIcon((0, import_jsx_runtime62.jsx)("path", {
  d: "M19 13H5c-.55 0-1-.45-1-1s.45-1 1-1h14c.55 0 1 .45 1 1s-.45 1-1 1z"
}), "HorizontalRule");

// node_modules/@mui/joy/Typography/Typography.js
init_objectWithoutPropertiesLoose();
init_extends();
var React64 = __toESM(require_react());
var import_prop_types40 = __toESM(require_prop_types());
init_esm();
init_esm2();

// node_modules/@mui/joy/Typography/typographyClasses.js
function getTypographyUtilityClass(slot) {
  return generateUtilityClass2("JoyTypography", slot);
}
var typographyClasses = generateUtilityClasses2("JoyTypography", ["root", "h1", "h2", "h3", "h4", "h5", "h6", "body1", "body2", "body3", "noWrap", "gutterBottom", "startDecorator", "endDecorator", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var typographyClasses_default = typographyClasses;

// node_modules/@mui/joy/Typography/Typography.js
var import_jsx_runtime63 = __toESM(require_jsx_runtime());
var import_jsx_runtime64 = __toESM(require_jsx_runtime());
var _excluded42 = ["color", "textColor"];
var _excluded211 = ["component", "componentsProps", "gutterBottom", "noWrap", "level", "levelMapping", "children", "endDecorator", "startDecorator", "variant"];
var TypographyContext = React64.createContext(false);
var useUtilityClasses30 = (ownerState) => {
  const {
    gutterBottom,
    noWrap,
    level,
    color,
    variant
  } = ownerState;
  const slots = {
    root: ["root", level, gutterBottom && "gutterBottom", noWrap && "noWrap", color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  return composeClasses(slots, getTypographyUtilityClass, {});
};
var StartDecorator = styled_default("span", {
  name: "JoyTypography",
  slot: "StartDecorator",
  overridesResolver: (props, styles2) => styles2.startDecorator
})(({
  ownerState
}) => {
  var _ownerState$sx;
  return _extends({
    display: "inline-flex",
    marginInlineEnd: "clamp(4px, var(--Typography-gap, 0.25em), 0.5rem)"
  }, ((_ownerState$sx = ownerState.sx) == null ? void 0 : _ownerState$sx.alignItems) === "flex-start" && {
    marginTop: "2px"
  });
});
var EndDecorator = styled_default("span", {
  name: "JoyTypography",
  slot: "endDecorator",
  overridesResolver: (props, styles2) => styles2.endDecorator
})(({
  ownerState
}) => {
  var _ownerState$sx2;
  return _extends({
    display: "inline-flex",
    marginInlineStart: "clamp(4px, var(--Typography-gap, 0.25em), 0.5rem)"
  }, ((_ownerState$sx2 = ownerState.sx) == null ? void 0 : _ownerState$sx2.alignItems) === "flex-start" && {
    marginTop: "2px"
  });
});
var TypographyRoot = styled_default("span", {
  name: "JoyTypography",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants$owner;
  return _extends({
    "--Icon-fontSize": "1.25em",
    margin: 0
  }, ownerState.nesting ? {
    display: "inline"
  } : {
    fontFamily: theme.vars.fontFamily.body,
    display: "block"
  }, (ownerState.startDecorator || ownerState.endDecorator) && _extends({
    display: "flex",
    alignItems: "center"
  }, ownerState.nesting && _extends({
    display: "inline-flex"
  }, ownerState.startDecorator && {
    verticalAlign: "bottom"
  })), ownerState.level && ownerState.level !== "inherit" && theme.typography[ownerState.level], ownerState.noWrap && {
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap"
  }, ownerState.gutterBottom && {
    marginBottom: "0.35em"
  }, ownerState.variant && _extends({
    borderRadius: theme.vars.radius.xs,
    paddingInline: "0.25em"
  }, !ownerState.nesting && {
    marginInline: "-0.25em"
  }, (_theme$variants$owner = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants$owner[ownerState.color]));
});
var defaultVariantMapping = {
  h1: "h1",
  h2: "h2",
  h3: "h3",
  h4: "h4",
  h5: "h5",
  h6: "h6",
  display1: "h1",
  display2: "h2",
  body1: "p",
  body2: "p",
  body3: "span",
  body4: "span",
  body5: "span",
  inherit: "p"
};
var Typography = React64.forwardRef(function Typography2(inProps, ref) {
  const _useThemeProps = useThemeProps2({
    props: inProps,
    name: "JoyTypography"
  }), {
    color: colorThemeProp,
    textColor
  } = _useThemeProps, themeProps = _objectWithoutPropertiesLoose(_useThemeProps, _excluded42);
  const nesting = React64.useContext(TypographyContext);
  const props = extendSxProp(_extends({}, themeProps, {
    color: textColor
  }));
  const {
    component: componentProp,
    componentsProps = {},
    gutterBottom = false,
    noWrap = false,
    level: levelProp = "body1",
    levelMapping = {},
    children,
    endDecorator,
    startDecorator,
    variant = colorThemeProp ? "plain" : void 0
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded211);
  const color = colorThemeProp || (variant ? "neutral" : void 0);
  const level = nesting ? inProps.level || "inherit" : levelProp;
  const component = componentProp || (nesting ? "span" : levelMapping[level] || defaultVariantMapping[level] || "span");
  const ownerState = _extends({}, props, {
    level,
    component,
    color,
    gutterBottom,
    noWrap,
    nesting,
    variant
  });
  const classes = useUtilityClasses30(ownerState);
  const rootProps = useSlotProps({
    elementType: TypographyRoot,
    externalSlotProps: componentsProps.root,
    ownerState,
    additionalProps: {
      ref,
      as: component
    },
    externalForwardedProps: other,
    className: classes.root
  });
  const startDecoratorProps = useSlotProps({
    elementType: StartDecorator,
    externalSlotProps: componentsProps.startDecorator,
    ownerState,
    className: classes.startDecorator
  });
  const endDecoratorProps = useSlotProps({
    elementType: EndDecorator,
    externalSlotProps: componentsProps.endDecorator,
    ownerState,
    className: classes.endDecorator
  });
  return (0, import_jsx_runtime63.jsx)(TypographyContext.Provider, {
    value: true,
    children: (0, import_jsx_runtime64.jsxs)(TypographyRoot, _extends({}, rootProps, {
      children: [startDecorator && (0, import_jsx_runtime63.jsx)(StartDecorator, _extends({}, startDecoratorProps, {
        children: startDecorator
      })), children, endDecorator && (0, import_jsx_runtime63.jsx)(EndDecorator, _extends({}, endDecoratorProps, {
        children: endDecorator
      }))]
    }))
  });
});
true ? Typography.propTypes = {
  children: import_prop_types40.default.node,
  color: import_prop_types40.default.oneOfType([import_prop_types40.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types40.default.string]),
  component: import_prop_types40.default.elementType,
  componentsProps: import_prop_types40.default.shape({
    endDecorator: import_prop_types40.default.oneOfType([import_prop_types40.default.func, import_prop_types40.default.object]),
    root: import_prop_types40.default.oneOfType([import_prop_types40.default.func, import_prop_types40.default.object]),
    startDecorator: import_prop_types40.default.oneOfType([import_prop_types40.default.func, import_prop_types40.default.object])
  }),
  endDecorator: import_prop_types40.default.node,
  gutterBottom: import_prop_types40.default.bool,
  level: import_prop_types40.default.oneOfType([import_prop_types40.default.oneOf(["body1", "body2", "body3", "h1", "h2", "h3", "h4", "h5", "h6", "inherit"]), import_prop_types40.default.string]),
  levelMapping: import_prop_types40.default.object,
  noWrap: import_prop_types40.default.bool,
  startDecorator: import_prop_types40.default.node,
  sx: import_prop_types40.default.oneOfType([import_prop_types40.default.arrayOf(import_prop_types40.default.oneOfType([import_prop_types40.default.func, import_prop_types40.default.object, import_prop_types40.default.bool])), import_prop_types40.default.func, import_prop_types40.default.object]),
  textColor: import_prop_types40.default.any,
  variant: import_prop_types40.default.oneOfType([import_prop_types40.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types40.default.string])
} : void 0;
var Typography_default = Typography;

// node_modules/@mui/joy/FormControl/FormControlContext.js
var React65 = __toESM(require_react());
var FormControlContext = React65.createContext(void 0);
var FormControlContext_default = FormControlContext;

// node_modules/@mui/joy/Checkbox/Checkbox.js
var import_jsx_runtime65 = __toESM(require_jsx_runtime());
var import_jsx_runtime66 = __toESM(require_jsx_runtime());
var _excluded43 = ["checked", "uncheckedIcon", "checkedIcon", "label", "component", "componentsProps", "defaultChecked", "disabled", "disableIcon", "overlay", "id", "indeterminate", "indeterminateIcon", "name", "onBlur", "onChange", "onFocus", "onFocusVisible", "readOnly", "required", "value", "color", "variant", "size"];
var useUtilityClasses31 = (ownerState) => {
  const {
    checked,
    disabled,
    disableIcon,
    focusVisible,
    color,
    variant,
    size
  } = ownerState;
  const slots = {
    root: ["root", checked && "checked", disabled && "disabled", focusVisible && "focusVisible", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],
    checkbox: ["checkbox", checked && "checked", disabled && "disabled"],
    action: [
      "action",
      checked && "checked",
      disableIcon && disabled && "disabled",
      focusVisible && "focusVisible"
    ],
    input: ["input"],
    label: ["label"]
  };
  return composeClasses(slots, getCheckboxUtilityClass, {});
};
var CheckboxRoot = styled_default("span", {
  name: "JoyCheckbox",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  ownerState,
  theme
}) => {
  var _theme$vars$palette, _theme$vars$palette2, _theme$vars$palette3;
  return _extends({
    "--Icon-fontSize": "var(--Checkbox-size)"
  }, ownerState.size === "sm" && {
    "--Checkbox-size": "1rem",
    "--Checkbox-gap": "0.375rem",
    fontSize: theme.vars.fontSize.sm
  }, ownerState.size === "md" && {
    "--Checkbox-size": "1.25rem",
    "--Checkbox-gap": "0.5rem",
    fontSize: theme.vars.fontSize.md
  }, ownerState.size === "lg" && {
    "--Checkbox-size": "1.5rem",
    "--Checkbox-gap": "0.625rem",
    fontSize: theme.vars.fontSize.lg
  }, {
    position: ownerState.overlay ? "initial" : "relative",
    display: "inline-flex",
    fontFamily: theme.vars.fontFamily.body,
    lineHeight: "var(--Checkbox-size)",
    color: theme.vars.palette.text.primary,
    [`&.${checkboxClasses_default.disabled}`]: {
      color: (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette.plainDisabledColor
    }
  }, ownerState.disableIcon && {
    color: (_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2[`${ownerState.variant}Color`],
    [`&.${checkboxClasses_default.disabled}`]: {
      color: (_theme$vars$palette3 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette3[`${ownerState.variant}DisabledColor`]
    }
  });
});
var CheckboxCheckbox = styled_default("span", {
  name: "JoyCheckbox",
  slot: "Checkbox",
  overridesResolver: (props, styles2) => styles2.checkbox
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;
  return [_extends({
    boxSizing: "border-box",
    borderRadius: theme.vars.radius.xs,
    width: "var(--Checkbox-size)",
    height: "var(--Checkbox-size)",
    display: "inline-flex",
    justifyContent: "center",
    alignItems: "center",
    flexShrink: 0,
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"
  }, ownerState.disableIcon && {
    display: "contents"
  }), ...!ownerState.disableIcon ? [(_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {
    "&:hover": (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color]
  }, {
    "&:active": (_theme$variants3 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants3[ownerState.color]
  }, {
    [`&.${checkboxClasses_default.disabled}`]: (_theme$variants4 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants4[ownerState.color]
  }] : []];
});
var CheckboxAction = styled_default("span", {
  name: "JoyCheckbox",
  slot: "Action",
  overridesResolver: (props, styles2) => styles2.action
})(({
  theme,
  ownerState
}) => {
  var _theme$variants5, _theme$variants6, _theme$variants7, _theme$variants8;
  return [{
    borderRadius: `var(--Checkbox-action-radius, ${ownerState.overlay ? "var(--internal-action-radius, inherit)" : "inherit"})`,
    position: "absolute",
    top: 0,
    left: 0,
    bottom: 0,
    right: 0,
    zIndex: 1,
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    [theme.focus.selector]: theme.focus.default
  }, ...ownerState.disableIcon ? [(_theme$variants5 = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants5[ownerState.color], {
    "&:hover": (_theme$variants6 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants6[ownerState.color]
  }, {
    "&:active": (_theme$variants7 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants7[ownerState.color]
  }, {
    [`&.${checkboxClasses_default.disabled}`]: (_theme$variants8 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants8[ownerState.color]
  }] : []];
});
var CheckboxInput = styled_default("input", {
  name: "JoyCheckbox",
  slot: "Input",
  overridesResolver: (props, styles2) => styles2.input
})(() => ({
  margin: 0,
  opacity: 0,
  position: "absolute",
  width: "100%",
  height: "100%",
  cursor: "pointer"
}));
var CheckboxLabel = styled_default("label", {
  name: "JoyCheckbox",
  slot: "Label",
  overridesResolver: (props, styles2) => styles2.label
})(({
  ownerState
}) => _extends({
  flex: 1,
  minWidth: 0
}, ownerState.disableIcon ? {
  zIndex: 1,
  pointerEvents: "none"
} : {
  marginInlineStart: "var(--Checkbox-gap)"
}));
var defaultCheckedIcon = (0, import_jsx_runtime65.jsx)(Check_default, {});
var defaultIndeterminateIcon = (0, import_jsx_runtime65.jsx)(HorizontalRule_default, {});
var Checkbox = React66.forwardRef(function Checkbox2(inProps, ref) {
  var _ref, _inProps$disabled, _ref2, _inProps$size, _ref3, _inProps$color;
  const props = useThemeProps2({
    props: inProps,
    name: "JoyCheckbox"
  });
  const {
    checked: checkedProp,
    uncheckedIcon,
    checkedIcon = defaultCheckedIcon,
    label,
    component,
    componentsProps = {},
    defaultChecked,
    disabled: disabledExternalProp,
    disableIcon = false,
    overlay,
    id: idOverride,
    indeterminate = false,
    indeterminateIcon = defaultIndeterminateIcon,
    name,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible,
    readOnly,
    required,
    value,
    color: colorProp,
    variant,
    size: sizeProp = "md"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded43);
  const formControl = React66.useContext(FormControlContext_default);
  const disabledProp = (_ref = (_inProps$disabled = inProps.disabled) != null ? _inProps$disabled : formControl == null ? void 0 : formControl.disabled) != null ? _ref : disabledExternalProp;
  const size = (_ref2 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref2 : sizeProp;
  const color = formControl != null && formControl.error ? "danger" : (_ref3 = (_inProps$color = inProps.color) != null ? _inProps$color : formControl == null ? void 0 : formControl.color) != null ? _ref3 : colorProp;
  if (true) {
    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;
    React66.useEffect(() => {
      if (registerEffect) {
        return registerEffect();
      }
      return void 0;
    }, [registerEffect]);
  }
  const id = useId(idOverride != null ? idOverride : formControl == null ? void 0 : formControl.htmlFor);
  const useCheckboxProps = {
    checked: checkedProp,
    defaultChecked,
    disabled: disabledProp,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible
  };
  const {
    getInputProps,
    checked,
    disabled,
    focusVisible
  } = useSwitch(useCheckboxProps);
  const isCheckboxActive = checked || indeterminate;
  const activeColor = color || "primary";
  const inactiveColor = color || "neutral";
  const activeVariant = variant || "solid";
  const inactiveVariant = variant || "outlined";
  const ownerState = _extends({}, props, {
    checked,
    disabled,
    disableIcon,
    overlay,
    focusVisible,
    color: isCheckboxActive ? activeColor : inactiveColor,
    variant: isCheckboxActive ? activeVariant : inactiveVariant,
    size
  });
  const classes = useUtilityClasses31(ownerState);
  const rootProps = useSlotProps({
    elementType: CheckboxRoot,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    ownerState,
    additionalProps: {
      ref,
      as: component
    },
    className: classes.root
  });
  const checkboxProps = useSlotProps({
    elementType: CheckboxCheckbox,
    externalSlotProps: componentsProps.checkbox,
    ownerState,
    className: classes.checkbox
  });
  const actionProps = useSlotProps({
    elementType: CheckboxAction,
    externalSlotProps: componentsProps.action,
    ownerState,
    className: classes.action
  });
  const inputProps = useSlotProps({
    elementType: CheckboxInput,
    getSlotProps: getInputProps,
    externalSlotProps: componentsProps.input,
    ownerState,
    additionalProps: _extends({
      id,
      name,
      value,
      readOnly,
      required,
      "aria-describedby": formControl == null ? void 0 : formControl["aria-describedby"]
    }, indeterminate && {
      "aria-checked": "mixed"
    }),
    className: classes.input
  });
  const labelProps = useSlotProps({
    elementType: CheckboxLabel,
    externalSlotProps: componentsProps.label,
    ownerState,
    additionalProps: {
      htmlFor: id
    },
    className: classes.label
  });
  return (0, import_jsx_runtime66.jsxs)(CheckboxRoot, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime66.jsxs)(CheckboxCheckbox, _extends({}, checkboxProps, {
      children: [(0, import_jsx_runtime65.jsx)(CheckboxAction, _extends({}, actionProps, {
        children: (0, import_jsx_runtime65.jsx)(CheckboxInput, _extends({}, inputProps))
      })), indeterminate && !checked && !disableIcon && indeterminateIcon, checked && !disableIcon && checkedIcon, !checked && !disableIcon && !indeterminate && uncheckedIcon]
    })), label && (0, import_jsx_runtime65.jsx)(TypographyContext.Provider, {
      value: true,
      children: (0, import_jsx_runtime65.jsx)(CheckboxLabel, _extends({}, labelProps, {
        children: label
      }))
    })]
  }));
});
true ? Checkbox.propTypes = {
  checked: import_prop_types41.default.bool,
  checkedIcon: import_prop_types41.default.node,
  children: import_prop_types41.default.node,
  className: import_prop_types41.default.string,
  color: import_prop_types41.default.oneOfType([import_prop_types41.default.oneOf(["danger", "info", "primary", "success", "warning"]), import_prop_types41.default.string]),
  component: import_prop_types41.default.elementType,
  componentsProps: import_prop_types41.default.shape({
    action: import_prop_types41.default.oneOfType([import_prop_types41.default.func, import_prop_types41.default.object]),
    checkbox: import_prop_types41.default.oneOfType([import_prop_types41.default.func, import_prop_types41.default.object]),
    input: import_prop_types41.default.oneOfType([import_prop_types41.default.func, import_prop_types41.default.object]),
    label: import_prop_types41.default.oneOfType([import_prop_types41.default.func, import_prop_types41.default.object]),
    root: import_prop_types41.default.oneOfType([import_prop_types41.default.func, import_prop_types41.default.object])
  }),
  defaultChecked: import_prop_types41.default.bool,
  disabled: import_prop_types41.default.bool,
  disableIcon: import_prop_types41.default.bool,
  id: import_prop_types41.default.string,
  indeterminate: import_prop_types41.default.bool,
  indeterminateIcon: import_prop_types41.default.node,
  label: import_prop_types41.default.node,
  name: import_prop_types41.default.string,
  onBlur: import_prop_types41.default.func,
  onChange: import_prop_types41.default.func,
  onFocus: import_prop_types41.default.func,
  onFocusVisible: import_prop_types41.default.func,
  overlay: import_prop_types41.default.bool,
  readOnly: import_prop_types41.default.bool,
  required: import_prop_types41.default.bool,
  size: import_prop_types41.default.oneOfType([import_prop_types41.default.oneOf(["sm", "md", "lg"]), import_prop_types41.default.string]),
  sx: import_prop_types41.default.oneOfType([import_prop_types41.default.arrayOf(import_prop_types41.default.oneOfType([import_prop_types41.default.func, import_prop_types41.default.object, import_prop_types41.default.bool])), import_prop_types41.default.func, import_prop_types41.default.object]),
  uncheckedIcon: import_prop_types41.default.node,
  value: import_prop_types41.default.oneOfType([import_prop_types41.default.arrayOf(import_prop_types41.default.string), import_prop_types41.default.number, import_prop_types41.default.string]),
  variant: import_prop_types41.default.oneOfType([import_prop_types41.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types41.default.string])
} : void 0;
var Checkbox_default = Checkbox;

// node_modules/@mui/joy/Chip/Chip.js
init_objectWithoutPropertiesLoose();
init_extends();
var React68 = __toESM(require_react());
init_clsx_m();
var import_prop_types42 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Chip/chipClasses.js
function getChipUtilityClass(slot) {
  return generateUtilityClass2("JoyChip", slot);
}
var chipClasses = generateUtilityClasses2("JoyChip", ["root", "clickable", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "disabled", "endDecorator", "focusVisible", "label", "labelSm", "labelMd", "labelLg", "sizeSm", "sizeMd", "sizeLg", "startDecorator", "variantSolid", "variantSoft", "variantOutlined"]);
var chipClasses_default = chipClasses;

// node_modules/@mui/joy/Chip/ChipContext.js
var React67 = __toESM(require_react());
var ChipColorContext = React67.createContext({
  disabled: void 0,
  variant: void 0,
  color: void 0
});
var ChipContext_default = ChipColorContext;

// node_modules/@mui/joy/Chip/Chip.js
var import_jsx_runtime67 = __toESM(require_jsx_runtime());
var import_jsx_runtime68 = __toESM(require_jsx_runtime());
var _excluded44 = ["children", "className", "componentsProps", "color", "component", "onClick", "disabled", "size", "variant", "startDecorator", "endDecorator"];
var useUtilityClasses32 = (ownerState) => {
  const {
    disabled,
    size,
    color,
    clickable,
    variant,
    focusVisible
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", color && `color${capitalize(color)}`, size && `size${capitalize(size)}`, variant && `variant${capitalize(variant)}`, clickable && "clickable"],
    action: ["action", disabled && "disabled", focusVisible && "focusVisible"],
    label: ["label", size && `label${capitalize(size)}`],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  return composeClasses(slots, getChipUtilityClass, {});
};
var ChipRoot = styled_default("div", {
  name: "JoyChip",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette, _theme$variants, _theme$variants2, _theme$vars$palette2;
  return [_extends({
    "--Chip-radius": "1.5rem",
    "--Chip-decorator-childOffset": "min(calc(var(--Chip-paddingInline) - (var(--Chip-minHeight) - 2 * var(--variant-borderWidth) - var(--Chip-decorator-childHeight)) / 2), var(--Chip-paddingInline))",
    "--internal-paddingBlock": "max((var(--Chip-minHeight) - 2 * var(--variant-borderWidth) - var(--Chip-decorator-childHeight)) / 2, 0px)",
    "--Chip-decorator-childRadius": "max((var(--Chip-radius) - var(--variant-borderWidth)) - var(--internal-paddingBlock), min(var(--internal-paddingBlock) / 2, (var(--Chip-radius) - var(--variant-borderWidth)) / 2))",
    "--Chip-delete-radius": "var(--Chip-decorator-childRadius)",
    "--Chip-delete-size": "var(--Chip-decorator-childHeight)",
    "--Avatar-radius": "var(--Chip-decorator-childRadius)",
    "--Avatar-size": "var(--Chip-decorator-childHeight)",
    "--Icon-margin": "initial",
    "--internal-action-radius": "var(--Chip-radius)"
  }, ownerState.size === "sm" && {
    "--Chip-gap": "0.25rem",
    "--Chip-paddingInline": "0.5rem",
    "--Chip-decorator-childHeight": "calc(min(1.5rem, var(--Chip-minHeight)) - 2 * var(--variant-borderWidth))",
    "--Icon-fontSize": "0.875rem",
    "--Chip-minHeight": "1.5rem",
    fontSize: theme.vars.fontSize.xs
  }, ownerState.size === "md" && {
    "--Chip-gap": "0.375rem",
    "--Chip-paddingInline": "0.75rem",
    "--Chip-decorator-childHeight": "min(1.5rem, var(--Chip-minHeight))",
    "--Icon-fontSize": "1.125rem",
    "--Chip-minHeight": "2rem",
    fontSize: theme.vars.fontSize.sm
  }, ownerState.size === "lg" && {
    "--Chip-gap": "0.5rem",
    "--Chip-paddingInline": "1rem",
    "--Chip-decorator-childHeight": "min(2rem, var(--Chip-minHeight))",
    "--Icon-fontSize": "1.25rem",
    "--Chip-minHeight": "2.5rem",
    fontSize: theme.vars.fontSize.md
  }, {
    minHeight: "var(--Chip-minHeight)",
    paddingInline: "var(--Chip-paddingInline)",
    borderRadius: "var(--Chip-radius)",
    position: "relative",
    fontWeight: theme.vars.fontWeight.md,
    fontFamily: theme.vars.fontFamily.body,
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    whiteSpace: "nowrap",
    transition: "background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    textDecoration: "none",
    verticalAlign: "middle",
    boxSizing: "border-box",
    [`&.${chipClasses_default.disabled}`]: {
      color: (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette[`${ownerState.variant}DisabledColor`]
    }
  }), ...!ownerState.clickable ? [(_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {
    [`&.${chipClasses_default.disabled}`]: (_theme$variants2 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants2[ownerState.color]
  }] : [{
    "--variant-borderWidth": "0px",
    color: (_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2[`${ownerState.variant}Color`]
  }]];
});
var ChipLabel = styled_default("span", {
  name: "JoyChip",
  slot: "Label",
  overridesResolver: (props, styles2) => styles2.label
})(({
  ownerState
}) => _extends({
  display: "inherit",
  alignItems: "center",
  order: 1,
  flexGrow: 1
}, ownerState.clickable && {
  zIndex: 1,
  pointerEvents: "none"
}));
var ChipAction = styled_default("button", {
  name: "JoyChip",
  slot: "Action",
  overridesResolver: (props, styles2) => styles2.action
})(({
  theme,
  ownerState
}) => {
  var _theme$variants3, _theme$variants4, _theme$variants5, _theme$variants6;
  return [{
    position: "absolute",
    zIndex: 0,
    top: 0,
    left: 0,
    bottom: 0,
    right: 0,
    border: "none",
    padding: "initial",
    margin: "initial",
    backgroundColor: "initial",
    textDecoration: "none",
    borderRadius: "inherit",
    transition: "background-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    [theme.focus.selector]: theme.focus.default
  }, (_theme$variants3 = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants3[ownerState.color], {
    "&:hover": (_theme$variants4 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants4[ownerState.color]
  }, {
    "&:active": (_theme$variants5 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants5[ownerState.color]
  }, {
    [`&.${chipClasses_default.disabled}`]: (_theme$variants6 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants6[ownerState.color]
  }];
});
var ChipStartDecorator = styled_default("span", {
  name: "JoyChip",
  slot: "StartDecorator",
  overridesResolver: (props, styles2) => styles2.startDecorator
})({
  "--Avatar-marginInlineStart": "calc(var(--Chip-decorator-childOffset) * -1)",
  "--Chip-delete-margin": "0 0 0 calc(var(--Chip-decorator-childOffset) * -1)",
  "--Icon-margin": "0 0 0 calc(var(--Chip-paddingInline) / -4)",
  display: "inherit",
  marginInlineEnd: "var(--Chip-gap)",
  order: 0,
  zIndex: 1,
  pointerEvents: "none"
});
var ChipEndDecorator = styled_default("span", {
  name: "JoyChip",
  slot: "EndDecorator",
  overridesResolver: (props, styles2) => styles2.endDecorator
})({
  "--Chip-delete-margin": "0 calc(var(--Chip-decorator-childOffset) * -1) 0 0",
  "--Icon-margin": "0 calc(var(--Chip-paddingInline) / -4) 0 0",
  display: "inherit",
  marginInlineStart: "var(--Chip-gap)",
  order: 2,
  zIndex: 1,
  pointerEvents: "none"
});
var Chip = React68.forwardRef(function Chip2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyChip"
  });
  const {
    children,
    className,
    componentsProps = {},
    color = "primary",
    component,
    onClick,
    disabled = false,
    size = "md",
    variant = "solid",
    startDecorator,
    endDecorator
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded44);
  const clickable = !!onClick || !!componentsProps.action;
  const ownerState = _extends({}, props, {
    component,
    disabled,
    size,
    color,
    variant,
    clickable,
    focusVisible: false
  });
  const resolvedActionProps = typeof componentsProps.action === "function" ? componentsProps.action(ownerState) : componentsProps.action;
  const actionRef = React68.useRef(null);
  const {
    focusVisible,
    getRootProps
  } = useButton(_extends({}, resolvedActionProps, {
    disabled,
    ref: actionRef
  }));
  ownerState.focusVisible = focusVisible;
  const classes = useUtilityClasses32(ownerState);
  const labelProps = useSlotProps({
    elementType: ChipLabel,
    externalSlotProps: componentsProps.label,
    ownerState,
    className: classes.label
  });
  const id = useId(labelProps.id);
  const actionProps = useSlotProps({
    elementType: ChipAction,
    getSlotProps: getRootProps,
    externalSlotProps: componentsProps.action,
    additionalProps: {
      "aria-labelledby": id,
      as: resolvedActionProps == null ? void 0 : resolvedActionProps.component,
      onClick
    },
    ownerState,
    className: classes.action
  });
  const startDecoratorProps = useSlotProps({
    elementType: ChipStartDecorator,
    externalSlotProps: componentsProps.startDecorator,
    ownerState,
    className: classes.startDecorator
  });
  const endDecoratorProps = useSlotProps({
    elementType: ChipEndDecorator,
    externalSlotProps: componentsProps.endDecorator,
    ownerState,
    className: classes.endDecorator
  });
  return (0, import_jsx_runtime67.jsx)(ChipContext_default.Provider, {
    value: {
      disabled,
      variant,
      color
    },
    children: (0, import_jsx_runtime68.jsxs)(ChipRoot, _extends({
      as: component,
      className: clsx_m_default(classes.root, className),
      ref,
      ownerState
    }, other, {
      children: [clickable && (0, import_jsx_runtime67.jsx)(ChipAction, _extends({}, actionProps)), (0, import_jsx_runtime67.jsx)(ChipLabel, _extends({}, labelProps, {
        id,
        children
      })), startDecorator && (0, import_jsx_runtime67.jsx)(ChipStartDecorator, _extends({}, startDecoratorProps, {
        children: startDecorator
      })), endDecorator && (0, import_jsx_runtime67.jsx)(ChipEndDecorator, _extends({}, endDecoratorProps, {
        children: endDecorator
      }))]
    }))
  });
});
true ? Chip.propTypes = {
  children: import_prop_types42.default.node,
  className: import_prop_types42.default.string,
  color: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types42.default.string]),
  component: import_prop_types42.default.elementType,
  componentsProps: import_prop_types42.default.shape({
    action: import_prop_types42.default.oneOfType([import_prop_types42.default.func, import_prop_types42.default.object]),
    endDecorator: import_prop_types42.default.oneOfType([import_prop_types42.default.func, import_prop_types42.default.object]),
    label: import_prop_types42.default.oneOfType([import_prop_types42.default.func, import_prop_types42.default.object]),
    root: import_prop_types42.default.oneOfType([import_prop_types42.default.func, import_prop_types42.default.object]),
    startDecorator: import_prop_types42.default.oneOfType([import_prop_types42.default.func, import_prop_types42.default.object])
  }),
  disabled: import_prop_types42.default.bool,
  endDecorator: import_prop_types42.default.node,
  onClick: import_prop_types42.default.func,
  size: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(["lg", "md", "sm"]), import_prop_types42.default.string]),
  startDecorator: import_prop_types42.default.node,
  sx: import_prop_types42.default.oneOfType([import_prop_types42.default.arrayOf(import_prop_types42.default.oneOfType([import_prop_types42.default.func, import_prop_types42.default.object, import_prop_types42.default.bool])), import_prop_types42.default.func, import_prop_types42.default.object]),
  variant: import_prop_types42.default.oneOfType([import_prop_types42.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types42.default.string])
} : void 0;
var Chip_default = Chip;

// node_modules/@mui/joy/ChipDelete/ChipDelete.js
init_extends();
init_objectWithoutPropertiesLoose();
var React70 = __toESM(require_react());
var import_prop_types43 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/internal/svg-icons/Close.js
var React69 = __toESM(require_react());
var import_jsx_runtime69 = __toESM(require_jsx_runtime());
var Close_default = createSvgIcon((0, import_jsx_runtime69.jsx)("path", {
  d: "M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"
}), "Close");

// node_modules/@mui/joy/ChipDelete/chipDeleteClasses.js
function getChipDeleteUtilityClass(slot) {
  return generateUtilityClass2("JoyChipDelete", slot);
}
var chipDeleteClasses = generateUtilityClasses2("JoyChipDelete", ["root", "disabled", "focusVisible", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantSolid", "variantSoft", "variantOutlined"]);
var chipDeleteClasses_default = chipDeleteClasses;

// node_modules/@mui/joy/ChipDelete/ChipDelete.js
var import_jsx_runtime70 = __toESM(require_jsx_runtime());
var _Close;
var _excluded45 = ["component", "children", "variant", "color", "disabled"];
var useUtilityClasses33 = (ownerState) => {
  const {
    focusVisible,
    variant,
    color,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]
  };
  return composeClasses(slots, getChipDeleteUtilityClass, {});
};
var ChipDeleteRoot = styled_default("button", {
  name: "JoyChipDelete",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;
  return [{
    "--Icon-margin": "initial",
    pointerEvents: "visible",
    width: "var(--Chip-delete-size, 2rem)",
    height: "var(--Chip-delete-size, 2rem)",
    borderRadius: "var(--Chip-delete-radius, 50%)",
    margin: "var(--Chip-delete-margin)",
    display: "inline-flex",
    justifyContent: "center",
    alignItems: "center",
    zIndex: 1,
    border: "none",
    background: "none",
    padding: "0px",
    [theme.focus.selector]: theme.focus.default
  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {
    "&:hover": (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color]
  }, {
    "&:active": (_theme$variants3 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants3[ownerState.color]
  }, {
    [`&.${chipDeleteClasses_default.disabled}`]: (_theme$variants4 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants4[ownerState.color]
  }];
});
var chipVariantMapping = {
  plain: "outlined",
  outlined: "soft",
  soft: "solid",
  solid: "solid"
};
var ChipDelete = React70.forwardRef(function ChipDelete2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyChipDelete"
  });
  const {
    component,
    children,
    variant: variantProp,
    color: colorProp,
    disabled: disabledProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded45);
  const chipContext = React70.useContext(ChipContext_default);
  const color = colorProp || chipContext.color || "primary";
  const variant = variantProp || chipVariantMapping[chipContext.variant] || "solid";
  const disabled = disabledProp != null ? disabledProp : chipContext.disabled;
  const buttonRef = React70.useRef(null);
  const handleRef = useForkRef(buttonRef, ref);
  const {
    focusVisible,
    getRootProps
  } = useButton(_extends({}, props, {
    disabled,
    ref: handleRef
  }));
  const ownerState = _extends({}, props, {
    disabled,
    variant,
    color,
    focusVisible
  });
  const classes = useUtilityClasses33(ownerState);
  const rootProps = useSlotProps({
    elementType: ChipDeleteRoot,
    getSlotProps: getRootProps,
    externalSlotProps: {},
    externalForwardedProps: other,
    ownerState,
    additionalProps: {
      as: component
    },
    className: classes.root
  });
  return (0, import_jsx_runtime70.jsx)(ChipDeleteRoot, _extends({}, rootProps, {
    children: children != null ? children : _Close || (_Close = (0, import_jsx_runtime70.jsx)(Close_default, {}))
  }));
});
true ? ChipDelete.propTypes = {
  children: import_prop_types43.default.node,
  color: import_prop_types43.default.oneOfType([import_prop_types43.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types43.default.string]),
  component: import_prop_types43.default.elementType,
  disabled: import_prop_types43.default.bool,
  sx: import_prop_types43.default.oneOfType([import_prop_types43.default.arrayOf(import_prop_types43.default.oneOfType([import_prop_types43.default.func, import_prop_types43.default.object, import_prop_types43.default.bool])), import_prop_types43.default.func, import_prop_types43.default.object]),
  variant: import_prop_types43.default.oneOfType([import_prop_types43.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types43.default.string])
} : void 0;
var ChipDelete_default = ChipDelete;

// node_modules/@mui/joy/Container/Container.js
init_esm2();
var import_prop_types44 = __toESM(require_prop_types());
var Container = createContainer({
  componentName: "JoyContainer",
  createStyledComponent: styled_default("div", {
    name: "JoyContainer",
    slot: "Root",
    overridesResolver: (props, styles2) => styles2.root
  }),
  useThemeProps: (inProps) => useThemeProps2({
    props: inProps,
    name: "JoyContainer"
  })
});
true ? Container.propTypes = {
  children: import_prop_types44.default.node,
  component: import_prop_types44.default.elementType,
  disableGutters: import_prop_types44.default.bool,
  fixed: import_prop_types44.default.bool,
  maxWidth: import_prop_types44.default.oneOfType([import_prop_types44.default.oneOf(["xs", "sm", "md", "lg", "xl", false]), import_prop_types44.default.string]),
  sx: import_prop_types44.default.oneOfType([import_prop_types44.default.arrayOf(import_prop_types44.default.oneOfType([import_prop_types44.default.func, import_prop_types44.default.object, import_prop_types44.default.bool])), import_prop_types44.default.func, import_prop_types44.default.object])
} : void 0;
var Container_default = Container;

// node_modules/@mui/joy/Container/containerClasses.js
function getContainerUtilityClass(slot) {
  return generateUtilityClass2("JoyContainer", slot);
}
var containerClasses = generateUtilityClasses2("JoyContainer", ["root", "disableGutters", "fixed", "maxWidthXs", "maxWidthSm", "maxWidthMd", "maxWidthLg", "maxWidthXl"]);
var containerClasses_default = containerClasses;

// node_modules/@mui/joy/Divider/Divider.js
init_objectWithoutPropertiesLoose();
init_extends();
var React71 = __toESM(require_react());
var import_prop_types45 = __toESM(require_prop_types());
init_clsx_m();
init_esm();

// node_modules/@mui/joy/Divider/dividerClasses.js
function getDividerUtilityClass(slot) {
  return generateUtilityClass2("JoyDivider", slot);
}
var dividerClasses = generateUtilityClasses2("JoyDivider", ["root", "vertical", "insetContext", "insetNone"]);
var dividerClasses_default = dividerClasses;

// node_modules/@mui/joy/Divider/Divider.js
var import_jsx_runtime71 = __toESM(require_jsx_runtime());
var _excluded46 = ["className", "children", "component", "inset", "orientation", "role"];
var useUtilityClasses34 = (ownerState) => {
  const slots = {
    root: ["root", ownerState.orientation === "vertical" && "vertical", ownerState.inset && `inset${capitalize(ownerState.inset)}`]
  };
  return composeClasses(slots, getDividerUtilityClass, {});
};
var DividerRoot = styled_default("hr", {
  name: "JoyDivider",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => _extends({
  "--Divider-thickness": "1px",
  "--Divider-lineColor": theme.vars.palette.divider
}, ownerState.inset === "none" && {
  "--_Divider-inset": "0px"
}, ownerState.inset === "context" && {
  "--_Divider-inset": "var(--Divider-inset, 0px)"
}, {
  margin: "initial",
  marginInline: ownerState.orientation === "vertical" ? "initial" : "var(--_Divider-inset)",
  marginBlock: ownerState.orientation === "vertical" ? "var(--_Divider-inset)" : "initial",
  position: "relative",
  alignSelf: "stretch",
  flexShrink: 0
}, ownerState.children ? {
  "--Divider-gap": theme.spacing(1),
  "--Divider-childPosition": "50%",
  display: "flex",
  flexDirection: ownerState.orientation === "vertical" ? "column" : "row",
  alignItems: "center",
  whiteSpace: "nowrap",
  textAlign: "center",
  border: 0,
  fontFamily: theme.vars.fontFamily.body,
  fontSize: theme.vars.fontSize.sm,
  "&::before, &::after": {
    position: "relative",
    inlineSize: ownerState.orientation === "vertical" ? "var(--Divider-thickness)" : "initial",
    blockSize: ownerState.orientation === "vertical" ? "initial" : "var(--Divider-thickness)",
    backgroundColor: "var(--Divider-lineColor)",
    content: '""'
  },
  "&::before": {
    marginInlineEnd: ownerState.orientation === "vertical" ? "initial" : "min(var(--Divider-childPosition) * 999, var(--Divider-gap))",
    marginBlockEnd: ownerState.orientation === "vertical" ? "min(var(--Divider-childPosition) * 999, var(--Divider-gap))" : "initial",
    flexBasis: "var(--Divider-childPosition)"
  },
  "&::after": {
    marginInlineStart: ownerState.orientation === "vertical" ? "initial" : "min((100% - var(--Divider-childPosition)) * 999, var(--Divider-gap))",
    marginBlockStart: ownerState.orientation === "vertical" ? "min((100% - var(--Divider-childPosition)) * 999, var(--Divider-gap))" : "initial",
    flexBasis: "calc(100% - var(--Divider-childPosition))"
  }
} : {
  border: "none",
  listStyle: "none",
  backgroundColor: "var(--Divider-lineColor)",
  inlineSize: ownerState.orientation === "vertical" ? "var(--Divider-thickness)" : "initial",
  blockSize: ownerState.orientation === "vertical" ? "initial" : "var(--Divider-thickness)"
}));
var Divider = React71.forwardRef(function Divider2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyDivider"
  });
  const {
    className,
    children,
    component = children !== void 0 && children !== null ? "div" : "hr",
    inset,
    orientation = "horizontal",
    role = component !== "hr" ? "separator" : void 0
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded46);
  const ownerState = _extends({}, props, {
    inset,
    role,
    orientation,
    component
  });
  const classes = useUtilityClasses34(ownerState);
  return (0, import_jsx_runtime71.jsx)(DividerRoot, _extends({
    ref,
    as: component,
    className: clsx_m_default(classes.root, className),
    ownerState,
    role
  }, role === "separator" && orientation === "vertical" && {
    "aria-orientation": "vertical"
  }, other, {
    children
  }));
});
true ? Divider.propTypes = {
  children: import_prop_types45.default.node,
  classes: import_prop_types45.default.object,
  className: import_prop_types45.default.string,
  component: import_prop_types45.default.elementType,
  inset: import_prop_types45.default.oneOfType([import_prop_types45.default.oneOf(["none", "context"]), import_prop_types45.default.string]),
  orientation: import_prop_types45.default.oneOf(["horizontal", "vertical"]),
  role: import_prop_types45.default.string,
  sx: import_prop_types45.default.oneOfType([import_prop_types45.default.arrayOf(import_prop_types45.default.oneOfType([import_prop_types45.default.func, import_prop_types45.default.object, import_prop_types45.default.bool])), import_prop_types45.default.func, import_prop_types45.default.object])
} : void 0;
Divider.muiName = "Divider";
var Divider_default = Divider;

// node_modules/@mui/joy/FormHelperText/FormHelperText.js
init_extends();
init_objectWithoutPropertiesLoose();
var React72 = __toESM(require_react());
var import_prop_types46 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/FormHelperText/formHelperTextClasses.js
function getFormHelperTextUtilityClass(slot) {
  return generateUtilityClass2("JoyFormHelperText", slot);
}
var formHelperTextClasses = generateUtilityClasses2("JoyFormHelperText", ["root"]);
var formHelperTextClasses_default = formHelperTextClasses;

// node_modules/@mui/joy/FormLabel/formLabelClasses.js
function getFormLabelUtilityClass(slot) {
  return generateUtilityClass2("JoyFormLabel", slot);
}
var formLabelClasses = generateUtilityClasses2("JoyFormLabel", ["root", "asterisk"]);
var formLabelClasses_default = formLabelClasses;

// node_modules/@mui/joy/FormHelperText/FormHelperText.js
var import_jsx_runtime72 = __toESM(require_jsx_runtime());
var _excluded47 = ["children", "component"];
var useUtilityClasses35 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getFormHelperTextUtilityClass, {});
};
var FormHelperTextRoot = styled_default("p", {
  name: "JoyFormHelperText",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme
}) => ({
  display: "flex",
  alignItems: "center",
  fontFamily: theme.vars.fontFamily.body,
  fontSize: `var(--FormHelperText-fontSize, ${theme.vars.fontSize.sm})`,
  lineHeight: theme.vars.lineHeight.sm,
  color: `var(--FormHelperText-color, ${theme.vars.palette.text.secondary})`,
  margin: "var(--FormHelperText-margin, 0px)",
  [`.${formLabelClasses_default.root} + &`]: {
    "--FormHelperText-margin": "0px"
  }
}));
var FormHelperText = React72.forwardRef(function FormHelperText2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyFormHelperText"
  });
  const {
    children,
    component
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded47);
  const rootRef = React72.useRef(null);
  const handleRef = useForkRef(rootRef, ref);
  const formControl = React72.useContext(FormControlContext_default);
  const setHelperText = formControl == null ? void 0 : formControl.setHelperText;
  React72.useEffect(() => {
    setHelperText == null ? void 0 : setHelperText(rootRef.current);
    return () => {
      setHelperText == null ? void 0 : setHelperText(null);
    };
  }, [setHelperText]);
  const ownerState = _extends({}, props);
  const classes = useUtilityClasses35();
  const rootProps = useSlotProps({
    elementType: FormHelperTextRoot,
    externalSlotProps: {},
    externalForwardedProps: other,
    ownerState,
    additionalProps: {
      ref: handleRef,
      as: component,
      id: formControl == null ? void 0 : formControl["aria-describedby"]
    },
    className: classes.root
  });
  return (0, import_jsx_runtime72.jsx)(FormHelperTextRoot, _extends({}, rootProps, {
    children
  }));
});
true ? FormHelperText.propTypes = {
  children: import_prop_types46.default.node,
  classes: import_prop_types46.default.object,
  component: import_prop_types46.default.elementType,
  sx: import_prop_types46.default.oneOfType([import_prop_types46.default.arrayOf(import_prop_types46.default.oneOfType([import_prop_types46.default.func, import_prop_types46.default.object, import_prop_types46.default.bool])), import_prop_types46.default.func, import_prop_types46.default.object])
} : void 0;
var FormHelperText_default = FormHelperText;

// node_modules/@mui/joy/FormLabel/FormLabel.js
init_extends();
init_objectWithoutPropertiesLoose();
var React73 = __toESM(require_react());
var import_prop_types47 = __toESM(require_prop_types());
var import_jsx_runtime73 = __toESM(require_jsx_runtime());
var _excluded48 = ["children", "component", "componentsProps"];
var useUtilityClasses36 = () => {
  const slots = {
    root: ["root"],
    asterisk: ["asterisk"]
  };
  return composeClasses(slots, getFormLabelUtilityClass, {});
};
var FormLabelRoot = styled_default("label", {
  name: "JoyFormLabel",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme
}) => ({
  display: "flex",
  alignItems: "center",
  flexWrap: "wrap",
  userSelect: "none",
  fontFamily: theme.vars.fontFamily.body,
  fontSize: `var(--FormLabel-fontSize, ${theme.vars.fontSize.sm})`,
  fontWeight: theme.vars.fontWeight.md,
  lineHeight: theme.vars.lineHeight.md,
  color: `var(--FormLabel-color, ${theme.vars.palette.text.primary})`,
  margin: "var(--FormLabel-margin, 0px)"
}));
var AsteriskComponent = styled_default("span", {
  name: "JoyFormLabel",
  slot: "Asterisk",
  overridesResolver: (props, styles2) => styles2.asterisk
})({
  color: "var(--FormLabel-asterisk-color)"
});
var FormLabel = React73.forwardRef(function FormLabel2(inProps, ref) {
  var _ref, _inProps$required;
  const props = useThemeProps2({
    props: inProps,
    name: "JoyFormLabel"
  });
  const {
    children,
    component = "label",
    componentsProps = {}
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded48);
  const formControl = React73.useContext(FormControlContext_default);
  const required = (_ref = (_inProps$required = inProps.required) != null ? _inProps$required : formControl == null ? void 0 : formControl.required) != null ? _ref : false;
  const ownerState = _extends({}, props, {
    required
  });
  const classes = useUtilityClasses36();
  const rootProps = useSlotProps({
    elementType: FormLabelRoot,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    ownerState,
    additionalProps: {
      ref,
      as: component,
      htmlFor: formControl == null ? void 0 : formControl.htmlFor,
      id: formControl == null ? void 0 : formControl.labelId
    },
    className: classes.root
  });
  const asteriskProps = useSlotProps({
    elementType: AsteriskComponent,
    externalSlotProps: componentsProps.asterisk,
    ownerState,
    additionalProps: {
      "aria-hidden": true
    },
    className: classes.asterisk
  });
  return (0, import_jsx_runtime73.jsxs)(FormLabelRoot, _extends({}, rootProps, {
    children: [children, required && (0, import_jsx_runtime73.jsxs)(AsteriskComponent, _extends({}, asteriskProps, {
      children: ["\u2009", "*"]
    }))]
  }));
});
true ? FormLabel.propTypes = {
  children: import_prop_types47.default.node,
  component: import_prop_types47.default.elementType,
  componentsProps: import_prop_types47.default.shape({
    asterisk: import_prop_types47.default.oneOfType([import_prop_types47.default.func, import_prop_types47.default.object]),
    root: import_prop_types47.default.oneOfType([import_prop_types47.default.func, import_prop_types47.default.object])
  }),
  required: import_prop_types47.default.bool,
  sx: import_prop_types47.default.oneOfType([import_prop_types47.default.arrayOf(import_prop_types47.default.oneOfType([import_prop_types47.default.func, import_prop_types47.default.object, import_prop_types47.default.bool])), import_prop_types47.default.func, import_prop_types47.default.object])
} : void 0;
var FormLabel_default = FormLabel;

// node_modules/@mui/joy/Grid/Grid.js
var import_prop_types48 = __toESM(require_prop_types());
init_Unstable_Grid();
var Grid = createGrid({
  createStyledComponent: styled_default("div", {
    name: "JoyGrid",
    overridesResolver: (props, styles2) => styles2.root
  }),
  componentName: "JoyGrid",
  useThemeProps: (inProps) => useThemeProps2({
    props: inProps,
    name: "JoyGrid"
  })
});
true ? Grid.propTypes = {
  children: import_prop_types48.default.node,
  sx: import_prop_types48.default.oneOfType([import_prop_types48.default.arrayOf(import_prop_types48.default.oneOfType([import_prop_types48.default.func, import_prop_types48.default.object, import_prop_types48.default.bool])), import_prop_types48.default.func, import_prop_types48.default.object])
} : void 0;
var Grid_default = Grid;

// node_modules/@mui/joy/Grid/gridClasses.js
function getGridUtilityClass(slot) {
  return generateUtilityClass("JoyGrid", slot);
}
var SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
var DIRECTIONS = ["column-reverse", "column", "row-reverse", "row"];
var WRAPS = ["nowrap", "wrap-reverse", "wrap"];
var GRID_SIZES = ["auto", true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
var gridClasses = generateUtilityClasses("JoyGrid", [
  "root",
  "container",
  "item",
  "zeroMinWidth",
  ...SPACINGS.map((spacing) => `spacing-xs-${spacing}`),
  ...DIRECTIONS.map((direction) => `direction-xs-${direction}`),
  ...WRAPS.map((wrap) => `wrap-xs-${wrap}`),
  ...GRID_SIZES.map((size) => `grid-xs-${size}`),
  ...GRID_SIZES.map((size) => `grid-sm-${size}`),
  ...GRID_SIZES.map((size) => `grid-md-${size}`),
  ...GRID_SIZES.map((size) => `grid-lg-${size}`),
  ...GRID_SIZES.map((size) => `grid-xl-${size}`)
]);
var gridClasses_default = gridClasses;

// node_modules/@mui/joy/IconButton/IconButton.js
init_objectWithoutPropertiesLoose();
init_extends();
var React74 = __toESM(require_react());
var import_prop_types49 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/IconButton/iconButtonClasses.js
function getIconButtonUtilityClass(slot) {
  return generateUtilityClass2("JoyIconButton", slot);
}
var iconButtonClasses = generateUtilityClasses2("JoyIconButton", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "focusVisible", "disabled", "sizeSm", "sizeMd", "sizeLg"]);
var iconButtonClasses_default = iconButtonClasses;

// node_modules/@mui/joy/IconButton/IconButton.js
var import_jsx_runtime74 = __toESM(require_jsx_runtime());
var _excluded49 = ["children", "action", "component", "color", "variant", "size"];
var useUtilityClasses37 = (ownerState) => {
  const {
    color,
    disabled,
    focusVisible,
    focusVisibleClassName,
    size,
    variant
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  const composedClasses = composeClasses(slots, getIconButtonUtilityClass, {});
  if (focusVisible && focusVisibleClassName) {
    composedClasses.root += ` ${focusVisibleClassName}`;
  }
  return composedClasses;
};
var IconButtonRoot = styled_default("button", {
  name: "JoyIconButton",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;
  return [_extends({
    "--Icon-margin": "initial",
    "--CircularProgress-size": "var(--Icon-fontSize)"
  }, ownerState.size === "sm" && {
    "--Icon-fontSize": "calc(var(--IconButton-size, 2rem) / 1.6)",
    minWidth: "var(--IconButton-size, 2rem)",
    minHeight: "var(--IconButton-size, 2rem)",
    fontSize: theme.vars.fontSize.sm,
    paddingInline: "2px"
  }, ownerState.size === "md" && {
    "--Icon-fontSize": "calc(var(--IconButton-size, 2.5rem) / 1.667)",
    minWidth: "var(--IconButton-size, 2.5rem)",
    minHeight: "var(--IconButton-size, 2.5rem)",
    fontSize: theme.vars.fontSize.md,
    paddingInline: "0.25rem"
  }, ownerState.size === "lg" && {
    "--Icon-fontSize": "calc(var(--IconButton-size, 3rem) / 1.714)",
    minWidth: "var(--IconButton-size, 3rem)",
    minHeight: "var(--IconButton-size, 3rem)",
    fontSize: theme.vars.fontSize.lg,
    paddingInline: "0.375rem"
  }, {
    paddingBlock: 0,
    fontFamily: theme.vars.fontFamily.body,
    fontWeight: theme.vars.fontWeight.md,
    margin: `var(--IconButton-margin)`,
    borderRadius: `var(--IconButton-radius, ${theme.vars.radius.sm})`,
    border: "none",
    boxSizing: "border-box",
    backgroundColor: "transparent",
    display: "inline-flex",
    alignItems: "center",
    justifyContent: "center",
    position: "relative",
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    [theme.focus.selector]: theme.focus.default
  }), (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {
    "&:hover": (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color]
  }, {
    "&:active": (_theme$variants3 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants3[ownerState.color]
  }, {
    [`&.${iconButtonClasses_default.disabled}`]: (_theme$variants4 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants4[ownerState.color]
  }];
});
var IconButton = React74.forwardRef(function IconButton2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyIconButton"
  });
  const {
    children,
    action,
    component = "button",
    color = "primary",
    variant = "soft",
    size = "md"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded49);
  const buttonRef = React74.useRef(null);
  const handleRef = useForkRef(buttonRef, ref);
  const {
    focusVisible,
    setFocusVisible,
    getRootProps
  } = useButton(_extends({}, props, {
    ref: handleRef
  }));
  React74.useImperativeHandle(action, () => ({
    focusVisible: () => {
      var _buttonRef$current;
      setFocusVisible(true);
      (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();
    }
  }), [setFocusVisible]);
  const ownerState = _extends({}, props, {
    component,
    color,
    variant,
    size,
    focusVisible
  });
  const classes = useUtilityClasses37(ownerState);
  const rootProps = useSlotProps({
    elementType: IconButtonRoot,
    getSlotProps: getRootProps,
    externalSlotProps: {},
    externalForwardedProps: other,
    ownerState,
    additionalProps: {
      as: component
    },
    className: classes.root
  });
  return (0, import_jsx_runtime74.jsx)(IconButtonRoot, _extends({}, rootProps, {
    children
  }));
});
true ? IconButton.propTypes = {
  action: import_prop_types49.default.oneOfType([import_prop_types49.default.func, import_prop_types49.default.shape({
    current: import_prop_types49.default.shape({
      focusVisible: import_prop_types49.default.func.isRequired
    })
  })]),
  children: import_prop_types49.default.node,
  color: import_prop_types49.default.oneOfType([import_prop_types49.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types49.default.string]),
  component: import_prop_types49.default.elementType,
  disabled: import_prop_types49.default.bool,
  focusVisibleClassName: import_prop_types49.default.string,
  size: import_prop_types49.default.oneOfType([import_prop_types49.default.oneOf(["sm", "md", "lg"]), import_prop_types49.default.string]),
  sx: import_prop_types49.default.oneOfType([import_prop_types49.default.arrayOf(import_prop_types49.default.oneOfType([import_prop_types49.default.func, import_prop_types49.default.object, import_prop_types49.default.bool])), import_prop_types49.default.func, import_prop_types49.default.object]),
  tabIndex: import_prop_types49.default.number,
  variant: import_prop_types49.default.oneOfType([import_prop_types49.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types49.default.string])
} : void 0;
var IconButton_default = IconButton;

// node_modules/@mui/joy/Input/Input.js
init_objectWithoutPropertiesLoose();
init_extends();
var React76 = __toESM(require_react());
var import_prop_types50 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Input/inputClasses.js
function getInputUtilityClass(slot) {
  return generateUtilityClass2("JoyInput", slot);
}
var inputClasses = generateUtilityClasses2("JoyInput", ["root", "input", "formControl", "focused", "disabled", "error", "adornedStart", "adornedEnd", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "fullWidth", "startDecorator", "endDecorator"]);
var inputClasses_default = inputClasses;

// node_modules/@mui/joy/Input/useForwardedInput.js
init_extends();
init_objectWithoutPropertiesLoose();
var React75 = __toESM(require_react());
var _excluded50 = ["aria-describedby", "aria-label", "aria-labelledby", "autoComplete", "autoFocus", "className", "defaultValue", "disabled", "error", "id", "name", "onClick", "onChange", "onKeyDown", "onKeyUp", "onFocus", "onBlur", "placeholder", "readOnly", "required", "type", "value"];
function useForwardedInput(props, classes) {
  const formControl = React75.useContext(FormControlContext_default);
  const {
    "aria-describedby": ariaDescribedby,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    autoComplete,
    autoFocus,
    className,
    defaultValue,
    disabled: disabledProp,
    error: errorProp,
    id,
    name,
    onClick,
    onChange,
    onKeyDown,
    onKeyUp,
    onFocus,
    onBlur,
    placeholder,
    readOnly,
    required,
    type,
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded50);
  const {
    getRootProps,
    getInputProps,
    focused,
    error,
    disabled
  } = useInput({
    disabled: disabledProp != null ? disabledProp : formControl == null ? void 0 : formControl.disabled,
    defaultValue,
    error: errorProp,
    onBlur,
    onClick,
    onChange,
    onFocus,
    required,
    value
  });
  const rootStateClasses = {
    [classes.disabled]: disabled,
    [classes.error]: error,
    [classes.focused]: focused,
    [classes.formControl]: Boolean(formControl),
    [className]: className
  };
  const inputStateClasses = {
    [classes.disabled]: disabled
  };
  const propsToForward = {
    "aria-describedby": ariaDescribedby,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    autoComplete,
    autoFocus,
    disabled,
    id,
    onKeyDown,
    onKeyUp,
    name,
    placeholder,
    readOnly,
    type
  };
  return _extends({
    formControl,
    propsToForward,
    rootStateClasses,
    inputStateClasses,
    getRootProps,
    getInputProps,
    focused,
    error,
    disabled
  }, other);
}

// node_modules/@mui/joy/Input/Input.js
var import_jsx_runtime75 = __toESM(require_jsx_runtime());
var import_jsx_runtime76 = __toESM(require_jsx_runtime());
var _excluded51 = ["propsToForward", "rootStateClasses", "inputStateClasses", "getRootProps", "getInputProps", "component", "componentsProps", "formControl", "focused", "error", "disabled", "fullWidth", "size", "color", "variant", "startDecorator", "endDecorator"];
var useUtilityClasses38 = (ownerState) => {
  const {
    disabled,
    fullWidth,
    variant,
    color,
    size
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", fullWidth && "fullWidth", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],
    input: ["input"],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  return composeClasses(slots, getInputUtilityClass, {});
};
var InputRoot = styled_default("div", {
  name: "JoyInput",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$vars$palette, _variantStyle$backgro, _theme$variants2, _theme$variants3;
  const variantStyle = (_theme$variants = theme.variants[`${ownerState.variant}`]) == null ? void 0 : _theme$variants[ownerState.color];
  return [_extends({
    "--Input-radius": theme.vars.radius.sm,
    "--Input-gap": "0.5rem",
    "--Input-placeholderOpacity": 0.5,
    "--Input-focusedThickness": "2px",
    "--Input-focusedHighlight": (_theme$vars$palette = theme.vars.palette[ownerState.color === "neutral" ? "primary" : ownerState.color]) == null ? void 0 : _theme$vars$palette[500]
  }, ownerState.size === "sm" && {
    "--Input-minHeight": "2rem",
    "--Input-paddingInline": "0.5rem",
    "--Input-decorator-childHeight": "min(1.5rem, var(--Input-minHeight))",
    "--Icon-fontSize": "1.25rem"
  }, ownerState.size === "md" && {
    "--Input-minHeight": "2.5rem",
    "--Input-paddingInline": "0.75rem",
    "--Input-decorator-childHeight": "min(2rem, var(--Input-minHeight))",
    "--Icon-fontSize": "1.5rem"
  }, ownerState.size === "lg" && {
    "--Input-minHeight": "3rem",
    "--Input-paddingInline": "1rem",
    "--Input-gap": "0.75rem",
    "--Input-decorator-childHeight": "min(2.375rem, var(--Input-minHeight))",
    "--Icon-fontSize": "1.75rem"
  }, {
    "--Input-decorator-childOffset": "min(calc(var(--Input-paddingInline) - (var(--Input-minHeight) - 2 * var(--variant-borderWidth) - var(--Input-decorator-childHeight)) / 2), var(--Input-paddingInline))",
    "--internal-paddingBlock": "max((var(--Input-minHeight) - 2 * var(--variant-borderWidth) - var(--Input-decorator-childHeight)) / 2, 0px)",
    "--Input-decorator-childRadius": "max((var(--Input-radius) - var(--variant-borderWidth)) - var(--internal-paddingBlock), min(var(--internal-paddingBlock) / 2, (var(--Input-radius) - var(--variant-borderWidth)) / 2))",
    "--Button-minHeight": "var(--Input-decorator-childHeight)",
    "--IconButton-size": "var(--Input-decorator-childHeight)",
    "--Button-radius": "var(--Input-decorator-childRadius)",
    "--IconButton-radius": "var(--Input-decorator-childRadius)",
    boxSizing: "border-box",
    minWidth: 0,
    minHeight: "var(--Input-minHeight)"
  }, ownerState.fullWidth && {
    width: "100%"
  }, {
    cursor: "text",
    position: "relative",
    display: "flex",
    alignItems: "center",
    paddingInline: `var(--Input-paddingInline)`,
    borderRadius: "var(--Input-radius)",
    fontFamily: theme.vars.fontFamily.body,
    fontSize: theme.vars.fontSize.md
  }, ownerState.size === "sm" && {
    fontSize: theme.vars.fontSize.sm
  }, {
    transition: "border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    "&:before": {
      boxSizing: "border-box",
      content: '""',
      display: "block",
      position: "absolute",
      pointerEvents: "none",
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      zIndex: 1,
      borderRadius: "inherit",
      margin: "calc(var(--variant-borderWidth) * -1)"
    }
  }), _extends({}, variantStyle, {
    backgroundColor: (_variantStyle$backgro = variantStyle == null ? void 0 : variantStyle.backgroundColor) != null ? _variantStyle$backgro : theme.vars.palette.background.surface,
    [`&:hover:not(.${inputClasses_default.focused})`]: _extends({}, (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color], {
      backgroundColor: null,
      cursor: "text"
    }),
    [`&.${inputClasses_default.disabled}`]: (_theme$variants3 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants3[ownerState.color],
    [`&.${inputClasses_default.focused}`]: {
      "&:before": {
        boxShadow: `inset 0 0 0 var(--Input-focusedThickness) var(--Input-focusedHighlight)`
      }
    }
  })];
});
var InputInput = styled_default("input", {
  name: "JoyInput",
  slot: "Input",
  overridesResolver: (props, styles2) => styles2.input
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette2;
  return {
    border: "none",
    minWidth: 0,
    outline: 0,
    padding: 0,
    flex: 1,
    alignSelf: "stretch",
    color: "inherit",
    backgroundColor: "transparent",
    fontFamily: "inherit",
    fontSize: "inherit",
    fontStyle: "inherit",
    fontWeight: "inherit",
    lineHeight: "inherit",
    textOverflow: "ellipsis",
    "&:-webkit-autofill": {
      WebkitBackgroundClip: "text",
      WebkitTextFillColor: (_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2.overrideTextPrimary
    },
    "&::-webkit-input-placeholder": {
      opacity: "var(--Input-placeholderOpacity)",
      color: "inherit"
    },
    "&::-moz-placeholder": {
      opacity: "var(--Input-placeholderOpacity)",
      color: "inherit"
    },
    "&:-ms-input-placeholder": {
      opacity: "var(--Input-placeholderOpacity)",
      color: "inherit"
    },
    "&::-ms-input-placeholder": {
      opacity: "var(--Input-placeholderOpacity)",
      color: "inherit"
    }
  };
});
var InputStartDecorator = styled_default("span", {
  name: "JoyInput",
  slot: "StartDecorator",
  overridesResolver: (props, styles2) => styles2.startDecorator
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette3;
  return _extends({
    "--Button-margin": "0 0 0 calc(var(--Input-decorator-childOffset) * -1)",
    "--IconButton-margin": "0 0 0 calc(var(--Input-decorator-childOffset) * -1)",
    "--Icon-margin": "0 0 0 calc(var(--Input-paddingInline) / -4)",
    display: "inherit",
    alignItems: "center",
    marginInlineEnd: "var(--Input-gap)",
    color: theme.vars.palette.text.tertiary,
    cursor: "initial"
  }, ownerState.focused && {
    color: (_theme$vars$palette3 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette3[`${ownerState.variant}Color`]
  });
});
var InputEndDecorator = styled_default("span", {
  name: "JoyInput",
  slot: "EndDecorator",
  overridesResolver: (props, styles2) => styles2.endDecorator
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette4;
  return {
    "--Button-margin": "0 calc(var(--Input-decorator-childOffset) * -1) 0 0",
    "--IconButton-margin": "0 calc(var(--Input-decorator-childOffset) * -1) 0 0",
    "--Icon-margin": "0 calc(var(--Input-paddingInline) / -4) 0 0",
    display: "inherit",
    alignItems: "center",
    marginInlineStart: "var(--Input-gap)",
    color: (_theme$vars$palette4 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette4[`${ownerState.variant}Color`],
    cursor: "initial"
  };
});
var Input = React76.forwardRef(function Input2(inProps, ref) {
  var _ref, _inProps$error, _ref2, _inProps$size, _ref3, _inProps$color;
  const props = useThemeProps2({
    props: inProps,
    name: "JoyInput"
  });
  const _useForwardedInput = useForwardedInput(props, inputClasses_default), {
    propsToForward,
    rootStateClasses,
    inputStateClasses,
    getRootProps,
    getInputProps,
    component,
    componentsProps = {},
    formControl,
    focused,
    error: errorProp = false,
    disabled,
    fullWidth = false,
    size: sizeProp = "md",
    color: colorProp = "neutral",
    variant = "outlined",
    startDecorator,
    endDecorator
  } = _useForwardedInput, other = _objectWithoutPropertiesLoose(_useForwardedInput, _excluded51);
  if (true) {
    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;
    React76.useEffect(() => {
      if (registerEffect) {
        return registerEffect();
      }
      return void 0;
    }, [registerEffect]);
  }
  const error = (_ref = (_inProps$error = inProps.error) != null ? _inProps$error : formControl == null ? void 0 : formControl.error) != null ? _ref : errorProp;
  const size = (_ref2 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref2 : sizeProp;
  const color = error ? "danger" : (_ref3 = (_inProps$color = inProps.color) != null ? _inProps$color : formControl == null ? void 0 : formControl.color) != null ? _ref3 : colorProp;
  const ownerState = _extends({}, props, {
    fullWidth,
    color,
    disabled,
    error,
    focused,
    size,
    variant
  });
  const classes = useUtilityClasses38(ownerState);
  const rootProps = useSlotProps({
    elementType: InputRoot,
    getSlotProps: getRootProps,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    ownerState,
    className: [classes.root, rootStateClasses]
  });
  const inputProps = useSlotProps({
    elementType: InputInput,
    getSlotProps: (otherHandlers) => getInputProps(_extends({}, otherHandlers, propsToForward)),
    externalSlotProps: componentsProps.input,
    ownerState,
    additionalProps: formControl ? {
      id: formControl.htmlFor,
      "aria-describedby": formControl["aria-describedby"]
    } : {},
    className: [classes.input, inputStateClasses]
  });
  const startDecoratorProps = useSlotProps({
    elementType: InputStartDecorator,
    externalSlotProps: componentsProps.startDecorator,
    ownerState,
    className: classes.startDecorator
  });
  const endDecoratorProps = useSlotProps({
    elementType: InputEndDecorator,
    externalSlotProps: componentsProps.endDecorator,
    ownerState,
    className: classes.endDecorator
  });
  return (0, import_jsx_runtime76.jsxs)(InputRoot, _extends({}, rootProps, {
    children: [startDecorator && (0, import_jsx_runtime75.jsx)(InputStartDecorator, _extends({}, startDecoratorProps, {
      children: startDecorator
    })), (0, import_jsx_runtime75.jsx)(InputInput, _extends({}, inputProps)), endDecorator && (0, import_jsx_runtime75.jsx)(InputEndDecorator, _extends({}, endDecoratorProps, {
      children: endDecorator
    }))]
  }));
});
true ? Input.propTypes = {
  autoComplete: import_prop_types50.default.string,
  autoFocus: import_prop_types50.default.bool,
  children: import_prop_types50.default.node,
  className: import_prop_types50.default.string,
  color: import_prop_types50.default.oneOfType([import_prop_types50.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types50.default.string]),
  componentsProps: import_prop_types50.default.shape({
    endDecorator: import_prop_types50.default.oneOfType([import_prop_types50.default.func, import_prop_types50.default.object]),
    input: import_prop_types50.default.oneOfType([import_prop_types50.default.func, import_prop_types50.default.object]),
    root: import_prop_types50.default.oneOfType([import_prop_types50.default.func, import_prop_types50.default.object]),
    startDecorator: import_prop_types50.default.oneOfType([import_prop_types50.default.func, import_prop_types50.default.object])
  }),
  defaultValue: import_prop_types50.default.oneOfType([import_prop_types50.default.arrayOf(import_prop_types50.default.string), import_prop_types50.default.number, import_prop_types50.default.string]),
  disabled: import_prop_types50.default.bool,
  endDecorator: import_prop_types50.default.node,
  error: import_prop_types50.default.bool,
  fullWidth: import_prop_types50.default.bool,
  id: import_prop_types50.default.string,
  name: import_prop_types50.default.string,
  onChange: import_prop_types50.default.func,
  placeholder: import_prop_types50.default.string,
  readOnly: import_prop_types50.default.bool,
  required: import_prop_types50.default.bool,
  size: import_prop_types50.default.oneOfType([import_prop_types50.default.oneOf(["sm", "md", "lg"]), import_prop_types50.default.string]),
  startDecorator: import_prop_types50.default.node,
  sx: import_prop_types50.default.oneOfType([import_prop_types50.default.arrayOf(import_prop_types50.default.oneOfType([import_prop_types50.default.func, import_prop_types50.default.object, import_prop_types50.default.bool])), import_prop_types50.default.func, import_prop_types50.default.object]),
  value: import_prop_types50.default.oneOfType([import_prop_types50.default.arrayOf(import_prop_types50.default.string), import_prop_types50.default.number, import_prop_types50.default.string]),
  variant: import_prop_types50.default.oneOfType([import_prop_types50.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types50.default.string])
} : void 0;
var Input_default = Input;

// node_modules/@mui/joy/Link/Link.js
init_objectWithoutPropertiesLoose();
init_extends();
var React77 = __toESM(require_react());
var import_prop_types51 = __toESM(require_prop_types());
init_esm();
init_esm2();

// node_modules/@mui/joy/Link/linkClasses.js
function getLinkUtilityClass(slot) {
  return generateUtilityClass2("JoyLink", slot);
}
var linkClasses = generateUtilityClasses2("JoyLink", ["root", "disabled", "focusVisible", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "focusVisible", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "underlineNone", "underlineHover", "underlineAlways", "h1", "h2", "h3", "h4", "h5", "h6", "body1", "body2", "body3", "startDecorator", "endDecorator"]);
var linkClasses_default = linkClasses;

// node_modules/@mui/joy/Link/Link.js
var import_jsx_runtime77 = __toESM(require_jsx_runtime());
var import_jsx_runtime78 = __toESM(require_jsx_runtime());
var _excluded52 = ["color", "textColor"];
var _excluded212 = ["component", "componentsProps", "children", "disabled", "onBlur", "onFocus", "level", "overlay", "underline", "variant", "endDecorator", "startDecorator"];
var useUtilityClasses39 = (ownerState) => {
  const {
    level,
    color,
    variant,
    underline,
    focusVisible,
    disabled
  } = ownerState;
  const slots = {
    root: ["root", color && `color${capitalize(color)}`, disabled && "disabled", focusVisible && "focusVisible", level, underline && `underline${capitalize(underline)}`, variant && `variant${capitalize(variant)}`],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  return composeClasses(slots, getLinkUtilityClass, {});
};
var StartDecorator2 = styled_default("span", {
  name: "JoyLink",
  slot: "StartDecorator",
  overridesResolver: (props, styles2) => styles2.startDecorator
})({
  display: "inline-flex",
  marginInlineEnd: "clamp(4px, var(--Link-gap, 0.25em), 0.5rem)"
});
var EndDecorator2 = styled_default("span", {
  name: "JoyLink",
  slot: "endDecorator",
  overridesResolver: (props, styles2) => styles2.endDecorator
})({
  display: "inline-flex",
  marginInlineStart: "clamp(4px, var(--Link-gap, 0.25em), 0.5rem)"
});
var LinkRoot = styled_default("a", {
  name: "JoyLink",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette, _theme$vars$palette2, _theme$vars$palette3, _theme$variants$owner, _theme$variants, _theme$variants2, _theme$variants3;
  return [_extends({
    "--Icon-fontSize": "1.25em",
    "--CircularProgress-size": "1em"
  }, ownerState.level && ownerState.level !== "inherit" && theme.typography[ownerState.level], ownerState.level === "inherit" && {
    fontSize: "inherit",
    fontFamily: "inherit",
    lineHeight: "inherit"
  }, ownerState.underline === "none" && {
    textDecoration: "none"
  }, ownerState.underline === "hover" && {
    textDecoration: "none",
    "&:hover": {
      textDecorationLine: "underline"
    }
  }, ownerState.underline === "always" && {
    textDecoration: "underline"
  }, ownerState.startDecorator && {
    verticalAlign: "bottom"
  }, {
    display: "inline-flex",
    alignItems: "center",
    WebkitTapHighlightColor: "transparent",
    backgroundColor: "transparent",
    outline: 0,
    border: 0,
    margin: 0,
    borderRadius: theme.vars.radius.xs,
    padding: 0,
    textDecorationColor: `rgba(${(_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette.mainChannel} / var(--Link-underlineOpacity, 0.72))`
  }, ownerState.variant ? _extends({
    paddingInline: "0.25em"
  }, !ownerState.nested && {
    marginInline: "-0.25em"
  }) : {
    color: `rgba(${(_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2.mainChannel} / 1)`,
    cursor: "pointer",
    [`&.${linkClasses_default.disabled}`]: {
      pointerEvents: "none",
      color: `rgba(${(_theme$vars$palette3 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette3.mainChannel} / 0.6)`
    }
  }, {
    userSelect: "none",
    MozAppearance: "none",
    WebkitAppearance: "none",
    "&::-moz-focus-inner": {
      borderStyle: "none"
    }
  }, ownerState.overlay ? {
    position: "initial",
    "&::after": {
      content: '""',
      display: "block",
      position: "absolute",
      top: 0,
      left: 0,
      bottom: 0,
      right: 0,
      borderRadius: `var(--internal-action-radius, inherit)`,
      margin: `var(--internal-action-margin)`
    },
    [`${theme.focus.selector}`]: {
      "&::after": theme.focus.default
    }
  } : {
    position: "relative",
    [theme.focus.selector]: theme.focus.default
  }), ownerState.variant && _extends({}, (_theme$variants$owner = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants$owner[ownerState.color], {
    "&:hover": (_theme$variants = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants[ownerState.color],
    "&:active": (_theme$variants2 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants2[ownerState.color],
    [`&.${linkClasses_default.disabled}`]: (_theme$variants3 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants3[ownerState.color]
  })];
});
var Link = React77.forwardRef(function Link2(inProps, ref) {
  const _useThemeProps = useThemeProps2({
    props: inProps,
    name: "JoyLink"
  }), {
    color = "primary",
    textColor
  } = _useThemeProps, themeProps = _objectWithoutPropertiesLoose(_useThemeProps, _excluded52);
  const nested = React77.useContext(TypographyContext);
  const props = extendSxProp(_extends({}, themeProps, {
    color: textColor
  }));
  const {
    component = "a",
    componentsProps = {},
    children,
    disabled = false,
    onBlur,
    onFocus,
    level: levelProp = "body1",
    overlay = false,
    underline = "hover",
    variant,
    endDecorator,
    startDecorator
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded212);
  const level = nested ? inProps.level || "inherit" : levelProp;
  const {
    isFocusVisibleRef,
    onBlur: handleBlurVisible,
    onFocus: handleFocusVisible,
    ref: focusVisibleRef
  } = useIsFocusVisible();
  const [focusVisible, setFocusVisible] = React77.useState(false);
  const handleRef = useForkRef(ref, focusVisibleRef);
  const handleBlur2 = (event) => {
    handleBlurVisible(event);
    if (isFocusVisibleRef.current === false) {
      setFocusVisible(false);
    }
    if (onBlur) {
      onBlur(event);
    }
  };
  const handleFocus = (event) => {
    handleFocusVisible(event);
    if (isFocusVisibleRef.current === true) {
      setFocusVisible(true);
    }
    if (onFocus) {
      onFocus(event);
    }
  };
  const ownerState = _extends({}, props, {
    color,
    component,
    disabled,
    focusVisible,
    underline,
    variant,
    level,
    overlay,
    nested
  });
  const classes = useUtilityClasses39(ownerState);
  const rootProps = useSlotProps({
    elementType: LinkRoot,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: handleRef,
      as: component,
      onBlur: handleBlur2,
      onFocus: handleFocus
    },
    ownerState,
    className: classes.root
  });
  const startDecoratorProps = useSlotProps({
    elementType: StartDecorator2,
    externalSlotProps: componentsProps.startDecorator,
    ownerState,
    className: classes.startDecorator
  });
  const endDecoratorProps = useSlotProps({
    elementType: EndDecorator2,
    externalSlotProps: componentsProps.endDecorator,
    ownerState,
    className: classes.endDecorator
  });
  return (0, import_jsx_runtime78.jsxs)(LinkRoot, _extends({}, rootProps, {
    children: [startDecorator && (0, import_jsx_runtime77.jsx)(StartDecorator2, _extends({}, startDecoratorProps, {
      children: startDecorator
    })), children, endDecorator && (0, import_jsx_runtime77.jsx)(EndDecorator2, _extends({}, endDecoratorProps, {
      children: endDecorator
    }))]
  }));
});
true ? Link.propTypes = {
  children: import_prop_types51.default.node,
  color: import_prop_types51.default.oneOfType([import_prop_types51.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types51.default.string]),
  component: import_prop_types51.default.elementType,
  componentsProps: import_prop_types51.default.shape({
    endDecorator: import_prop_types51.default.oneOfType([import_prop_types51.default.func, import_prop_types51.default.object]),
    root: import_prop_types51.default.oneOfType([import_prop_types51.default.func, import_prop_types51.default.object]),
    startDecorator: import_prop_types51.default.oneOfType([import_prop_types51.default.func, import_prop_types51.default.object])
  }),
  disabled: import_prop_types51.default.bool,
  endDecorator: import_prop_types51.default.node,
  level: import_prop_types51.default.oneOfType([import_prop_types51.default.oneOf(["body1", "body2", "body3", "h1", "h2", "h3", "h4", "h5", "h6", "inherit"]), import_prop_types51.default.string]),
  onBlur: import_prop_types51.default.func,
  onFocus: import_prop_types51.default.func,
  overlay: import_prop_types51.default.bool,
  startDecorator: import_prop_types51.default.node,
  sx: import_prop_types51.default.oneOfType([import_prop_types51.default.arrayOf(import_prop_types51.default.oneOfType([import_prop_types51.default.func, import_prop_types51.default.object, import_prop_types51.default.bool])), import_prop_types51.default.func, import_prop_types51.default.object]),
  textColor: import_prop_types51.default.any,
  underline: import_prop_types51.default.oneOf(["always", "hover", "none"]),
  variant: import_prop_types51.default.oneOfType([import_prop_types51.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types51.default.string])
} : void 0;
var Link_default = Link;

// node_modules/@mui/joy/List/List.js
init_objectWithoutPropertiesLoose();
init_extends();
var React84 = __toESM(require_react());
var import_prop_types52 = __toESM(require_prop_types());
init_clsx_m();
init_esm();

// node_modules/@mui/joy/List/listClasses.js
function getListUtilityClass(slot) {
  return generateUtilityClass2("JoyList", slot);
}
var listClasses = generateUtilityClasses2("JoyList", ["root", "nesting", "row", "scoped", "sizeSm", "sizeMd", "sizeLg", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var listClasses_default = listClasses;

// node_modules/@mui/joy/List/NestedListContext.js
var React78 = __toESM(require_react());
var NestedListContext = React78.createContext(false);
var NestedListContext_default = NestedListContext;

// node_modules/@mui/joy/List/ComponentListContext.js
var React79 = __toESM(require_react());
var ComponentListContext = React79.createContext(void 0);
var ComponentListContext_default = ComponentListContext;

// node_modules/@mui/joy/List/ListProvider.js
init_extends();
var React82 = __toESM(require_react());

// node_modules/@mui/joy/List/RowListContext.js
var React80 = __toESM(require_react());
var RowListContext = React80.createContext(false);
var RowListContext_default = RowListContext;

// node_modules/@mui/joy/List/WrapListContext.js
var React81 = __toESM(require_react());
var WrapListContext = React81.createContext(false);
var WrapListContext_default = WrapListContext;

// node_modules/@mui/joy/List/ListProvider.js
var import_jsx_runtime79 = __toESM(require_jsx_runtime());
var scopedVariables = {
  "--NestedList-marginRight": "0px",
  "--NestedList-marginLeft": "0px",
  "--NestedList-item-paddingLeft": "var(--List-item-paddingX)",
  "--List-itemButton-marginBlock": "0px",
  "--List-itemButton-marginInline": "0px",
  "--List-item-marginBlock": "0px",
  "--List-item-marginInline": "0px"
};
var ListProvider = ({
  children,
  nested,
  row = false,
  wrap = false
}) => {
  const baseProviders = (0, import_jsx_runtime79.jsx)(RowListContext_default.Provider, {
    value: row,
    children: (0, import_jsx_runtime79.jsx)(WrapListContext_default.Provider, {
      value: wrap,
      children: React82.Children.map(children, (child, index) => React82.isValidElement(child) ? React82.cloneElement(child, _extends({}, index === 0 && {
        "data-first-child": ""
      })) : child)
    })
  });
  if (nested === void 0) {
    return baseProviders;
  }
  return (0, import_jsx_runtime79.jsx)(NestedListContext_default.Provider, {
    value: nested,
    children: baseProviders
  });
};
var ListProvider_default = ListProvider;

// node_modules/@mui/joy/RadioGroup/RadioGroupContext.js
var React83 = __toESM(require_react());
var RadioGroupContext = React83.createContext(void 0);
if (true) {
  RadioGroupContext.displayName = "RadioGroupContext";
}
var RadioGroupContext_default = RadioGroupContext;

// node_modules/@mui/joy/List/List.js
var import_jsx_runtime80 = __toESM(require_jsx_runtime());
var _excluded53 = ["component", "className", "children", "size", "row", "wrap", "variant", "color", "role"];
var useUtilityClasses40 = (ownerState) => {
  const {
    variant,
    color,
    size,
    nesting,
    row,
    instanceSize
  } = ownerState;
  const slots = {
    root: ["root", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, !instanceSize && !nesting && size && `size${capitalize(size)}`, instanceSize && `size${capitalize(instanceSize)}`, nesting && "nesting", row && "row"]
  };
  return composeClasses(slots, getListUtilityClass, {});
};
var ListRoot = styled_default("ul", {
  name: "JoyList",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  function applySizeVars(size) {
    if (size === "sm") {
      return {
        "--List-divider-gap": "0.25rem",
        "--List-item-minHeight": "2rem",
        "--List-item-paddingY": "0.25rem",
        "--List-item-paddingX": "0.5rem",
        "--List-item-fontSize": theme.vars.fontSize.sm,
        "--List-decorator-size": ownerState.row ? "1.5rem" : "2rem",
        "--Icon-fontSize": "1.125rem"
      };
    }
    if (size === "md") {
      return {
        "--List-divider-gap": "0.375rem",
        "--List-item-minHeight": "2.5rem",
        "--List-item-paddingY": "0.375rem",
        "--List-item-paddingX": "0.75rem",
        "--List-item-fontSize": theme.vars.fontSize.md,
        "--List-decorator-size": ownerState.row ? "1.75rem" : "2.5rem",
        "--Icon-fontSize": "1.25rem"
      };
    }
    if (size === "lg") {
      return {
        "--List-divider-gap": "0.5rem",
        "--List-item-minHeight": "3rem",
        "--List-item-paddingY": "0.5rem",
        "--List-item-paddingX": "1rem",
        "--List-item-fontSize": theme.vars.fontSize.md,
        "--List-decorator-size": ownerState.row ? "2.25rem" : "3rem",
        "--Icon-fontSize": "1.5rem"
      };
    }
    return {};
  }
  return [ownerState.nesting && _extends({}, applySizeVars(ownerState.instanceSize), {
    "--List-item-paddingRight": "var(--List-item-paddingX)",
    "--List-item-paddingLeft": "var(--NestedList-item-paddingLeft)",
    "--List-itemButton-marginBlock": "0px",
    "--List-itemButton-marginInline": "0px",
    "--List-item-marginBlock": "0px",
    "--List-item-marginInline": "0px",
    padding: 0,
    marginInlineStart: "var(--NestedList-marginLeft)",
    marginInlineEnd: "var(--NestedList-marginRight)",
    marginBlockStart: "var(--List-gap)",
    marginBlockEnd: "initial"
  }), !ownerState.nesting && _extends({}, applySizeVars(ownerState.size), {
    "--List-gap": "0px",
    "--List-decorator-color": theme.vars.palette.text.tertiary,
    "--List-nestedInsetStart": "0px",
    "--List-item-paddingLeft": "var(--List-item-paddingX)",
    "--List-item-paddingRight": "var(--List-item-paddingX)",
    "--internal-child-radius": "max(var(--List-radius, 0px) - var(--List-padding), min(var(--List-padding) / 2, var(--List-radius, 0px) / 2))",
    "--List-item-radius": "min(calc(var(--List-padding) * 999), var(--internal-child-radius))",
    "--List-item-startActionTranslateX": "calc(0.5 * var(--List-item-paddingLeft))",
    "--List-item-endActionTranslateX": "calc(-0.5 * var(--List-item-paddingRight))",
    margin: "initial"
  }, ownerState.row ? _extends({}, ownerState.wrap ? {
    padding: "var(--List-padding)",
    marginInlineStart: "calc(-1 * var(--List-gap))",
    marginBlockStart: "calc(-1 * var(--List-gap))"
  } : {
    paddingInline: "var(--List-padding, var(--List-divider-gap))",
    paddingBlock: "var(--List-padding)"
  }) : {
    paddingBlock: "var(--List-padding, var(--List-divider-gap))",
    paddingInline: "var(--List-padding)"
  }), _extends({
    borderRadius: "var(--List-radius)",
    listStyle: "none",
    display: "flex",
    flexDirection: ownerState.row ? "row" : "column"
  }, ownerState.wrap && {
    flexWrap: "wrap"
  }, {
    flexGrow: 1,
    position: "relative"
  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color])];
});
var List = React84.forwardRef(function List2(inProps, ref) {
  var _inProps$size;
  const nesting = React84.useContext(NestedListContext_default);
  const menuContext = React84.useContext(MenuUnstyledContext_default);
  const selectContext = React84.useContext(SelectUnstyledContext);
  const radioGroupContext = React84.useContext(RadioGroupContext_default);
  const props = useThemeProps2({
    props: inProps,
    name: "JoyList"
  });
  const {
    component,
    className,
    children,
    size = (_inProps$size = inProps.size) != null ? _inProps$size : "md",
    row = false,
    wrap = false,
    variant = "plain",
    color = "neutral",
    role: roleProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded53);
  let role;
  if (menuContext || selectContext) {
    role = "group";
  }
  if (radioGroupContext) {
    role = "presentation";
  }
  if (roleProp) {
    role = roleProp;
  }
  const ownerState = _extends({}, props, {
    instanceSize: inProps.size,
    size,
    nesting,
    row,
    wrap,
    variant,
    color,
    role
  });
  const classes = useUtilityClasses40(ownerState);
  return (0, import_jsx_runtime80.jsx)(ListRoot, _extends({
    ref,
    as: component,
    className: clsx_m_default(classes.root, className),
    ownerState,
    role,
    "aria-labelledby": typeof nesting === "string" ? nesting : void 0
  }, other, {
    children: (0, import_jsx_runtime80.jsx)(ComponentListContext_default.Provider, {
      value: `${typeof component === "string" ? component : ""}:${role || ""}`,
      children: (0, import_jsx_runtime80.jsx)(ListProvider_default, {
        row,
        wrap,
        children
      })
    })
  }));
});
true ? List.propTypes = {
  children: import_prop_types52.default.node,
  className: import_prop_types52.default.string,
  color: import_prop_types52.default.oneOfType([import_prop_types52.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types52.default.string]),
  component: import_prop_types52.default.elementType,
  role: import_prop_types52.default.string,
  row: import_prop_types52.default.bool,
  size: import_prop_types52.default.oneOfType([import_prop_types52.default.oneOf(["sm", "md", "lg"]), import_prop_types52.default.string]),
  sx: import_prop_types52.default.oneOfType([import_prop_types52.default.arrayOf(import_prop_types52.default.oneOfType([import_prop_types52.default.func, import_prop_types52.default.object, import_prop_types52.default.bool])), import_prop_types52.default.func, import_prop_types52.default.object]),
  variant: import_prop_types52.default.oneOfType([import_prop_types52.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types52.default.string]),
  wrap: import_prop_types52.default.bool
} : void 0;
var List_default = List;

// node_modules/@mui/joy/ListDivider/ListDivider.js
init_objectWithoutPropertiesLoose();
init_extends();
var React85 = __toESM(require_react());
var import_prop_types53 = __toESM(require_prop_types());
init_clsx_m();
init_esm();

// node_modules/@mui/joy/ListDivider/listDividerClasses.js
function getListDividerUtilityClass(slot) {
  return generateUtilityClass2("JoyListDivider", slot);
}
var listDividerClasses = generateUtilityClasses2("JoyListDivider", ["root", "insetGutter", "insetStartDecorator", "insetStartContent"]);
var listDividerClasses_default = listDividerClasses;

// node_modules/@mui/joy/ListDivider/ListDivider.js
var import_jsx_runtime81 = __toESM(require_jsx_runtime());
var _excluded54 = ["component", "className", "children", "inset", "orientation"];
var useUtilityClasses41 = (ownerState) => {
  const slots = {
    root: [
      "root",
      ownerState.inset && ownerState.inset !== "context" && `inset${capitalize(ownerState.inset)}`
    ]
  };
  return composeClasses(slots, getListDividerUtilityClass, {});
};
var ListDividerRoot = styled_default(Divider_default, {
  name: "JoyListDivider",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  ownerState
}) => _extends({}, ownerState.inset === "context" && {
  "--Divider-inset": "calc(-1 * var(--List-padding))"
}, ownerState.row && _extends({
  marginInline: "var(--List-divider-gap)"
}, ownerState.inset === "gutter" && {
  marginBlock: "var(--List-item-paddingY)"
}, ownerState["data-first-child"] === void 0 && {
  marginInlineStart: "calc(var(--List-gap) + var(--List-divider-gap))"
}), !ownerState.row && _extends({}, ownerState["data-first-child"] === void 0 && {
  marginBlockStart: "calc(var(--List-gap) + var(--List-divider-gap))"
}, {
  marginBlockEnd: "var(--List-divider-gap)"
}, ownerState.inset === "gutter" && {
  marginInlineStart: "var(--List-item-paddingLeft)",
  marginInlineEnd: "var(--List-item-paddingRight)"
}, ownerState.inset === "startDecorator" && {
  marginInlineStart: "var(--List-item-paddingLeft)"
}, ownerState.inset === "startContent" && {
  marginInlineStart: "calc(var(--List-item-paddingLeft) + var(--List-decorator-size))"
})));
var ListDivider = React85.forwardRef(function ListDivider2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyListDivider"
  });
  const row = React85.useContext(RowListContext_default);
  const {
    component = "li",
    className,
    children,
    inset = "context",
    orientation = row ? "vertical" : "horizontal"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded54);
  const ownerState = _extends({}, props, {
    inset,
    row,
    orientation
  });
  const classes = useUtilityClasses41(ownerState);
  return (0, import_jsx_runtime81.jsx)(
    ListDividerRoot,
    _extends({
      ref
    }, inset === "context" && {
      inset
    }, {
      component,
      className: clsx_m_default(classes.root, className),
      ownerState,
      orientation
    }, other, {
      children
    })
  );
});
true ? ListDivider.propTypes = {
  children: import_prop_types53.default.node,
  classes: import_prop_types53.default.object,
  className: import_prop_types53.default.string,
  component: import_prop_types53.default.elementType,
  inset: import_prop_types53.default.oneOfType([import_prop_types53.default.oneOf(["gutter", "startDecorator", "startContent"]), import_prop_types53.default.string]),
  orientation: import_prop_types53.default.oneOf(["horizontal", "vertical"]),
  sx: import_prop_types53.default.oneOfType([import_prop_types53.default.arrayOf(import_prop_types53.default.oneOfType([import_prop_types53.default.func, import_prop_types53.default.object, import_prop_types53.default.bool])), import_prop_types53.default.func, import_prop_types53.default.object])
} : void 0;
var ListDivider_default = ListDivider;

// node_modules/@mui/joy/ListItem/ListItem.js
init_objectWithoutPropertiesLoose();
init_extends();
var React87 = __toESM(require_react());
var import_prop_types54 = __toESM(require_prop_types());
init_clsx_m();
init_esm();

// node_modules/@mui/joy/ListItem/listItemClasses.js
function getListItemUtilityClass(slot) {
  return generateUtilityClass2("JoyListItem", slot);
}
var listItemClasses = generateUtilityClasses2("JoyListItem", ["root", "startAction", "endAction", "nested", "nesting", "sticky", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantSoft", "variantOutlined", "variantSolid"]);
var listItemClasses_default = listItemClasses;

// node_modules/@mui/joy/ListSubheader/ListSubheaderContext.js
var React86 = __toESM(require_react());
var ListSubheaderDispatch = React86.createContext(void 0);
var ListSubheaderContext_default = ListSubheaderDispatch;

// node_modules/@mui/joy/ListItem/ListItem.js
var import_jsx_runtime82 = __toESM(require_jsx_runtime());
var import_jsx_runtime83 = __toESM(require_jsx_runtime());
var _excluded55 = ["component", "className", "children", "nested", "sticky", "variant", "color", "startAction", "endAction", "role"];
var useUtilityClasses42 = (ownerState) => {
  const {
    sticky,
    nested,
    nesting,
    variant,
    color
  } = ownerState;
  const slots = {
    root: ["root", nested && "nested", nesting && "nesting", sticky && "sticky", color && `color${capitalize(color)}`, variant && `variant${capitalize(variant)}`],
    startAction: ["startAction"],
    endAction: ["endAction"]
  };
  return composeClasses(slots, getListItemUtilityClass, {});
};
var ListItemRoot = styled_default("li", {
  name: "JoyListItem",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  return [
    !ownerState.nested && {
      "--List-itemButton-marginInline": `calc(-1 * var(--List-item-paddingLeft)) calc(-1 * var(--List-item-paddingRight))`,
      "--List-itemButton-marginBlock": "calc(-1 * var(--List-item-paddingY))",
      alignItems: "center",
      marginInline: "var(--List-item-marginInline)"
    },
    ownerState.nested && {
      "--NestedList-marginRight": "calc(-1 * var(--List-item-paddingRight))",
      "--NestedList-marginLeft": "calc(-1 * var(--List-item-paddingLeft))",
      "--NestedList-item-paddingLeft": `calc(var(--List-item-paddingLeft) + var(--List-nestedInsetStart))`,
      "--List-itemButton-marginBlock": "0px",
      "--List-itemButton-marginInline": "calc(-1 * var(--List-item-paddingLeft)) calc(-1 * var(--List-item-paddingRight))",
      "--List-item-marginInline": "calc(-1 * var(--List-item-paddingLeft)) calc(-1 * var(--List-item-paddingRight))",
      flexDirection: "column"
    },
    _extends({
      "--internal-action-radius": "calc(var(--List-item-radius) - var(--variant-borderWidth, 0px))"
    }, ownerState.startAction && {
      "--internal-startActionWidth": "2rem"
    }, ownerState.endAction && {
      "--internal-endActionWidth": "2.5rem"
    }, {
      boxSizing: "border-box",
      borderRadius: "var(--List-item-radius)",
      display: "flex",
      flex: "none",
      position: "relative",
      paddingBlockStart: ownerState.nested ? 0 : "var(--List-item-paddingY)",
      paddingBlockEnd: ownerState.nested ? 0 : "var(--List-item-paddingY)",
      paddingInlineStart: "var(--List-item-paddingLeft)",
      paddingInlineEnd: "var(--List-item-paddingRight)"
    }, ownerState["data-first-child"] === void 0 && _extends({}, ownerState.row ? {
      marginInlineStart: "var(--List-gap)"
    } : {
      marginBlockStart: "var(--List-gap)"
    }), ownerState.row && ownerState.wrap && {
      marginInlineStart: "var(--List-gap)",
      marginBlockStart: "var(--List-gap)"
    }, {
      minBlockSize: "var(--List-item-minHeight)",
      fontSize: "var(--List-item-fontSize)",
      fontFamily: theme.vars.fontFamily.body
    }, ownerState.sticky && {
      position: "sticky",
      top: "var(--List-item-stickyTop, 0px)",
      zIndex: 1,
      background: "var(--List-item-stickyBackground)"
    }),
    (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]
  ];
});
var ListItemStartAction = styled_default("div", {
  name: "JoyListItem",
  slot: "StartAction",
  overridesResolver: (props, styles2) => styles2.startAction
})(({
  ownerState
}) => ({
  display: "inherit",
  position: "absolute",
  top: ownerState.nested ? "calc(var(--List-item-minHeight) / 2)" : "50%",
  left: 0,
  transform: "translate(var(--List-item-startActionTranslateX), -50%)",
  zIndex: 1
}));
var ListItemEndAction = styled_default("div", {
  name: "JoyListItem",
  slot: "StartAction",
  overridesResolver: (props, styles2) => styles2.startAction
})(({
  ownerState
}) => ({
  display: "inherit",
  position: "absolute",
  top: ownerState.nested ? "calc(var(--List-item-minHeight) / 2)" : "50%",
  right: 0,
  transform: "translate(var(--List-item-endActionTranslateX), -50%)"
}));
var ListItem = React87.forwardRef(function ListItem2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyListItem"
  });
  const menuContext = React87.useContext(MenuUnstyledContext_default);
  const listComponent = React87.useContext(ComponentListContext_default);
  const row = React87.useContext(RowListContext_default);
  const wrap = React87.useContext(WrapListContext_default);
  const nesting = React87.useContext(NestedListContext_default);
  const {
    component: componentProp,
    className,
    children,
    nested = false,
    sticky = false,
    variant = "plain",
    color = "neutral",
    startAction,
    endAction,
    role: roleProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded55);
  const [subheaderId, setSubheaderId] = React87.useState("");
  const [listElement, listRole] = (listComponent == null ? void 0 : listComponent.split(":")) || ["", ""];
  const component = componentProp || (listElement && !listElement.match(/^(ul|ol|menu)$/) ? "div" : void 0);
  let role = menuContext ? "none" : void 0;
  if (listComponent) {
    role = {
      menu: "none",
      menubar: "none",
      group: "presentation"
    }[listRole];
  }
  if (roleProp) {
    role = roleProp;
  }
  const ownerState = _extends({
    sticky,
    startAction,
    endAction,
    row,
    wrap,
    variant,
    color,
    nesting,
    nested,
    component,
    role
  }, props);
  const classes = useUtilityClasses42(ownerState);
  return (0, import_jsx_runtime82.jsx)(ListSubheaderContext_default.Provider, {
    value: setSubheaderId,
    children: (0, import_jsx_runtime82.jsx)(NestedListContext_default.Provider, {
      value: nested ? subheaderId || true : false,
      children: (0, import_jsx_runtime83.jsxs)(ListItemRoot, _extends({
        ref,
        as: component,
        className: clsx_m_default(classes.root, className),
        ownerState,
        role
      }, other, {
        children: [startAction && (0, import_jsx_runtime82.jsx)(ListItemStartAction, {
          className: classes.startAction,
          ownerState,
          children: startAction
        }), React87.Children.map(children, (child, index) => React87.isValidElement(child) ? React87.cloneElement(child, _extends({}, index === 0 && {
          "data-first-child": ""
        }, isMuiElement(child, ["ListItem"]) && {
          component: child.props.component || "div"
        })) : child), endAction && (0, import_jsx_runtime82.jsx)(ListItemEndAction, {
          className: classes.endAction,
          ownerState,
          children: endAction
        })]
      }))
    })
  });
});
true ? ListItem.propTypes = {
  children: import_prop_types54.default.node,
  className: import_prop_types54.default.string,
  color: import_prop_types54.default.oneOfType([import_prop_types54.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types54.default.string]),
  component: import_prop_types54.default.elementType,
  endAction: import_prop_types54.default.node,
  nested: import_prop_types54.default.bool,
  role: import_prop_types54.default.string,
  startAction: import_prop_types54.default.node,
  sticky: import_prop_types54.default.bool,
  sx: import_prop_types54.default.oneOfType([import_prop_types54.default.arrayOf(import_prop_types54.default.oneOfType([import_prop_types54.default.func, import_prop_types54.default.object, import_prop_types54.default.bool])), import_prop_types54.default.func, import_prop_types54.default.object]),
  variant: import_prop_types54.default.oneOfType([import_prop_types54.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types54.default.string])
} : void 0;
ListItem.muiName = "ListItem";
var ListItem_default = ListItem;

// node_modules/@mui/joy/ListItemButton/ListItemButton.js
init_objectWithoutPropertiesLoose();
init_extends();
var React89 = __toESM(require_react());
var import_prop_types55 = __toESM(require_prop_types());
init_clsx_m();
init_esm();

// node_modules/@mui/joy/ListItemButton/listItemButtonClasses.js
function getListItemButtonUtilityClass(slot) {
  return generateUtilityClass2("JoyListItemButton", slot);
}
var listItemButtonClasses = generateUtilityClasses2("JoyListItemButton", ["root", "horizontal", "vertical", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "colorContext", "focusVisible", "disabled", "selected", "variantPlain", "variantSoft", "variantOutlined", "variantSolid"]);
var listItemButtonClasses_default = listItemButtonClasses;

// node_modules/@mui/joy/ListItemButton/ListItemButtonOrientationContext.js
var React88 = __toESM(require_react());
var ListItemButtonOrientationContext = React88.createContext("horizontal");
var ListItemButtonOrientationContext_default = ListItemButtonOrientationContext;

// node_modules/@mui/joy/ListItemButton/ListItemButton.js
var import_jsx_runtime84 = __toESM(require_jsx_runtime());
var _excluded56 = ["children", "className", "action", "component", "orientation", "role", "selected", "color", "variant"];
var useUtilityClasses43 = (ownerState) => {
  const {
    color,
    disabled,
    focusVisible,
    focusVisibleClassName,
    selected,
    variant
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", color && `color${capitalize(color)}`, selected && "selected", variant && `variant${capitalize(variant)}`]
  };
  const composedClasses = composeClasses(slots, getListItemButtonUtilityClass, {});
  if (focusVisible && focusVisibleClassName) {
    composedClasses.root += ` ${focusVisibleClassName}`;
  }
  return composedClasses;
};
var ListItemButtonRoot = styled_default("div", {
  name: "JoyListItemButton",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette, _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;
  return [_extends({}, ownerState.selected && {
    "--List-decorator-color": "initial"
  }, ownerState.disabled && {
    "--List-decorator-color": (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette[`${ownerState.variant}DisabledColor`]
  }, {
    boxSizing: "border-box",
    position: "relative",
    display: "flex",
    flexDirection: ownerState.orientation === "vertical" ? "column" : "row",
    alignItems: "center",
    textAlign: "initial",
    textDecoration: "initial",
    backgroundColor: "initial",
    marginInline: "var(--List-itemButton-marginInline)",
    marginBlock: "var(--List-itemButton-marginBlock)"
  }, ownerState["data-first-child"] === void 0 && {
    marginInlineStart: ownerState.row ? "var(--List-gap)" : void 0,
    marginBlockStart: ownerState.row ? void 0 : "var(--List-gap)"
  }, {
    paddingBlock: "calc(var(--List-item-paddingY) - var(--variant-borderWidth))",
    paddingInlineStart: "calc(var(--List-item-paddingLeft) + var(--List-item-startActionWidth, var(--internal-startActionWidth, 0px)))",
    paddingInlineEnd: "calc(var(--List-item-paddingRight) + var(--List-item-endActionWidth, var(--internal-endActionWidth, 0px)))",
    minBlockSize: "var(--List-item-minHeight)",
    border: "none",
    borderRadius: "var(--List-item-radius)",
    flexGrow: ownerState.row ? 0 : 1,
    flexBasis: ownerState.row ? "auto" : "0%",
    flexShrink: 0,
    minInlineSize: 0,
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    fontSize: "var(--List-item-fontSize)",
    fontFamily: theme.vars.fontFamily.body
  }, ownerState.selected && {
    fontWeight: theme.vars.fontWeight.md
  }, {
    [theme.focus.selector]: theme.focus.default
  }), (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {
    "&:hover": (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color]
  }, {
    "&:active": (_theme$variants3 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants3[ownerState.color]
  }, {
    [`&.${listItemButtonClasses_default.disabled}`]: (_theme$variants4 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants4[ownerState.color]
  }];
});
var ListItemButton = React89.forwardRef(function ListItemButton2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyListItemButton"
  });
  const row = React89.useContext(RowListContext_default);
  const {
    children,
    className,
    action,
    component = "div",
    orientation = "horizontal",
    role,
    selected = false,
    color = selected ? "primary" : "neutral",
    variant = "plain"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded56);
  const buttonRef = React89.useRef(null);
  const handleRef = useForkRef(buttonRef, ref);
  const {
    focusVisible,
    setFocusVisible,
    getRootProps
  } = useButton(_extends({}, props, {
    ref: handleRef
  }));
  React89.useImperativeHandle(action, () => ({
    focusVisible: () => {
      var _buttonRef$current;
      setFocusVisible(true);
      (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();
    }
  }), [setFocusVisible]);
  const ownerState = _extends({}, props, {
    component,
    color,
    focusVisible,
    orientation,
    row,
    selected,
    variant
  });
  const classes = useUtilityClasses43(ownerState);
  const rootProps = getRootProps();
  return (0, import_jsx_runtime84.jsx)(ListItemButtonOrientationContext_default.Provider, {
    value: orientation,
    children: (0, import_jsx_runtime84.jsx)(ListItemButtonRoot, _extends({
      as: component,
      className: clsx_m_default(classes.root, className),
      ownerState
    }, other, rootProps, {
      role: role != null ? role : rootProps.role,
      children
    }))
  });
});
true ? ListItemButton.propTypes = {
  action: import_prop_types55.default.oneOfType([import_prop_types55.default.func, import_prop_types55.default.shape({
    current: import_prop_types55.default.shape({
      focusVisible: import_prop_types55.default.func.isRequired
    })
  })]),
  autoFocus: import_prop_types55.default.bool,
  children: import_prop_types55.default.node,
  classes: import_prop_types55.default.object,
  className: import_prop_types55.default.string,
  color: import_prop_types55.default.oneOfType([import_prop_types55.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types55.default.string]),
  component: import_prop_types55.default.elementType,
  disabled: import_prop_types55.default.bool,
  focusVisibleClassName: import_prop_types55.default.string,
  orientation: import_prop_types55.default.oneOf(["horizontal", "vertical"]),
  role: import_prop_types55.default.string,
  selected: import_prop_types55.default.bool,
  sx: import_prop_types55.default.oneOfType([import_prop_types55.default.arrayOf(import_prop_types55.default.oneOfType([import_prop_types55.default.func, import_prop_types55.default.object, import_prop_types55.default.bool])), import_prop_types55.default.func, import_prop_types55.default.object]),
  tabIndex: import_prop_types55.default.number,
  variant: import_prop_types55.default.oneOfType([import_prop_types55.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types55.default.string])
} : void 0;
var ListItemButton_default = ListItemButton;

// node_modules/@mui/joy/ListItemContent/ListItemContent.js
init_extends();
init_objectWithoutPropertiesLoose();
var React90 = __toESM(require_react());
var import_prop_types56 = __toESM(require_prop_types());
init_clsx_m();

// node_modules/@mui/joy/ListItemContent/listItemContentClasses.js
function getListItemContentUtilityClass(slot) {
  return generateUtilityClass2("JoyListItemContent", slot);
}
var listItemContentClasses = generateUtilityClasses2("JoyListItemContent", ["root"]);
var listItemContentClasses_default = listItemContentClasses;

// node_modules/@mui/joy/ListItemContent/ListItemContent.js
var import_jsx_runtime85 = __toESM(require_jsx_runtime());
var _excluded57 = ["component", "className", "children"];
var useUtilityClasses44 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getListItemContentUtilityClass, {});
};
var ListItemContentRoot = styled_default("div", {
  name: "JoyListItemContent",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})({
  flex: "1 1 auto",
  minWidth: 0
});
var ListItemContent = React90.forwardRef(function ListItemContent2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyListItemContent"
  });
  const {
    component,
    className,
    children
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded57);
  const ownerState = _extends({}, props);
  const classes = useUtilityClasses44();
  return (0, import_jsx_runtime85.jsx)(ListItemContentRoot, _extends({
    ref,
    as: component,
    className: clsx_m_default(classes.root, className),
    ownerState
  }, other, {
    children
  }));
});
true ? ListItemContent.propTypes = {
  children: import_prop_types56.default.node,
  classes: import_prop_types56.default.object,
  className: import_prop_types56.default.string,
  component: import_prop_types56.default.elementType,
  sx: import_prop_types56.default.oneOfType([import_prop_types56.default.arrayOf(import_prop_types56.default.oneOfType([import_prop_types56.default.func, import_prop_types56.default.object, import_prop_types56.default.bool])), import_prop_types56.default.func, import_prop_types56.default.object])
} : void 0;
var ListItemContent_default = ListItemContent;

// node_modules/@mui/joy/ListItemDecorator/ListItemDecorator.js
init_objectWithoutPropertiesLoose();
init_extends();
var React91 = __toESM(require_react());
var import_prop_types57 = __toESM(require_prop_types());
init_clsx_m();

// node_modules/@mui/joy/ListItemDecorator/listItemDecoratorClasses.js
function getListItemDecoratorUtilityClass(slot) {
  return generateUtilityClass2("JoyListItemDecorator", slot);
}
var listItemDecoratorClasses = generateUtilityClasses2("JoyListItemDecorator", ["root"]);
var listItemDecoratorClasses_default = listItemDecoratorClasses;

// node_modules/@mui/joy/ListItemDecorator/ListItemDecorator.js
var import_jsx_runtime86 = __toESM(require_jsx_runtime());
var _excluded58 = ["component", "className", "children"];
var useUtilityClasses45 = () => {
  const slots = {
    root: ["root"]
  };
  return composeClasses(slots, getListItemDecoratorUtilityClass, {});
};
var ListItemDecoratorRoot = styled_default("span", {
  name: "JoyListItemDecorator",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  ownerState
}) => _extends({
  boxSizing: "border-box",
  display: "inline-flex",
  alignItems: "center",
  color: `var(--List-decorator-color)`
}, ownerState.parentOrientation === "horizontal" ? {
  minInlineSize: "var(--List-decorator-size)"
} : {
  minBlockSize: "var(--List-decorator-size)"
}));
var ListItemDecorator = React91.forwardRef(function ListItemDecorator2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyListItemDecorator"
  });
  const {
    component,
    className,
    children
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded58);
  const parentOrientation = React91.useContext(ListItemButtonOrientationContext_default);
  const ownerState = _extends({
    parentOrientation
  }, props);
  const classes = useUtilityClasses45();
  return (0, import_jsx_runtime86.jsx)(ListItemDecoratorRoot, _extends({
    ref,
    as: component,
    className: clsx_m_default(classes.root, className),
    ownerState
  }, other, {
    children
  }));
});
true ? ListItemDecorator.propTypes = {
  children: import_prop_types57.default.node,
  classes: import_prop_types57.default.object,
  className: import_prop_types57.default.string,
  component: import_prop_types57.default.elementType,
  sx: import_prop_types57.default.oneOfType([import_prop_types57.default.arrayOf(import_prop_types57.default.oneOfType([import_prop_types57.default.func, import_prop_types57.default.object, import_prop_types57.default.bool])), import_prop_types57.default.func, import_prop_types57.default.object])
} : void 0;
var ListItemDecorator_default = ListItemDecorator;

// node_modules/@mui/joy/Menu/Menu.js
init_objectWithoutPropertiesLoose();
init_extends();
var React92 = __toESM(require_react());
var import_prop_types58 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Menu/menuClasses.js
function getMenuUtilityClass(slot) {
  return generateUtilityClass2("JoyMenu", slot);
}
var menuClasses = generateUtilityClasses2("JoyMenu", ["root", "expanded", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg"]);
var menuClasses_default = menuClasses;

// node_modules/@mui/joy/Menu/Menu.js
var import_jsx_runtime87 = __toESM(require_jsx_runtime());
var _excluded59 = ["actions", "anchorEl", "children", "component", "color", "disablePortal", "keepMounted", "id", "onClose", "open", "modifiers", "variant", "size"];
var useUtilityClasses46 = (ownerState) => {
  const {
    open,
    variant,
    color,
    size
  } = ownerState;
  const slots = {
    root: ["root", open && "expanded", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getMenuUtilityClass, {});
};
var MenuRoot = styled_default(ListRoot, {
  name: "JoyMenu",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  const variantStyle = (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color];
  return _extends({
    "--List-radius": theme.vars.radius.sm,
    "--List-item-stickyBackground": (variantStyle == null ? void 0 : variantStyle.backgroundColor) || (variantStyle == null ? void 0 : variantStyle.background) || theme.vars.palette.background.surface,
    "--List-item-stickyTop": "calc(var(--List-padding, var(--List-divider-gap)) * -1)"
  }, scopedVariables, {
    boxShadow: theme.vars.shadow.md,
    overflow: "auto",
    zIndex: 1300
  }, !(variantStyle != null && variantStyle.backgroundColor) && {
    backgroundColor: theme.vars.palette.background.surface
  });
});
var Menu = React92.forwardRef(function Menu2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyMenu"
  });
  const {
    actions,
    anchorEl,
    children,
    component,
    color = "neutral",
    disablePortal = false,
    keepMounted = false,
    id,
    onClose,
    open = false,
    modifiers,
    variant = "outlined",
    size = "md"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded59);
  const cachedModifiers = React92.useMemo(() => [{
    name: "offset",
    options: {
      offset: [0, 4]
    }
  }, ...modifiers || []], [modifiers]);
  const {
    registerItem,
    unregisterItem,
    getListboxProps,
    getItemProps,
    getItemState,
    highlightFirstItem,
    highlightLastItem
  } = useMenu({
    open,
    onClose,
    listboxId: id
  });
  React92.useImperativeHandle(actions, () => ({
    highlightFirstItem,
    highlightLastItem
  }), [highlightFirstItem, highlightLastItem]);
  const ownerState = _extends({}, props, {
    disablePortal,
    color,
    variant,
    size,
    modifiers,
    open,
    nesting: false,
    row: false
  });
  const classes = useUtilityClasses46(ownerState);
  const rootProps = useSlotProps({
    elementType: MenuRoot,
    externalForwardedProps: other,
    getSlotProps: getListboxProps,
    externalSlotProps: {},
    additionalProps: {
      anchorEl,
      open,
      disablePortal,
      keepMounted,
      ref,
      component: MenuRoot,
      as: component,
      modifiers: cachedModifiers
    },
    className: classes.root,
    ownerState
  });
  const contextValue = {
    registerItem,
    unregisterItem,
    getItemState,
    getItemProps,
    open
  };
  return (0, import_jsx_runtime87.jsx)(PopperUnstyled_default, _extends({}, rootProps, {
    children: (0, import_jsx_runtime87.jsx)(MenuUnstyledContext_default.Provider, {
      value: contextValue,
      children: (0, import_jsx_runtime87.jsx)(ListProvider_default, {
        nested: true,
        children
      })
    })
  }));
});
true ? Menu.propTypes = {
  actions: refType_default,
  anchorEl: import_prop_types58.default.oneOfType([HTMLElementType, import_prop_types58.default.func]),
  children: import_prop_types58.default.node,
  color: import_prop_types58.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]),
  component: import_prop_types58.default.elementType,
  disablePortal: import_prop_types58.default.bool,
  id: import_prop_types58.default.string,
  keepMounted: import_prop_types58.default.bool,
  modifiers: import_prop_types58.default.arrayOf(import_prop_types58.default.shape({
    data: import_prop_types58.default.object,
    effect: import_prop_types58.default.func,
    enabled: import_prop_types58.default.bool,
    fn: import_prop_types58.default.func,
    name: import_prop_types58.default.any,
    options: import_prop_types58.default.object,
    phase: import_prop_types58.default.oneOf(["afterMain", "afterRead", "afterWrite", "beforeMain", "beforeRead", "beforeWrite", "main", "read", "write"]),
    requires: import_prop_types58.default.arrayOf(import_prop_types58.default.string),
    requiresIfExists: import_prop_types58.default.arrayOf(import_prop_types58.default.string)
  })),
  onClose: import_prop_types58.default.func,
  open: import_prop_types58.default.bool,
  size: import_prop_types58.default.oneOfType([import_prop_types58.default.oneOf(["sm", "md", "lg"]), import_prop_types58.default.string]),
  sx: import_prop_types58.default.oneOfType([import_prop_types58.default.arrayOf(import_prop_types58.default.oneOfType([import_prop_types58.default.func, import_prop_types58.default.object, import_prop_types58.default.bool])), import_prop_types58.default.func, import_prop_types58.default.object]),
  variant: import_prop_types58.default.oneOfType([import_prop_types58.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types58.default.string])
} : void 0;
var Menu_default = Menu;

// node_modules/@mui/joy/MenuItem/MenuItem.js
init_extends();
init_objectWithoutPropertiesLoose();
var React93 = __toESM(require_react());
var import_prop_types59 = __toESM(require_prop_types());

// node_modules/@mui/joy/MenuItem/menuItemClasses.js
function getMenuItemUtilityClass(slot) {
  return generateUtilityClass2("JoyMenuItem", slot);
}
var menuItemClasses = generateUtilityClasses2("JoyMenuItem", ["root", "focusVisible", "disabled", "selected"]);
var menuItemClasses_default = menuItemClasses;

// node_modules/@mui/joy/MenuItem/MenuItem.js
var import_jsx_runtime88 = __toESM(require_jsx_runtime());
var _excluded60 = ["children", "disabled", "component", "selected", "color", "variant"];
var useUtilityClasses47 = (ownerState) => {
  const {
    focusVisible,
    disabled,
    selected
  } = ownerState;
  const slots = {
    root: ["root", focusVisible && "focusVisible", disabled && "disabled", selected && "selected"]
  };
  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, {});
  return composedClasses;
};
var MenuItemRoot = styled_default(ListItemButtonRoot, {
  name: "JoyMenuItem",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})({});
var MenuItem = React93.forwardRef(function MenuItem2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyMenuItem"
  });
  const row = React93.useContext(RowListContext_default);
  const {
    children,
    disabled: disabledProp = false,
    component = "li",
    selected = false,
    color = selected ? "primary" : "neutral",
    variant = "plain"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded60);
  const {
    getRootProps,
    disabled,
    focusVisible
  } = useMenuItem({
    disabled: disabledProp,
    ref
  });
  const ownerState = _extends({}, props, {
    component,
    color,
    disabled,
    focusVisible,
    selected,
    row,
    variant
  });
  const classes = useUtilityClasses47(ownerState);
  const rootProps = useSlotProps({
    elementType: MenuItemRoot,
    getSlotProps: getRootProps,
    externalSlotProps: {},
    additionalProps: {
      as: component
    },
    externalForwardedProps: other,
    className: classes.root,
    ownerState
  });
  return (0, import_jsx_runtime88.jsx)(MenuItemRoot, _extends({}, rootProps, {
    children
  }));
});
true ? MenuItem.propTypes = {
  children: import_prop_types59.default.node,
  color: import_prop_types59.default.oneOfType([import_prop_types59.default.oneOf(["context", "danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types59.default.string]),
  component: import_prop_types59.default.elementType,
  disabled: import_prop_types59.default.bool,
  selected: import_prop_types59.default.bool,
  variant: import_prop_types59.default.oneOfType([import_prop_types59.default.oneOf(["contained", "light", "outlined", "text"]), import_prop_types59.default.string])
} : void 0;
var MenuItem_default = MenuItem;

// node_modules/@mui/joy/MenuList/MenuList.js
init_objectWithoutPropertiesLoose();
init_extends();
var React94 = __toESM(require_react());
var import_prop_types60 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/MenuList/menuListClasses.js
function getMenuListUtilityClass(slot) {
  return generateUtilityClass2("JoyMenuList", slot);
}
var menuClasses2 = generateUtilityClasses2("JoyMenuList", ["root", "nested", "sizeSm", "sizeMd", "sizeLg", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var menuListClasses_default = menuClasses2;

// node_modules/@mui/joy/MenuList/MenuList.js
var import_jsx_runtime89 = __toESM(require_jsx_runtime());
var _excluded61 = ["actions", "id", "component", "children", "size", "variant", "color"];
var useUtilityClasses48 = (ownerState) => {
  const {
    variant,
    color,
    size
  } = ownerState;
  const slots = {
    root: ["root", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getMenuListUtilityClass, {});
};
var MenuListRoot = styled_default(ListRoot, {
  name: "MuiMenuList",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  const variantStyle = (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color];
  return _extends({
    "--List-radius": theme.vars.radius.sm,
    "--List-item-stickyBackground": (variantStyle == null ? void 0 : variantStyle.backgroundColor) || (variantStyle == null ? void 0 : variantStyle.background) || theme.vars.palette.background.surface,
    "--List-item-stickyTop": "calc(var(--List-padding, var(--List-divider-gap)) * -1)"
  }, scopedVariables, {
    overflow: "auto"
  }, !(variantStyle != null && variantStyle.backgroundColor) && {
    backgroundColor: theme.vars.palette.background.surface
  });
});
var MenuList = React94.forwardRef(function MenuList2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "MuiMenuList"
  });
  const {
    actions,
    id: idProp,
    component,
    children,
    size = "md",
    variant = "outlined",
    color = "neutral"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded61);
  const {
    registerItem,
    unregisterItem,
    getListboxProps,
    getItemProps,
    getItemState,
    highlightFirstItem,
    highlightLastItem
  } = useMenu({
    listboxRef: ref,
    listboxId: idProp
  });
  React94.useImperativeHandle(actions, () => ({
    highlightFirstItem,
    highlightLastItem
  }), [highlightFirstItem, highlightLastItem]);
  const ownerState = _extends({}, props, {
    variant,
    color,
    size,
    nesting: false,
    row: false
  });
  const classes = useUtilityClasses48(ownerState);
  const listboxProps = useSlotProps({
    elementType: MenuListRoot,
    getSlotProps: getListboxProps,
    externalSlotProps: {},
    externalForwardedProps: other,
    additionalProps: {
      as: component
    },
    ownerState,
    className: classes.root
  });
  const contextValue = {
    registerItem,
    unregisterItem,
    getItemState,
    getItemProps,
    getListboxProps,
    open: true
  };
  return (0, import_jsx_runtime89.jsx)(MenuListRoot, _extends({}, listboxProps, {
    children: (0, import_jsx_runtime89.jsx)(MenuUnstyledContext_default.Provider, {
      value: contextValue,
      children: (0, import_jsx_runtime89.jsx)(ListProvider_default, {
        nested: true,
        children
      })
    })
  }));
});
true ? MenuList.propTypes = {
  actions: import_prop_types60.default.oneOfType([import_prop_types60.default.func, import_prop_types60.default.shape({
    current: import_prop_types60.default.shape({
      highlightFirstItem: import_prop_types60.default.func.isRequired,
      highlightLastItem: import_prop_types60.default.func.isRequired
    })
  })]),
  children: import_prop_types60.default.node,
  color: import_prop_types60.default.oneOfType([import_prop_types60.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types60.default.string]),
  component: import_prop_types60.default.elementType,
  id: import_prop_types60.default.string,
  size: import_prop_types60.default.oneOfType([import_prop_types60.default.oneOf(["sm", "md", "lg"]), import_prop_types60.default.string]),
  sx: import_prop_types60.default.oneOfType([import_prop_types60.default.arrayOf(import_prop_types60.default.oneOfType([import_prop_types60.default.func, import_prop_types60.default.object, import_prop_types60.default.bool])), import_prop_types60.default.func, import_prop_types60.default.object]),
  variant: import_prop_types60.default.oneOfType([import_prop_types60.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types60.default.string])
} : void 0;
var MenuList_default = MenuList;

// node_modules/@mui/joy/Modal/Modal.js
init_objectWithoutPropertiesLoose();
init_extends();
var React96 = __toESM(require_react());
var import_prop_types61 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Modal/modalClasses.js
function getModalUtilityClass2(slot) {
  return generateUtilityClass2("JoyModal", slot);
}
var modalClasses = generateUtilityClasses2("JoyModal", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var modalClasses_default = modalClasses;

// node_modules/@mui/joy/Modal/CloseModalContext.js
var React95 = __toESM(require_react());
var CloseModalContext = React95.createContext(void 0);
var CloseModalContext_default = CloseModalContext;

// node_modules/@mui/joy/Modal/Modal.js
var import_jsx_runtime90 = __toESM(require_jsx_runtime());
var import_jsx_runtime91 = __toESM(require_jsx_runtime());
var _excluded62 = ["children", "component", "componentsProps", "container", "disableAutoFocus", "disableEnforceFocus", "disableEscapeKeyDown", "disablePortal", "disableRestoreFocus", "disableScrollLock", "hideBackdrop", "keepMounted", "onClose", "onKeyDown", "open"];
function ariaHidden2(element, show) {
  if (show) {
    element.setAttribute("aria-hidden", "true");
  } else {
    element.removeAttribute("aria-hidden");
  }
}
var useUtilityClasses49 = (ownerState) => {
  const {
    open
  } = ownerState;
  const slots = {
    root: ["root", !open && "hidden"]
  };
  return composeClasses(slots, getModalUtilityClass2, {});
};
function getContainer3(container) {
  return typeof container === "function" ? container() : container;
}
var manager = new ModalManager();
var ModalRoot = styled_default("div", {
  name: "JoyModal",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  ownerState
}) => _extends({
  position: "fixed",
  zIndex: 9999,
  right: 0,
  bottom: 0,
  top: 0,
  left: 0
}, !ownerState.open && {
  visibility: "hidden"
}));
var ModalBackdrop = styled_default("div", {
  name: "JoyModal",
  slot: "Backdrop",
  overridesResolver: (props, styles2) => styles2.backdrop
})(({
  theme,
  ownerState
}) => _extends({
  zIndex: -1,
  position: "fixed",
  right: 0,
  bottom: 0,
  top: 0,
  left: 0,
  backgroundColor: theme.vars.palette.background.backdrop,
  WebkitTapHighlightColor: "transparent"
}, ownerState.open && {
  backdropFilter: "blur(8px)"
}));
var ModalUnstyled3 = React96.forwardRef(function ModalUnstyled4(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyModal"
  });
  const {
    children,
    component = "div",
    componentsProps = {},
    container,
    disableAutoFocus = false,
    disableEnforceFocus = false,
    disableEscapeKeyDown = false,
    disablePortal = false,
    disableRestoreFocus = false,
    disableScrollLock = false,
    hideBackdrop = false,
    keepMounted = false,
    onClose,
    onKeyDown,
    open
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded62);
  const modal = React96.useRef({});
  const mountNodeRef = React96.useRef(null);
  const modalRef = React96.useRef(null);
  const handleRef = useForkRef(modalRef, ref);
  let ariaHiddenProp = true;
  if (props["aria-hidden"] === "false" || typeof props["aria-hidden"] === "boolean" && !props["aria-hidden"]) {
    ariaHiddenProp = false;
  }
  const getDoc = () => ownerDocument(mountNodeRef.current);
  const getModal = () => {
    modal.current.modalRef = modalRef.current;
    modal.current.mount = mountNodeRef.current;
    return modal.current;
  };
  const handleMounted = () => {
    manager.mount(getModal(), {
      disableScrollLock
    });
    if (modalRef.current) {
      modalRef.current.scrollTop = 0;
    }
  };
  const handleOpen = useEventCallback(() => {
    const resolvedContainer = getContainer3(container) || getDoc().body;
    manager.add(getModal(), resolvedContainer);
    if (modalRef.current) {
      handleMounted();
    }
  });
  const isTopModal = () => manager.isTopModal(getModal());
  const handlePortalRef = useEventCallback((node) => {
    mountNodeRef.current = node;
    if (!node) {
      return;
    }
    if (open && isTopModal()) {
      handleMounted();
    } else if (modalRef.current) {
      ariaHidden2(modalRef.current, ariaHiddenProp);
    }
  });
  const handleClose = React96.useCallback(() => {
    manager.remove(getModal(), ariaHiddenProp);
  }, [ariaHiddenProp]);
  React96.useEffect(() => {
    return () => {
      handleClose();
    };
  }, [handleClose]);
  React96.useEffect(() => {
    if (open) {
      handleOpen();
    } else {
      handleClose();
    }
  }, [open, handleClose, handleOpen]);
  const ownerState = _extends({}, props, {
    disableAutoFocus,
    disableEnforceFocus,
    disableEscapeKeyDown,
    disablePortal,
    disableRestoreFocus,
    disableScrollLock,
    hideBackdrop,
    keepMounted
  });
  const classes = useUtilityClasses49(ownerState);
  const handleBackdropClick = (event) => {
    if (event.target !== event.currentTarget) {
      return;
    }
    if (onClose) {
      onClose(event, "backdropClick");
    }
  };
  const handleKeyDown2 = (event) => {
    if (onKeyDown) {
      onKeyDown(event);
    }
    if (event.key !== "Escape" || !isTopModal()) {
      return;
    }
    if (!disableEscapeKeyDown) {
      event.stopPropagation();
      if (onClose) {
        onClose(event, "escapeKeyDown");
      }
    }
  };
  const rootProps = useSlotProps({
    elementType: ModalRoot,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      as: component,
      ref: handleRef,
      role: "presentation",
      onKeyDown: handleKeyDown2
    },
    className: classes.root,
    ownerState
  });
  const backdropProps = useSlotProps({
    elementType: ModalBackdrop,
    externalSlotProps: componentsProps.backdrop,
    additionalProps: {
      "aria-hidden": true,
      onClick: handleBackdropClick,
      open
    },
    ownerState
  });
  if (!keepMounted && !open) {
    return null;
  }
  return (0, import_jsx_runtime90.jsx)(CloseModalContext_default.Provider, {
    value: onClose,
    children: (0, import_jsx_runtime90.jsx)(Portal_default, {
      ref: handlePortalRef,
      container,
      disablePortal,
      children: (0, import_jsx_runtime91.jsxs)(ModalRoot, _extends({}, rootProps, {
        children: [!hideBackdrop ? (0, import_jsx_runtime90.jsx)(ModalBackdrop, _extends({}, backdropProps)) : null, (0, import_jsx_runtime90.jsx)(FocusTrap_default, {
          disableEnforceFocus,
          disableAutoFocus,
          disableRestoreFocus,
          isEnabled: isTopModal,
          open,
          children: React96.Children.only(children) && React96.cloneElement(children, _extends({}, children.props.tabIndex === void 0 && {
            tabIndex: -1
          }))
        })]
      }))
    })
  });
});
true ? ModalUnstyled3.propTypes = {
  children: elementAcceptingRef_default.isRequired,
  classes: import_prop_types61.default.object,
  closeAfterTransition: import_prop_types61.default.bool,
  component: import_prop_types61.default.elementType,
  components: import_prop_types61.default.shape({
    Backdrop: import_prop_types61.default.elementType,
    Root: import_prop_types61.default.elementType
  }),
  componentsProps: import_prop_types61.default.shape({
    backdrop: import_prop_types61.default.oneOfType([import_prop_types61.default.func, import_prop_types61.default.object]),
    root: import_prop_types61.default.oneOfType([import_prop_types61.default.func, import_prop_types61.default.object])
  }),
  container: import_prop_types61.default.oneOfType([HTMLElementType, import_prop_types61.default.func]),
  disableAutoFocus: import_prop_types61.default.bool,
  disableEnforceFocus: import_prop_types61.default.bool,
  disableEscapeKeyDown: import_prop_types61.default.bool,
  disablePortal: import_prop_types61.default.bool,
  disableRestoreFocus: import_prop_types61.default.bool,
  disableScrollLock: import_prop_types61.default.bool,
  hideBackdrop: import_prop_types61.default.bool,
  keepMounted: import_prop_types61.default.bool,
  onBackdropClick: import_prop_types61.default.func,
  onClose: import_prop_types61.default.func,
  onKeyDown: import_prop_types61.default.func,
  open: import_prop_types61.default.bool.isRequired
} : void 0;
var Modal_default = ModalUnstyled3;

// node_modules/@mui/joy/ModalClose/ModalClose.js
init_objectWithoutPropertiesLoose();
init_extends();
var React99 = __toESM(require_react());
var import_prop_types62 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/ModalClose/modalCloseClasses.js
function getModalCloseUtilityClass(slot) {
  return generateUtilityClass2("JoyModalClose", slot);
}
var modalCloseClasses = generateUtilityClasses2("JoyModalClose", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg"]);
var modalCloseClasses_default = modalCloseClasses;

// node_modules/@mui/joy/ModalDialog/ModalDialogSizeContext.js
var React97 = __toESM(require_react());
var ModalDialogSizeContext = React97.createContext(void 0);
var ModalDialogSizeContext_default = ModalDialogSizeContext;

// node_modules/@mui/joy/ModalDialog/ModalDialogVariantColorContext.js
var React98 = __toESM(require_react());
var ModalDialogVariantColorContext = React98.createContext(void 0);
var ModalDialogVariantColorContext_default = ModalDialogVariantColorContext;

// node_modules/@mui/joy/ModalClose/ModalClose.js
var import_jsx_runtime92 = __toESM(require_jsx_runtime());
var _CloseIcon;
var _excluded63 = ["component", "color", "variant", "size", "onClick"];
var useUtilityClasses50 = (ownerState) => {
  const {
    variant,
    color,
    disabled,
    focusVisible,
    size
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getModalCloseUtilityClass, {});
};
var ModalCloseRoot = styled_default(IconButtonRoot, {
  name: "JoyModalClose",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  ownerState,
  theme
}) => {
  var _theme$variants, _theme$variants2;
  return _extends({}, ownerState.size === "sm" && {
    "--IconButton-size": "28px"
  }, ownerState.size === "md" && {
    "--IconButton-size": "36px"
  }, ownerState.size === "lg" && {
    "--IconButton-size": "40px"
  }, {
    position: "absolute",
    top: `var(--ModalClose-inset, ${theme.spacing(1)})`,
    right: `var(--ModalClose-inset, ${theme.spacing(1)})`,
    borderRadius: `var(--ModalClose-radius, ${theme.vars.radius.sm})`
  }, !((_theme$variants = theme.variants[ownerState.variant]) != null && (_theme$variants2 = _theme$variants[ownerState.color]) != null && _theme$variants2.backgroundColor) && {
    color: theme.vars.palette.text.secondary
  });
});
var modalDialogVariantMapping = {
  plain: "plain",
  outlined: "plain",
  soft: "soft",
  solid: "solid"
};
var ModalClose = React99.forwardRef(function ModalClose2(inProps, ref) {
  var _ref, _inProps$color, _ref2, _inProps$variant, _ref3, _inProps$size;
  const props = useThemeProps2({
    props: inProps,
    name: "JoyModalClose"
  });
  const {
    component = "button",
    color: colorProp = "neutral",
    variant: variantProp = "plain",
    size: sizeProp = "md",
    onClick
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded63);
  const closeModalContext = React99.useContext(CloseModalContext_default);
  const modalDialogVariantColor = React99.useContext(ModalDialogVariantColorContext_default);
  const color = (_ref = (_inProps$color = inProps.color) != null ? _inProps$color : modalDialogVariantColor == null ? void 0 : modalDialogVariantColor.color) != null ? _ref : colorProp;
  const variant = (_ref2 = (_inProps$variant = inProps.variant) != null ? _inProps$variant : modalDialogVariantMapping[modalDialogVariantColor == null ? void 0 : modalDialogVariantColor.variant]) != null ? _ref2 : variantProp;
  const modalDialogSize = React99.useContext(ModalDialogSizeContext_default);
  const size = (_ref3 = (_inProps$size = inProps.size) != null ? _inProps$size : modalDialogSize) != null ? _ref3 : sizeProp;
  const {
    focusVisible,
    getRootProps
  } = useButton(_extends({}, props, {
    ref
  }));
  const ownerState = _extends({}, props, {
    color,
    component,
    variant,
    size,
    focusVisible
  });
  const classes = useUtilityClasses50(ownerState);
  const rootProps = useSlotProps({
    elementType: ModalCloseRoot,
    getSlotProps: getRootProps,
    externalSlotProps: _extends({
      onClick: (event) => {
        closeModalContext == null ? void 0 : closeModalContext(event, "closeClick");
        onClick == null ? void 0 : onClick(event);
      }
    }, other),
    additionalProps: {
      as: component
    },
    className: classes.root,
    ownerState
  });
  return (0, import_jsx_runtime92.jsx)(ModalCloseRoot, _extends({}, rootProps, {
    children: _CloseIcon || (_CloseIcon = (0, import_jsx_runtime92.jsx)(Close_default, {}))
  }));
});
true ? ModalClose.propTypes = {
  children: import_prop_types62.default.node,
  color: import_prop_types62.default.oneOfType([import_prop_types62.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types62.default.string]),
  component: import_prop_types62.default.elementType,
  onClick: import_prop_types62.default.func,
  size: import_prop_types62.default.oneOf(["sm", "md", "lg"]),
  sx: import_prop_types62.default.oneOfType([import_prop_types62.default.arrayOf(import_prop_types62.default.oneOfType([import_prop_types62.default.func, import_prop_types62.default.object, import_prop_types62.default.bool])), import_prop_types62.default.func, import_prop_types62.default.object]),
  variant: import_prop_types62.default.oneOfType([import_prop_types62.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types62.default.string])
} : void 0;
var ModalClose_default = ModalClose;

// node_modules/@mui/joy/ModalDialog/ModalDialog.js
init_objectWithoutPropertiesLoose();
init_extends();
var React101 = __toESM(require_react());
var import_prop_types64 = __toESM(require_prop_types());
init_clsx_m();
init_esm();

// node_modules/@mui/joy/Sheet/Sheet.js
init_objectWithoutPropertiesLoose();
init_extends();
init_esm();
init_clsx_m();
var import_prop_types63 = __toESM(require_prop_types());
var React100 = __toESM(require_react());

// node_modules/@mui/joy/Sheet/sheetClasses.js
function getSheetUtilityClass(slot) {
  return generateUtilityClass2("JoySheet", slot);
}
var sheetClasses = generateUtilityClasses2("JoySheet", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var sheetClasses_default = sheetClasses;

// node_modules/@mui/joy/Sheet/Sheet.js
var import_jsx_runtime93 = __toESM(require_jsx_runtime());
var _excluded64 = ["className", "color", "component", "variant"];
var useUtilityClasses51 = (ownerState) => {
  const {
    variant,
    color
  } = ownerState;
  const slots = {
    root: ["root", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]
  };
  return composeClasses(slots, getSheetUtilityClass, {});
};
var SheetRoot = styled_default("div", {
  name: "JoySheet",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  const variantStyle = (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color];
  const childRadius = resolveSxValue({
    theme,
    ownerState
  }, "borderRadius");
  return [_extends({
    "--List-item-stickyBackground": (variantStyle == null ? void 0 : variantStyle.backgroundColor) || (variantStyle == null ? void 0 : variantStyle.background) || theme.vars.palette.background.surface
  }, childRadius !== void 0 && {
    "--List-radius": `calc(${childRadius} - var(--variant-borderWidth, 0px))`,
    "--internal-action-radius": `calc(${childRadius} - var(--variant-borderWidth, 0px))`
  }, {
    transition: "box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    backgroundColor: theme.vars.palette.background.surface,
    position: "relative"
  }), variantStyle];
});
var Sheet = React100.forwardRef(function Sheet2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoySheet"
  });
  const {
    className,
    color = "neutral",
    component = "div",
    variant = "plain"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded64);
  const ownerState = _extends({}, props, {
    color,
    component,
    variant
  });
  const classes = useUtilityClasses51(ownerState);
  return (0, import_jsx_runtime93.jsx)(SheetRoot, _extends({
    as: component,
    ownerState,
    className: clsx_m_default(classes.root, className),
    ref
  }, other));
});
true ? Sheet.propTypes = {
  children: import_prop_types63.default.node,
  className: import_prop_types63.default.string,
  color: import_prop_types63.default.oneOfType([import_prop_types63.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types63.default.string]),
  component: import_prop_types63.default.elementType,
  sx: import_prop_types63.default.oneOfType([import_prop_types63.default.arrayOf(import_prop_types63.default.oneOfType([import_prop_types63.default.func, import_prop_types63.default.object, import_prop_types63.default.bool])), import_prop_types63.default.func, import_prop_types63.default.object]),
  variant: import_prop_types63.default.oneOfType([import_prop_types63.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types63.default.string])
} : void 0;
var Sheet_default = Sheet;

// node_modules/@mui/joy/ModalDialog/modalDialogClasses.js
function getModalDialogUtilityClass(slot) {
  return generateUtilityClass2("JoyModalDialog", slot);
}
var modalDialogClasses = generateUtilityClasses2("JoyModalDialog", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg", "layoutCenter", "layoutFullscreen"]);
var modalDialogClasses_default = modalDialogClasses;

// node_modules/@mui/joy/ModalDialog/ModalDialog.js
var import_jsx_runtime94 = __toESM(require_jsx_runtime());
var _excluded65 = ["className", "children", "color", "component", "variant", "size", "layout"];
var useUtilityClasses52 = (ownerState) => {
  const {
    variant,
    color,
    size,
    layout
  } = ownerState;
  const slots = {
    root: ["root", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`, layout && `layout${capitalize(layout)}`]
  };
  return composeClasses(slots, getModalDialogUtilityClass, {});
};
var ModalDialogRoot = styled_default(SheetRoot, {
  name: "JoyModalDialog",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => _extends({
  "--Divider-inset": "calc(-1 * var(--ModalDialog-padding))",
  "--ModalClose-radius": "max((var(--ModalDialog-radius) - var(--variant-borderWidth)) - var(--ModalClose-inset), min(var(--ModalClose-inset) / 2, (var(--ModalDialog-radius) - var(--variant-borderWidth)) / 2))"
}, ownerState.size === "sm" && {
  "--ModalDialog-padding": theme.spacing(1.25),
  "--ModalDialog-radius": theme.vars.radius.sm,
  "--ModalClose-inset": theme.spacing(0.75),
  fontSize: theme.vars.fontSize.sm
}, ownerState.size === "md" && {
  "--ModalDialog-padding": theme.spacing(2),
  "--ModalDialog-radius": theme.vars.radius.md,
  "--ModalClose-inset": theme.spacing(1),
  fontSize: theme.vars.fontSize.md
}, ownerState.size === "lg" && {
  "--ModalDialog-padding": theme.spacing(3),
  "--ModalDialog-radius": theme.vars.radius.md,
  "--ModalClose-inset": theme.spacing(1.5),
  fontSize: theme.vars.fontSize.md
}, {
  boxSizing: "border-box",
  boxShadow: theme.vars.shadow.md,
  borderRadius: "var(--ModalDialog-radius)",
  fontFamily: theme.vars.fontFamily.body,
  lineHeight: theme.vars.lineHeight.md,
  padding: "var(--ModalDialog-padding)",
  minWidth: "min(calc(100vw - 2 * var(--ModalDialog-padding)), var(--ModalDialog-minWidth, 300px))",
  outline: "none",
  position: "absolute"
}, ownerState.layout === "fullscreen" && {
  top: 0,
  left: 0,
  right: 0,
  bottom: 0,
  border: 0,
  borderRadius: 0
}, ownerState.layout === "center" && {
  top: "50%",
  left: "50%",
  transform: "translate(-50%, -50%)"
}));
var ModalDialog = React101.forwardRef(function ModalDialog2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyModalDialog"
  });
  const {
    className,
    children,
    color = "neutral",
    component = "div",
    variant = "outlined",
    size = "md",
    layout = "center"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded65);
  const ownerState = _extends({}, props, {
    color,
    component,
    layout,
    size,
    variant
  });
  const classes = useUtilityClasses52(ownerState);
  return (0, import_jsx_runtime94.jsx)(ModalDialogSizeContext_default.Provider, {
    value: size,
    children: (0, import_jsx_runtime94.jsx)(ModalDialogVariantColorContext_default.Provider, {
      value: {
        variant,
        color
      },
      children: (0, import_jsx_runtime94.jsx)(ModalDialogRoot, _extends({
        as: component,
        ownerState,
        className: clsx_m_default(classes.root, className),
        ref,
        role: "dialog",
        "aria-modal": "true"
      }, other, {
        children: React101.Children.map(children, (child) => {
          if (!React101.isValidElement(child)) {
            return child;
          }
          if (isMuiElement(child, ["Divider"])) {
            const extraProps = {};
            extraProps.inset = "inset" in child.props ? child.props.inset : "context";
            return React101.cloneElement(child, extraProps);
          }
          return child;
        })
      }))
    })
  });
});
true ? ModalDialog.propTypes = {
  children: import_prop_types64.default.node,
  className: import_prop_types64.default.string,
  color: import_prop_types64.default.oneOfType([import_prop_types64.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types64.default.string]),
  component: import_prop_types64.default.elementType,
  layout: import_prop_types64.default.oneOfType([import_prop_types64.default.oneOf(["center", "fullscreen"]), import_prop_types64.default.string]),
  size: import_prop_types64.default.oneOfType([import_prop_types64.default.oneOf(["sm", "md", "lg"]), import_prop_types64.default.string]),
  sx: import_prop_types64.default.oneOfType([import_prop_types64.default.arrayOf(import_prop_types64.default.oneOfType([import_prop_types64.default.func, import_prop_types64.default.object, import_prop_types64.default.bool])), import_prop_types64.default.func, import_prop_types64.default.object]),
  variant: import_prop_types64.default.oneOfType([import_prop_types64.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types64.default.string])
} : void 0;
var ModalDialog_default = ModalDialog;

// node_modules/@mui/joy/Option/Option.js
init_extends();
init_objectWithoutPropertiesLoose();
var React102 = __toESM(require_react());
var import_prop_types65 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Option/optionClasses.js
function getOptionUtilityClass(slot) {
  return generateUtilityClass2("JoyOption", slot);
}
var optionClasses = generateUtilityClasses2("JoyOption", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "colorContext", "focusVisible", "disabled", "selected", "highlighted", "variantPlain", "variantSoft", "variantOutlined", "variantSolid"]);
var optionClasses_default = optionClasses;

// node_modules/@mui/joy/Option/Option.js
var import_jsx_runtime95 = __toESM(require_jsx_runtime());
var _excluded66 = ["component", "children", "disabled", "value", "label", "variant", "color"];
var useUtilityClasses53 = (ownerState) => {
  const {
    disabled,
    highlighted,
    selected
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", highlighted && "highlighted", selected && "selected"]
  };
  return composeClasses(slots, getOptionUtilityClass, {});
};
var OptionRoot = styled_default(ListItemButtonRoot, {
  name: "JoyOption",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette;
  return {
    [`&.${optionClasses_default.highlighted}`]: {
      backgroundColor: (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette[`${ownerState.variant}HoverBg`]
    }
  };
});
var Option = React102.forwardRef(function Option2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyOption"
  });
  const {
    component = "li",
    children,
    disabled,
    value,
    label,
    variant = "plain",
    color: colorProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded66);
  const row = React102.useContext(RowListContext_default);
  const selectContext = React102.useContext(SelectUnstyledContext);
  if (!selectContext) {
    throw new Error("OptionUnstyled must be used within a SelectUnstyled");
  }
  const selectOption = {
    value,
    label: label || children,
    disabled
  };
  const optionState = selectContext.getOptionState(selectOption);
  const optionProps = selectContext.getOptionProps(selectOption);
  const listboxRef = selectContext.listboxRef;
  let color = "neutral";
  if (optionState.selected) {
    color = selectContext.color === "neutral" ? "primary" : selectContext.color;
  }
  if (colorProp) {
    color = colorProp;
  }
  const ownerState = _extends({}, props, optionState, {
    component,
    variant,
    color,
    row
  });
  const optionRef = React102.useRef(null);
  const handleRef = useForkRef(ref, optionRef);
  React102.useEffect(() => {
    if (optionState.highlighted) {
      if (!listboxRef.current || !optionRef.current) {
        return;
      }
      const listboxClientRect = listboxRef.current.getBoundingClientRect();
      const optionClientRect = optionRef.current.getBoundingClientRect();
      if (optionClientRect.top < listboxClientRect.top) {
        listboxRef.current.scrollTop -= listboxClientRect.top - optionClientRect.top;
      } else if (optionClientRect.bottom > listboxClientRect.bottom) {
        listboxRef.current.scrollTop += optionClientRect.bottom - listboxClientRect.bottom;
      }
    }
  }, [optionState.highlighted, listboxRef]);
  const classes = useUtilityClasses53(ownerState);
  const rootProps = useSlotProps({
    elementType: OptionRoot,
    externalSlotProps: {},
    externalForwardedProps: other,
    additionalProps: _extends({}, optionProps, {
      ref: handleRef,
      as: component
    }),
    className: classes.root,
    ownerState
  });
  return (0, import_jsx_runtime95.jsx)(OptionRoot, _extends({}, rootProps, {
    children
  }));
});
true ? Option.propTypes = {
  children: import_prop_types65.default.node,
  color: import_prop_types65.default.oneOfType([import_prop_types65.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types65.default.string]),
  component: import_prop_types65.default.elementType,
  disabled: import_prop_types65.default.bool,
  label: import_prop_types65.default.oneOfType([import_prop_types65.default.element, import_prop_types65.default.string]),
  sx: import_prop_types65.default.oneOfType([import_prop_types65.default.arrayOf(import_prop_types65.default.oneOfType([import_prop_types65.default.func, import_prop_types65.default.object, import_prop_types65.default.bool])), import_prop_types65.default.func, import_prop_types65.default.object]),
  value: import_prop_types65.default.any,
  variant: import_prop_types65.default.oneOfType([import_prop_types65.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types65.default.string])
} : void 0;
var Option_default = Option;

// node_modules/@mui/joy/Radio/Radio.js
init_objectWithoutPropertiesLoose();
init_extends();
var React103 = __toESM(require_react());
var import_prop_types66 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Radio/radioClasses.js
function getRadioUtilityClass(slot) {
  return generateUtilityClass2("JoyRadio", slot);
}
var radioClasses = generateUtilityClasses2("JoyRadio", ["root", "radio", "icon", "action", "input", "label", "checked", "disabled", "focusVisible", "colorPrimary", "colorDanger", "colorInfo", "colorNeutral", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantOutlined", "variantSoft", "variantSolid"]);
var radioClasses_default = radioClasses;

// node_modules/@mui/joy/Radio/Radio.js
var import_jsx_runtime96 = __toESM(require_jsx_runtime());
var import_jsx_runtime97 = __toESM(require_jsx_runtime());
var _excluded67 = ["checked", "checkedIcon", "component", "componentsProps", "defaultChecked", "disabled", "disableIcon", "overlay", "label", "id", "name", "onBlur", "onChange", "onFocus", "onFocusVisible", "readOnly", "required", "color", "variant", "size", "uncheckedIcon", "value"];
var useUtilityClasses54 = (ownerState) => {
  const {
    checked,
    disabled,
    disableIcon,
    focusVisible,
    color,
    variant,
    size
  } = ownerState;
  const slots = {
    root: ["root", checked && "checked", disabled && "disabled", focusVisible && "focusVisible", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],
    radio: ["radio", checked && "checked", disabled && "disabled"],
    icon: ["icon"],
    action: [
      "action",
      checked && "checked",
      disableIcon && disabled && "disabled",
      focusVisible && "focusVisible"
    ],
    input: ["input"],
    label: ["label"]
  };
  return composeClasses(slots, getRadioUtilityClass, {});
};
function areEqualValues(a, b) {
  if (typeof b === "object" && b !== null) {
    return a === b;
  }
  return String(a) === String(b);
}
var RadioRoot = styled_default("span", {
  name: "JoyRadio",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  ownerState,
  theme
}) => {
  var _theme$vars$palette, _theme$vars$palette2, _theme$vars$palette3;
  return [_extends({
    "--Icon-fontSize": "var(--Radio-size)"
  }, ownerState.size === "sm" && {
    "--Radio-size": "1rem",
    "--Radio-gap": "0.375rem",
    fontSize: theme.vars.fontSize.sm
  }, ownerState.size === "md" && {
    "--Radio-size": "1.25rem",
    "--Radio-gap": "0.5rem",
    fontSize: theme.vars.fontSize.md
  }, ownerState.size === "lg" && {
    "--Radio-size": "1.5rem",
    "--Radio-gap": "0.625rem",
    fontSize: theme.vars.fontSize.lg
  }, {
    position: ownerState.overlay ? "initial" : "relative",
    display: "inline-flex",
    boxSizing: "border-box",
    minWidth: 0,
    fontFamily: theme.vars.fontFamily.body,
    lineHeight: "var(--Radio-size)",
    color: theme.vars.palette.text.primary,
    [`&.${radioClasses_default.disabled}`]: {
      color: (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette.plainDisabledColor
    }
  }, ownerState.disableIcon && {
    color: (_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2[`${ownerState.variant}Color`],
    [`&.${radioClasses_default.disabled}`]: {
      color: (_theme$vars$palette3 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette3[`${ownerState.variant}DisabledColor`]
    }
  }, ownerState["data-parent"] === "RadioGroup" && ownerState["data-first-child"] === void 0 && {
    marginInlineStart: ownerState.row ? "var(--RadioGroup-gap)" : void 0,
    marginBlockStart: ownerState.row ? void 0 : "var(--RadioGroup-gap)"
  })];
});
var RadioRadio = styled_default("span", {
  name: "JoyRadio",
  slot: "Radio",
  overridesResolver: (props, styles2) => styles2.radio
})(({
  ownerState,
  theme
}) => {
  var _theme$variants, _theme$variants2, _theme$variants3, _theme$variants4;
  return [_extends({
    margin: 0,
    boxSizing: "border-box",
    width: "var(--Radio-size)",
    height: "var(--Radio-size)",
    borderRadius: "var(--Radio-size)",
    display: "inline-flex",
    justifyContent: "center",
    alignItems: "center",
    flexShrink: 0,
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"
  }, ownerState.disableIcon && {
    display: "contents"
  }), ...!ownerState.disableIcon ? [(_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color], {
    "&:hover": (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color]
  }, {
    "&:active": (_theme$variants3 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants3[ownerState.color]
  }, {
    [`&.${radioClasses_default.disabled}`]: (_theme$variants4 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants4[ownerState.color]
  }] : []];
});
var RadioAction = styled_default("span", {
  name: "JoyRadio",
  slot: "Action",
  overridesResolver: (props, styles2) => styles2.action
})(({
  theme,
  ownerState
}) => {
  var _theme$variants5, _theme$variants6, _theme$variants7, _theme$variants8;
  return [{
    position: "absolute",
    borderRadius: `var(--Radio-action-radius, ${ownerState.overlay ? "var(--internal-action-radius, inherit)" : "inherit"})`,
    top: 0,
    left: 0,
    right: 0,
    bottom: 0,
    zIndex: 1,
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    [theme.focus.selector]: theme.focus.default
  }, ...ownerState.disableIcon ? [(_theme$variants5 = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants5[ownerState.color], {
    "&:hover": (_theme$variants6 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants6[ownerState.color]
  }, {
    "&:active": (_theme$variants7 = theme.variants[`${ownerState.variant}Active`]) == null ? void 0 : _theme$variants7[ownerState.color]
  }, {
    [`&.${radioClasses_default.disabled}`]: (_theme$variants8 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants8[ownerState.color]
  }] : []];
});
var RadioInput = styled_default("input", {
  name: "JoyRadio",
  slot: "Input",
  overridesResolver: (props, styles2) => styles2.input
})(() => ({
  margin: 0,
  opacity: 0,
  position: "absolute",
  height: "100%",
  width: "100%",
  cursor: "pointer"
}));
var RadioLabel = styled_default("label", {
  name: "JoyRadio",
  slot: "Label",
  overridesResolver: (props, styles2) => styles2.label
})(({
  ownerState
}) => _extends({
  flex: 1,
  minWidth: 0
}, ownerState.disableIcon ? {
  zIndex: 1,
  pointerEvents: "none"
} : {
  marginInlineStart: "var(--Radio-gap)"
}));
var RadioIcon = styled_default("span", {
  name: "JoyRadio",
  slot: "Icon",
  overridesResolver: (props, styles2) => styles2.icon
})(({
  ownerState
}) => ({
  width: "50%",
  height: "50%",
  borderRadius: "inherit",
  color: "inherit",
  backgroundColor: "currentColor",
  transition: "transform 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
  transform: ownerState.checked ? "scale(1)" : "scale(0)"
}));
var Radio = React103.forwardRef(function Radio2(inProps, ref) {
  var _ref, _ref2, _inProps$color, _ref3, _ref4, _inProps$color2;
  const props = useThemeProps2({
    props: inProps,
    name: "JoyRadio"
  });
  const {
    checked: checkedProp,
    checkedIcon,
    component,
    componentsProps = {},
    defaultChecked,
    disabled: disabledProp,
    disableIcon: disableIconProp = false,
    overlay: overlayProp = false,
    label,
    id: idOverride,
    name: nameProp,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible,
    readOnly,
    required,
    color,
    variant = "outlined",
    size: sizeProp = "md",
    uncheckedIcon,
    value
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded67);
  const formControl = React103.useContext(FormControlContext_default);
  if (true) {
    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;
    React103.useEffect(() => {
      if (registerEffect) {
        return registerEffect();
      }
      return void 0;
    }, [registerEffect]);
  }
  const id = useId(idOverride != null ? idOverride : formControl == null ? void 0 : formControl.htmlFor);
  const radioGroup = React103.useContext(RadioGroupContext_default);
  const activeColor = formControl != null && formControl.error ? "danger" : (_ref = (_ref2 = (_inProps$color = inProps.color) != null ? _inProps$color : formControl == null ? void 0 : formControl.color) != null ? _ref2 : color) != null ? _ref : "primary";
  const inactiveColor = formControl != null && formControl.error ? "danger" : (_ref3 = (_ref4 = (_inProps$color2 = inProps.color) != null ? _inProps$color2 : formControl == null ? void 0 : formControl.color) != null ? _ref4 : color) != null ? _ref3 : "neutral";
  const size = inProps.size || (formControl == null ? void 0 : formControl.size) || (radioGroup == null ? void 0 : radioGroup.size) || sizeProp;
  const name = inProps.name || (radioGroup == null ? void 0 : radioGroup.name) || nameProp;
  const disableIcon = inProps.disableIcon || (radioGroup == null ? void 0 : radioGroup.disableIcon) || disableIconProp;
  const overlay = inProps.overlay || (radioGroup == null ? void 0 : radioGroup.overlay) || overlayProp;
  const radioChecked = typeof checkedProp === "undefined" && !!value ? areEqualValues(radioGroup == null ? void 0 : radioGroup.value, value) : checkedProp;
  const useRadioProps = {
    checked: radioChecked,
    defaultChecked,
    disabled: disabledProp != null ? disabledProp : formControl == null ? void 0 : formControl.disabled,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible
  };
  const {
    getInputProps,
    checked,
    disabled,
    focusVisible
  } = useSwitch(useRadioProps);
  const ownerState = _extends({}, props, {
    checked,
    disabled,
    focusVisible,
    color: checked ? activeColor : inactiveColor,
    variant,
    size,
    disableIcon,
    overlay,
    row: radioGroup == null ? void 0 : radioGroup.row
  });
  const classes = useUtilityClasses54(ownerState);
  const rootProps = useSlotProps({
    elementType: RadioRoot,
    externalForwardedProps: other,
    externalSlotProps: componentsProps.root,
    additionalProps: {
      as: component,
      ref
    },
    className: classes.root,
    ownerState
  });
  const radioProps = useSlotProps({
    elementType: RadioRadio,
    externalSlotProps: componentsProps.radio,
    className: classes.radio,
    ownerState
  });
  const radioIconProps = useSlotProps({
    elementType: RadioIcon,
    externalSlotProps: componentsProps.icon,
    className: classes.icon,
    ownerState
  });
  const radioActionProps = useSlotProps({
    elementType: RadioAction,
    externalSlotProps: componentsProps.action,
    className: classes.action,
    ownerState
  });
  const radioInputProps = useSlotProps({
    elementType: RadioInput,
    getSlotProps: () => getInputProps({
      onChange: radioGroup == null ? void 0 : radioGroup.onChange
    }),
    externalSlotProps: componentsProps.input,
    className: classes.input,
    additionalProps: {
      type: "radio",
      id,
      name,
      readOnly,
      required,
      value: String(value),
      "aria-describedby": formControl == null ? void 0 : formControl["aria-describedby"]
    },
    ownerState
  });
  const radioLabelProps = useSlotProps({
    elementType: RadioLabel,
    externalSlotProps: componentsProps.label,
    className: classes.label,
    ownerState,
    additionalProps: {
      htmlFor: id
    }
  });
  return (0, import_jsx_runtime97.jsxs)(RadioRoot, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime97.jsxs)(RadioRadio, _extends({}, radioProps, {
      children: [checked && !disableIcon && checkedIcon, !checked && !disableIcon && uncheckedIcon, !checkedIcon && !uncheckedIcon && !disableIcon && (0, import_jsx_runtime96.jsx)(RadioIcon, _extends({}, radioIconProps)), (0, import_jsx_runtime96.jsx)(RadioAction, _extends({}, radioActionProps, {
        children: (0, import_jsx_runtime96.jsx)(RadioInput, _extends({}, radioInputProps))
      }))]
    })), label && (0, import_jsx_runtime96.jsx)(RadioLabel, _extends({}, radioLabelProps, {
      children: (0, import_jsx_runtime96.jsx)(TypographyContext.Provider, {
        value: true,
        children: label
      })
    }))]
  }));
});
true ? Radio.propTypes = {
  checked: import_prop_types66.default.bool,
  checkedIcon: import_prop_types66.default.node,
  children: import_prop_types66.default.node,
  className: import_prop_types66.default.string,
  color: import_prop_types66.default.oneOfType([import_prop_types66.default.oneOf(["danger", "info", "primary", "success", "warning"]), import_prop_types66.default.string]),
  component: import_prop_types66.default.elementType,
  componentsProps: import_prop_types66.default.shape({
    action: import_prop_types66.default.oneOfType([import_prop_types66.default.func, import_prop_types66.default.object]),
    icon: import_prop_types66.default.oneOfType([import_prop_types66.default.func, import_prop_types66.default.object]),
    input: import_prop_types66.default.oneOfType([import_prop_types66.default.func, import_prop_types66.default.object]),
    label: import_prop_types66.default.oneOfType([import_prop_types66.default.func, import_prop_types66.default.object]),
    radio: import_prop_types66.default.oneOfType([import_prop_types66.default.func, import_prop_types66.default.object]),
    root: import_prop_types66.default.oneOfType([import_prop_types66.default.func, import_prop_types66.default.object])
  }),
  defaultChecked: import_prop_types66.default.bool,
  disabled: import_prop_types66.default.bool,
  disableIcon: import_prop_types66.default.bool,
  id: import_prop_types66.default.string,
  label: import_prop_types66.default.node,
  name: import_prop_types66.default.string,
  onBlur: import_prop_types66.default.func,
  onChange: import_prop_types66.default.func,
  onFocus: import_prop_types66.default.func,
  onFocusVisible: import_prop_types66.default.func,
  overlay: import_prop_types66.default.bool,
  readOnly: import_prop_types66.default.bool,
  required: import_prop_types66.default.bool,
  size: import_prop_types66.default.oneOfType([import_prop_types66.default.oneOf(["sm", "md", "lg"]), import_prop_types66.default.string]),
  sx: import_prop_types66.default.oneOfType([import_prop_types66.default.arrayOf(import_prop_types66.default.oneOfType([import_prop_types66.default.func, import_prop_types66.default.object, import_prop_types66.default.bool])), import_prop_types66.default.func, import_prop_types66.default.object]),
  uncheckedIcon: import_prop_types66.default.node,
  value: import_prop_types66.default.any,
  variant: import_prop_types66.default.oneOfType([import_prop_types66.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types66.default.string])
} : void 0;
var Radio_default = Radio;

// node_modules/@mui/joy/RadioGroup/RadioGroup.js
init_objectWithoutPropertiesLoose();
init_extends();
var React104 = __toESM(require_react());
var import_prop_types67 = __toESM(require_prop_types());
init_clsx_m();
init_esm();

// node_modules/@mui/joy/RadioGroup/radioGroupClasses.js
function getRadioGroupUtilityClass(slot) {
  return generateUtilityClass2("JoyRadioGroup", slot);
}
var radioGroupClasses = generateUtilityClasses2("JoyRadioGroup", ["root", "row", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg"]);
var radioGroupClasses_default = radioGroupClasses;

// node_modules/@mui/joy/RadioGroup/RadioGroup.js
var import_jsx_runtime98 = __toESM(require_jsx_runtime());
var _excluded68 = ["className", "component", "children", "name", "defaultValue", "disableIcon", "overlay", "value", "onChange", "color", "variant", "size", "row", "role"];
var useUtilityClasses55 = (ownerState) => {
  const {
    row,
    size,
    variant,
    color
  } = ownerState;
  const slots = {
    root: ["root", row && "row", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getRadioGroupUtilityClass, {});
};
var RadioGroupRoot = styled_default("div", {
  name: "JoyRadioGroup",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  ownerState,
  theme
}) => {
  var _theme$variants;
  return _extends({}, ownerState.size === "sm" && {
    "--RadioGroup-gap": "0.625rem"
  }, ownerState.size === "md" && {
    "--RadioGroup-gap": "0.875rem"
  }, ownerState.size === "lg" && {
    "--RadioGroup-gap": "1.25rem"
  }, {
    display: "flex",
    flexDirection: ownerState.row ? "row" : "column",
    borderRadius: theme.vars.radius.sm
  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]);
});
var RadioGroup = React104.forwardRef(function RadioGroup2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyRadioGroup"
  });
  const {
    className,
    component,
    children,
    name: nameProp,
    defaultValue,
    disableIcon = false,
    overlay,
    value: valueProp,
    onChange,
    color = "neutral",
    variant = "plain",
    size = "md",
    row = false,
    role = "radiogroup"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded68);
  const [value, setValueState] = useControlled({
    controlled: valueProp,
    default: defaultValue,
    name: "RadioGroup"
  });
  const ownerState = _extends({
    row,
    size,
    variant,
    color,
    role
  }, props);
  const classes = useUtilityClasses55(ownerState);
  const handleChange = (event) => {
    setValueState(event.target.value);
    if (onChange) {
      onChange(event);
    }
  };
  const name = useId(nameProp);
  const formControl = React104.useContext(FormControlContext_default);
  if (true) {
    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;
    React104.useEffect(() => {
      if (registerEffect) {
        return registerEffect();
      }
      return void 0;
    }, [registerEffect]);
  }
  return (0, import_jsx_runtime98.jsx)(RadioGroupContext_default.Provider, {
    value: {
      disableIcon,
      overlay,
      row,
      size,
      name,
      value,
      onChange: handleChange
    },
    children: (0, import_jsx_runtime98.jsx)(RadioGroupRoot, _extends({
      ref,
      role,
      as: component,
      ownerState,
      className: clsx_m_default(classes.root, className),
      id: formControl == null ? void 0 : formControl.htmlFor,
      "aria-labelledby": formControl == null ? void 0 : formControl.labelId,
      "aria-describedby": formControl == null ? void 0 : formControl["aria-describedby"]
    }, other, {
      children: (0, import_jsx_runtime98.jsx)(FormControlContext_default.Provider, {
        value: void 0,
        children: React104.Children.map(children, (child, index) => React104.isValidElement(child) ? React104.cloneElement(child, _extends({}, index === 0 && {
          "data-first-child": ""
        }, index === React104.Children.count(children) - 1 && {
          "data-last-child": ""
        }, {
          "data-parent": "RadioGroup"
        })) : child)
      })
    }))
  });
});
true ? RadioGroup.propTypes = {
  children: import_prop_types67.default.node,
  className: import_prop_types67.default.string,
  color: import_prop_types67.default.oneOfType([import_prop_types67.default.oneOf(["danger", "info", "primary", "success", "warning"]), import_prop_types67.default.string]),
  component: import_prop_types67.default.elementType,
  defaultValue: import_prop_types67.default.any,
  disableIcon: import_prop_types67.default.bool,
  name: import_prop_types67.default.string,
  onChange: import_prop_types67.default.func,
  overlay: import_prop_types67.default.bool,
  role: import_prop_types67.default.string,
  row: import_prop_types67.default.bool,
  size: import_prop_types67.default.oneOfType([import_prop_types67.default.oneOf(["sm", "md", "lg"]), import_prop_types67.default.string]),
  sx: import_prop_types67.default.oneOfType([import_prop_types67.default.arrayOf(import_prop_types67.default.oneOfType([import_prop_types67.default.func, import_prop_types67.default.object, import_prop_types67.default.bool])), import_prop_types67.default.func, import_prop_types67.default.object]),
  value: import_prop_types67.default.any,
  variant: import_prop_types67.default.oneOfType([import_prop_types67.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types67.default.string])
} : void 0;
var RadioGroup_default = RadioGroup;

// node_modules/@mui/joy/Select/Select.js
init_objectWithoutPropertiesLoose();
init_extends();
var React106 = __toESM(require_react());
var import_prop_types68 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/internal/svg-icons/Unfold.js
var React105 = __toESM(require_react());
var import_jsx_runtime99 = __toESM(require_jsx_runtime());
var Unfold_default = createSvgIcon((0, import_jsx_runtime99.jsx)("path", {
  d: "m12 5.83 2.46 2.46c.39.39 1.02.39 1.41 0 .39-.39.39-1.02 0-1.41L12.7 3.7a.9959.9959 0 0 0-1.41 0L8.12 6.88c-.39.39-.39 1.02 0 1.41.39.39 1.02.39 1.41 0L12 5.83zm0 12.34-2.46-2.46a.9959.9959 0 0 0-1.41 0c-.39.39-.39 1.02 0 1.41l3.17 3.18c.39.39 1.02.39 1.41 0l3.17-3.17c.39-.39.39-1.02 0-1.41a.9959.9959 0 0 0-1.41 0L12 18.17z"
}), "Unfold");

// node_modules/@mui/joy/Select/selectClasses.js
function getSelectUtilityClass(slot) {
  return generateUtilityClass2("JoySelect", slot);
}
var selectClasses = generateUtilityClasses2("JoySelect", ["root", "button", "indicator", "startDecorator", "endDecorator", "popper", "listbox", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg", "focusVisible", "disabled", "expanded"]);
var selectClasses_default = selectClasses;

// node_modules/@mui/joy/Select/Select.js
var import_jsx_runtime100 = __toESM(require_jsx_runtime());
var import_jsx_runtime101 = __toESM(require_jsx_runtime());
var _Unfold;
var _excluded69 = ["action", "autoFocus", "children", "componentsProps", "defaultValue", "defaultListboxOpen", "disabled", "placeholder", "listboxId", "listboxOpen", "onChange", "onListboxOpenChange", "onClose", "renderValue", "value", "size", "variant", "color", "startDecorator", "endDecorator", "indicator", "aria-describedby", "aria-label", "aria-labelledby", "id", "name"];
var _excluded213 = ["component"];
function defaultRenderSingleValue2(selectedOption) {
  var _selectedOption$label;
  return (_selectedOption$label = selectedOption == null ? void 0 : selectedOption.label) != null ? _selectedOption$label : "";
}
var useUtilityClasses56 = (ownerState) => {
  const {
    color,
    disabled,
    focusVisible,
    size,
    variant,
    open
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", focusVisible && "focusVisible", open && "expanded", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],
    button: ["button"],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"],
    indicator: ["indicator", open && "expanded"],
    listbox: ["listbox", open && "expanded", disabled && "disabled", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getSelectUtilityClass, {});
};
var SelectRoot = styled_default("div", {
  name: "JoySelect",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$vars$palette, _theme$variants2, _theme$variants3;
  const variantStyle = (_theme$variants = theme.variants[`${ownerState.variant}`]) == null ? void 0 : _theme$variants[ownerState.color];
  return [_extends({
    "--Select-radius": theme.vars.radius.sm,
    "--Select-gap": "0.5rem",
    "--Select-placeholderOpacity": 0.5,
    "--Select-focusedThickness": "2px",
    "--Select-focusedHighlight": (_theme$vars$palette = theme.vars.palette[ownerState.color === "neutral" ? "primary" : ownerState.color]) == null ? void 0 : _theme$vars$palette[500],
    "--Select-indicator-color": theme.vars.palette.text.tertiary
  }, ownerState.size === "sm" && {
    "--Select-minHeight": "2rem",
    "--Select-paddingInline": "0.5rem",
    "--Select-decorator-childHeight": "min(1.5rem, var(--Select-minHeight))",
    "--Icon-fontSize": "1.25rem"
  }, ownerState.size === "md" && {
    "--Select-minHeight": "2.5rem",
    "--Select-paddingInline": "0.75rem",
    "--Select-decorator-childHeight": "min(2rem, var(--Select-minHeight))",
    "--Icon-fontSize": "1.5rem"
  }, ownerState.size === "lg" && {
    "--Select-minHeight": "3rem",
    "--Select-paddingInline": "1rem",
    "--Select-decorator-childHeight": "min(2.375rem, var(--Select-minHeight))",
    "--Icon-fontSize": "1.75rem"
  }, {
    "--Select-decorator-childOffset": "min(calc(var(--Select-paddingInline) - (var(--Select-minHeight) - 2 * var(--variant-borderWidth) - var(--Select-decorator-childHeight)) / 2), var(--Select-paddingInline))",
    "--internal-paddingBlock": "max((var(--Select-minHeight) - 2 * var(--variant-borderWidth) - var(--Select-decorator-childHeight)) / 2, 0px)",
    "--Select-decorator-childRadius": "max((var(--Select-radius) - var(--variant-borderWidth)) - var(--internal-paddingBlock), min(var(--internal-paddingBlock) / 2, (var(--Select-radius) - var(--variant-borderWidth)) / 2))",
    "--Button-minHeight": "var(--Select-decorator-childHeight)",
    "--IconButton-size": "var(--Select-decorator-childHeight)",
    "--Button-radius": "var(--Select-decorator-childRadius)",
    "--IconButton-radius": "var(--Select-decorator-childRadius)",
    boxSizing: "border-box",
    minWidth: 0,
    minHeight: "var(--Select-minHeight)",
    position: "relative",
    display: "flex",
    alignItems: "center",
    borderRadius: "var(--Select-radius)"
  }, !variantStyle.backgroundColor && {
    backgroundColor: theme.vars.palette.background.surface
  }, {
    paddingInline: `var(--Select-paddingInline)`,
    fontFamily: theme.vars.fontFamily.body,
    fontSize: theme.vars.fontSize.md
  }, ownerState.size === "sm" && {
    fontSize: theme.vars.fontSize.sm
  }, {
    transition: "background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    "&:before": {
      boxSizing: "border-box",
      content: '""',
      display: "block",
      position: "absolute",
      pointerEvents: "none",
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      zIndex: 1,
      borderRadius: "inherit",
      margin: "calc(var(--variant-borderWidth) * -1)"
    },
    [`&.${selectClasses_default.focusVisible}`]: {
      "--Select-indicator-color": "var(--Select-focusedHighlight)"
    },
    [`&.${selectClasses_default.disabled}`]: {
      "--Select-indicator-color": "inherit"
    }
  }, ownerState.variant !== "solid" && {
    [`&.${selectClasses_default.focusVisible}`]: {
      "&:before": {
        boxShadow: `inset 0 0 0 var(--Select-focusedThickness) var(--Select-focusedHighlight)`
      }
    }
  }), _extends({}, variantStyle, {
    "&:hover": (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color],
    [`&.${selectClasses_default.disabled}`]: (_theme$variants3 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants3[ownerState.color]
  })];
});
var SelectButton = styled_default("button", {
  name: "JoySelect",
  slot: "Button",
  overridesResolver: (props, styles2) => styles2.button
})(({
  ownerState
}) => _extends({
  border: 0,
  outline: "none",
  background: "none",
  padding: 0,
  fontSize: "inherit",
  color: "inherit",
  alignSelf: "stretch",
  display: "flex",
  alignItems: "center",
  flex: 1,
  cursor: "pointer"
}, (ownerState.value === null || ownerState.value === void 0) && {
  opacity: "var(--Select-placeholderOpacity)"
}));
var SelectListbox = styled_default(ListRoot, {
  name: "JoySelect",
  slot: "Listbox",
  overridesResolver: (props, styles2) => styles2.listbox
})(({
  theme,
  ownerState
}) => {
  var _theme$variants4;
  const variantStyle = (_theme$variants4 = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants4[ownerState.color];
  return _extends({
    "--List-radius": theme.vars.radius.sm,
    "--List-item-stickyBackground": (variantStyle == null ? void 0 : variantStyle.backgroundColor) || (variantStyle == null ? void 0 : variantStyle.background) || theme.vars.palette.background.surface,
    "--List-item-stickyTop": "calc(var(--List-padding, var(--List-divider-gap)) * -1)"
  }, scopedVariables, {
    outline: "none",
    boxShadow: theme.vars.shadow.md,
    zIndex: 1e3
  }, !variantStyle.backgroundColor && {
    backgroundColor: theme.vars.palette.background.surface
  });
});
var SelectStartDecorator = styled_default("span", {
  name: "JoySelect",
  slot: "StartDecorator",
  overridesResolver: (props, styles2) => styles2.startDecorator
})(({
  theme,
  ownerState
}) => _extends({
  "--Button-margin": "0 0 0 calc(var(--Select-decorator-childOffset) * -1)",
  "--IconButton-margin": "0 0 0 calc(var(--Select-decorator-childOffset) * -1)",
  "--Icon-margin": "0 0 0 calc(var(--Select-paddingInline) / -4)",
  pointerEvents: "none",
  display: "inherit",
  alignItems: "center",
  marginInlineEnd: "var(--Select-gap)",
  color: theme.vars.palette.text.tertiary
}, ownerState.focusVisible && {
  color: "var(--Select-focusedHighlight)"
}));
var SelectEndDecorator = styled_default("span", {
  name: "JoySelect",
  slot: "EndDecorator",
  overridesResolver: (props, styles2) => styles2.endDecorator
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette2;
  return {
    "--Button-margin": "0 calc(var(--Select-decorator-childOffset) * -1) 0 0",
    "--IconButton-margin": "0 calc(var(--Select-decorator-childOffset) * -1) 0 0",
    "--Icon-margin": "0 calc(var(--Select-paddingInline) / -4) 0 0",
    display: "inherit",
    alignItems: "center",
    marginInlineStart: "var(--Select-gap)",
    color: (_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2[`${ownerState.variant}Color`]
  };
});
var SelectIndicator = styled_default("span", {
  name: "JoySelect",
  slot: "Indicator"
})({
  color: "var(--Select-indicator-color)",
  display: "inherit",
  alignItems: "center",
  marginInlineStart: "var(--Select-gap)",
  marginInlineEnd: "calc(var(--Select-paddingInline) / -4)"
});
var Select = React106.forwardRef(function Select2(inProps, ref) {
  var _ref2, _inProps$disabled, _ref3, _inProps$size, _ref4, _inProps$color;
  const props = useThemeProps2({
    props: inProps,
    name: "JoySelect"
  });
  const _ref = props, {
    action,
    autoFocus,
    children,
    componentsProps = {},
    defaultValue,
    defaultListboxOpen = false,
    disabled: disabledExternalProp,
    placeholder,
    listboxId,
    listboxOpen: listboxOpenProp,
    onChange,
    onListboxOpenChange,
    onClose,
    renderValue: renderValueProp,
    value: valueProp,
    size: sizeProp = "md",
    variant = "outlined",
    color: colorProp = "neutral",
    startDecorator,
    endDecorator,
    indicator = _Unfold || (_Unfold = (0, import_jsx_runtime100.jsx)(Unfold_default, {})),
    "aria-describedby": ariaDescribedby,
    "aria-label": ariaLabel,
    "aria-labelledby": ariaLabelledby,
    id,
    name
  } = _ref, other = _objectWithoutPropertiesLoose(_ref, _excluded69);
  const formControl = React106.useContext(FormControlContext_default);
  if (true) {
    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;
    React106.useEffect(() => {
      if (registerEffect) {
        return registerEffect();
      }
      return void 0;
    }, [registerEffect]);
  }
  const disabledProp = (_ref2 = (_inProps$disabled = inProps.disabled) != null ? _inProps$disabled : formControl == null ? void 0 : formControl.disabled) != null ? _ref2 : disabledExternalProp;
  const size = (_ref3 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref3 : sizeProp;
  const color = formControl != null && formControl.error ? "danger" : (_ref4 = (_inProps$color = inProps.color) != null ? _inProps$color : formControl == null ? void 0 : formControl.color) != null ? _ref4 : colorProp;
  const renderValue = renderValueProp != null ? renderValueProp : defaultRenderSingleValue2;
  const [anchorEl, setAnchorEl] = React106.useState(null);
  const [groupedOptions, setGroupedOptions] = React106.useState([]);
  const options = React106.useMemo(() => flattenOptionGroups(groupedOptions), [groupedOptions]);
  const [listboxOpen, setListboxOpen] = useControlled({
    controlled: listboxOpenProp,
    default: defaultListboxOpen,
    name: "SelectUnstyled",
    state: "listboxOpen"
  });
  const rootRef = React106.useRef(null);
  const buttonRef = React106.useRef(null);
  const listboxRef = React106.useRef(null);
  const handleRef = useForkRef(ref, rootRef);
  React106.useImperativeHandle(action, () => ({
    focusVisible: () => {
      var _buttonRef$current;
      (_buttonRef$current = buttonRef.current) == null ? void 0 : _buttonRef$current.focus();
    }
  }), []);
  React106.useEffect(() => {
    setGroupedOptions(getOptionsFromChildren(children));
  }, [children]);
  React106.useEffect(() => {
    setAnchorEl(rootRef.current);
  }, []);
  React106.useEffect(() => {
    if (autoFocus) {
      buttonRef.current.focus();
    }
  }, [autoFocus]);
  const handleOpenChange = (isOpen) => {
    setListboxOpen(isOpen);
    onListboxOpenChange == null ? void 0 : onListboxOpenChange(isOpen);
    if (!isOpen) {
      onClose == null ? void 0 : onClose();
    }
  };
  const {
    buttonActive,
    buttonFocusVisible,
    disabled,
    getButtonProps,
    getListboxProps,
    getOptionProps,
    getOptionState,
    value
  } = useSelect_default({
    buttonRef,
    defaultValue,
    disabled: disabledProp,
    listboxId,
    multiple: false,
    onChange,
    onOpenChange: handleOpenChange,
    open: listboxOpen,
    options,
    value: valueProp
  });
  const ownerState = _extends({}, props, {
    active: buttonActive,
    defaultListboxOpen,
    disabled,
    focusVisible: buttonFocusVisible,
    open: listboxOpen,
    renderValue,
    value,
    size,
    variant,
    color
  });
  const classes = useUtilityClasses56(ownerState);
  const selectedOptions = React106.useMemo(() => {
    return options.find((o) => value === o.value);
  }, [options, value]);
  const rootProps = useSlotProps({
    elementType: SelectRoot,
    getSlotProps: (handlers) => ({
      onMouseDown: (event) => {
        var _handlers$onClick;
        if (!listboxOpen && event.target !== buttonRef.current && !event.isPropagationStopped()) {
          handleOpenChange(true);
        }
        (_handlers$onClick = handlers.onClick) == null ? void 0 : _handlers$onClick.call(handlers, event);
      }
    }),
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref: handleRef
    },
    ownerState,
    className: classes.root
  });
  const buttonProps = useSlotProps({
    elementType: SelectButton,
    getSlotProps: getButtonProps,
    externalSlotProps: componentsProps.button,
    additionalProps: {
      "aria-describedby": ariaDescribedby != null ? ariaDescribedby : formControl == null ? void 0 : formControl["aria-describedby"],
      "aria-label": ariaLabel,
      "aria-labelledby": ariaLabelledby,
      id: id != null ? id : formControl == null ? void 0 : formControl.htmlFor,
      name
    },
    ownerState,
    className: classes.button
  });
  const resolveListboxProps = typeof componentsProps.listbox === "function" ? componentsProps.listbox(ownerState) : componentsProps.listbox;
  const cachedModifiers = React106.useMemo(() => [{
    name: "offset",
    options: {
      offset: [0, 4]
    }
  }, {
    name: "equalWidth",
    enabled: true,
    phase: "beforeWrite",
    requires: ["computeStyles"],
    fn: ({
      state
    }) => {
      state.styles.popper.width = `${state.rects.reference.width}px`;
    }
  }, ...(resolveListboxProps == null ? void 0 : resolveListboxProps.modifiers) || []], [resolveListboxProps == null ? void 0 : resolveListboxProps.modifiers]);
  const _useSlotProps = useSlotProps({
    elementType: SelectListbox,
    getSlotProps: getListboxProps,
    externalSlotProps: componentsProps.listbox,
    additionalProps: {
      ref: listboxRef,
      anchorEl,
      disablePortal: true,
      open: listboxOpen,
      placement: "bottom",
      modifiers: cachedModifiers
    },
    ownerState: _extends({}, ownerState, {
      nesting: false,
      row: false,
      wrap: false
    }),
    className: classes.listbox
  }), {
    component: listboxComponent
  } = _useSlotProps, listboxProps = _objectWithoutPropertiesLoose(_useSlotProps, _excluded213);
  const startDecoratorProps = useSlotProps({
    elementType: SelectStartDecorator,
    externalSlotProps: componentsProps.startDecorator,
    ownerState,
    className: classes.startDecorator
  });
  const endDecoratorProps = useSlotProps({
    elementType: SelectEndDecorator,
    externalSlotProps: componentsProps.endDecorator,
    ownerState,
    className: classes.endDecorator
  });
  const indicatorProps = useSlotProps({
    elementType: SelectIndicator,
    externalSlotProps: componentsProps.indicator,
    ownerState,
    className: classes.indicator
  });
  const context = {
    getOptionProps,
    getOptionState,
    listboxRef,
    color
  };
  return (0, import_jsx_runtime101.jsxs)(React106.Fragment, {
    children: [(0, import_jsx_runtime101.jsxs)(SelectRoot, _extends({}, rootProps, {
      children: [startDecorator && (0, import_jsx_runtime100.jsx)(SelectStartDecorator, _extends({}, startDecoratorProps, {
        children: startDecorator
      })), (0, import_jsx_runtime100.jsx)(SelectButton, _extends({}, buttonProps, {
        children: selectedOptions ? renderValue(selectedOptions) : placeholder
      })), endDecorator && (0, import_jsx_runtime100.jsx)(SelectEndDecorator, _extends({}, endDecoratorProps, {
        children: endDecorator
      })), indicator && (0, import_jsx_runtime100.jsx)(SelectIndicator, _extends({}, indicatorProps, {
        children: indicator
      }))]
    })), anchorEl && (0, import_jsx_runtime100.jsx)(PopperUnstyled_default, _extends({}, listboxProps, {
      as: listboxComponent,
      component: SelectListbox,
      children: (0, import_jsx_runtime100.jsx)(SelectUnstyledContext.Provider, {
        value: context,
        children: (0, import_jsx_runtime100.jsx)(ListProvider_default, {
          nested: true,
          children
        })
      })
    }))]
  });
});
true ? Select.propTypes = {
  action: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.shape({
    current: import_prop_types68.default.shape({
      focusVisible: import_prop_types68.default.func.isRequired
    })
  })]),
  children: import_prop_types68.default.node,
  color: import_prop_types68.default.oneOfType([import_prop_types68.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types68.default.string]),
  component: import_prop_types68.default.elementType,
  componentsProps: import_prop_types68.default.shape({
    button: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    endDecorator: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    indicator: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    listbox: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    root: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object]),
    startDecorator: import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object])
  }),
  defaultValue: import_prop_types68.default.any,
  disabled: import_prop_types68.default.bool,
  endDecorator: import_prop_types68.default.node,
  indicator: import_prop_types68.default.node,
  onChange: import_prop_types68.default.func,
  onClose: import_prop_types68.default.func,
  placeholder: import_prop_types68.default.node,
  renderValue: import_prop_types68.default.func,
  size: import_prop_types68.default.oneOfType([import_prop_types68.default.oneOf(["sm", "md", "lg"]), import_prop_types68.default.string]),
  startDecorator: import_prop_types68.default.node,
  sx: import_prop_types68.default.oneOfType([import_prop_types68.default.arrayOf(import_prop_types68.default.oneOfType([import_prop_types68.default.func, import_prop_types68.default.object, import_prop_types68.default.bool])), import_prop_types68.default.func, import_prop_types68.default.object]),
  value: import_prop_types68.default.any,
  variant: import_prop_types68.default.oneOfType([import_prop_types68.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types68.default.string])
} : void 0;
var Select_default = Select;

// node_modules/@mui/joy/Slider/Slider.js
init_objectWithoutPropertiesLoose();
init_extends();
var React107 = __toESM(require_react());
var import_prop_types69 = __toESM(require_prop_types());
init_clsx_m();
init_esm();

// node_modules/@mui/joy/Slider/sliderClasses.js
function getSliderUtilityClass2(slot) {
  return generateUtilityClass2("JoySlider", slot);
}
var sliderClasses = generateUtilityClasses2("JoySlider", ["root", "disabled", "dragging", "marked", "vertical", "trackInverted", "trackFalse", "rail", "track", "mark", "markActive", "markLabel", "thumb", "thumbStart", "thumbEnd", "valueLabel", "valueLabelOpen", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "disabled", "sizeSm", "sizeMd", "sizeLg"]);
var sliderClasses_default = sliderClasses;

// node_modules/@mui/joy/Slider/Slider.js
var import_jsx_runtime102 = __toESM(require_jsx_runtime());
var import_jsx_runtime103 = __toESM(require_jsx_runtime());
var _excluded70 = ["aria-label", "aria-valuetext", "component", "componentsProps", "classes", "disableSwap", "disabled", "defaultValue", "getAriaLabel", "getAriaValueText", "marks", "max", "min", "name", "onChange", "onChangeCommitted", "onMouseDown", "orientation", "scale", "step", "tabIndex", "track", "value", "valueLabelDisplay", "valueLabelFormat", "isRtl", "color", "size"];
var valueToPercent2 = (value, min, max) => (value - min) * 100 / (max - min);
var Identity3 = (x) => x;
var useUtilityClasses57 = (ownerState) => {
  const {
    disabled,
    dragging,
    marked,
    orientation,
    track,
    color,
    size
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", dragging && "dragging", marked && "marked", orientation === "vertical" && "vertical", track === "inverted" && "trackInverted", track === false && "trackFalse", color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],
    rail: ["rail"],
    track: ["track"],
    mark: ["mark"],
    markActive: ["markActive"],
    markLabel: ["markLabel"],
    markLabelActive: ["markLabelActive"],
    valueLabel: ["valueLabel"],
    valueLabelOpen: ["valueLabelOpen"],
    thumb: ["thumb", disabled && "disabled"],
    active: ["active"],
    focusVisible: ["focusVisible"]
  };
  return composeClasses(slots, getSliderUtilityClass2, {});
};
var sliderColorVariables = ({
  theme,
  ownerState
}) => (data = {}) => {
  var _theme$vars$palette, _theme$vars$palette2, _theme$vars$palette3;
  const color = ownerState.color;
  return {
    "--Slider-track-background": (_theme$vars$palette = theme.vars.palette[color]) == null ? void 0 : _theme$vars$palette[`solid${data.state || ""}Bg`],
    "--Slider-track-color": "#fff",
    "--Slider-rail-background": theme.vars.palette.background.level2,
    "--Slider-thumb-background": (_theme$vars$palette2 = theme.vars.palette[color]) == null ? void 0 : _theme$vars$palette2[`solid${data.state || ""}Color`],
    "--Slider-thumb-color": (_theme$vars$palette3 = theme.vars.palette[color]) == null ? void 0 : _theme$vars$palette3[`plain${data.state || ""}Color`]
  };
};
var SliderRoot = styled_default("span", {
  name: "JoySlider",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  const getColorVariables = sliderColorVariables({
    theme,
    ownerState
  });
  return [_extends({
    "--Slider-size": "max(42px, max(var(--Slider-thumb-size), var(--Slider-track-size)))",
    "--Slider-track-radius": "var(--Slider-size)",
    "--Slider-mark-background": theme.vars.palette.text.tertiary,
    [`& .${sliderClasses_default.markActive}`]: {
      "--Slider-mark-background": "var(--Slider-track-color)"
    }
  }, ownerState.size === "sm" && {
    "--Slider-mark-size": "2px",
    "--Slider-track-size": "4px",
    "--Slider-thumb-size": "10px",
    "--Slider-valueLabel-arrowSize": "6px"
  }, ownerState.size === "md" && {
    "--Slider-mark-size": "2px",
    "--Slider-track-size": "6px",
    "--Slider-thumb-size": "14px",
    "--Slider-valueLabel-arrowSize": "8px"
  }, ownerState.size === "lg" && {
    "--Slider-mark-size": "3px",
    "--Slider-track-size": "10px",
    "--Slider-thumb-size": "20px",
    "--Slider-valueLabel-arrowSize": "10px"
  }, {
    "--Slider-thumb-radius": "calc(var(--Slider-thumb-size) / 2)",
    "--Slider-thumb-width": "var(--Slider-thumb-size)"
  }, getColorVariables(), {
    "&:hover": _extends({}, getColorVariables({
      state: "Hover"
    })),
    [`&.${sliderClasses_default.disabled}`]: _extends({
      pointerEvents: "none",
      color: theme.vars.palette.text.tertiary
    }, getColorVariables({
      state: "Disabled"
    })),
    [`&.${sliderClasses_default.dragging}`]: {
      [`& .${sliderClasses_default.track}, & .${sliderClasses_default.thumb}`]: {
        transition: "none"
      }
    },
    boxSizing: "content-box",
    display: "inline-block",
    position: "relative",
    cursor: "pointer",
    touchAction: "none",
    WebkitTapHighlightColor: "transparent"
  }, ownerState.orientation === "horizontal" && {
    padding: "calc(var(--Slider-size) / 2) 0",
    width: "100%"
  }, ownerState.orientation === "vertical" && {
    padding: "0 calc(var(--Slider-size) / 2)",
    height: "100%"
  }, {
    "@media print": {
      colorAdjust: "exact"
    }
  })];
});
var SliderRail = styled_default("span", {
  name: "JoySlider",
  slot: "Rail",
  overridesResolver: (props, styles2) => styles2.rail
})(({
  ownerState
}) => [_extends({
  display: "block",
  position: "absolute",
  backgroundColor: ownerState.track === "inverted" ? "var(--Slider-track-background)" : "var(--Slider-rail-background)",
  borderRadius: "var(--Slider-track-radius)"
}, ownerState.orientation === "horizontal" && {
  height: "var(--Slider-track-size)",
  top: "50%",
  left: 0,
  right: 0,
  transform: "translateY(-50%)"
}, ownerState.orientation === "vertical" && {
  width: "var(--Slider-track-size)",
  top: 0,
  bottom: 0,
  left: "50%",
  transform: "translateX(-50%)"
}, ownerState.track === "inverted" && {
  opacity: 1
})]);
var SliderTrack = styled_default("span", {
  name: "JoySlider",
  slot: "Track",
  overridesResolver: (props, styles2) => styles2.track
})(({
  ownerState
}) => {
  return [_extends({
    display: "block",
    position: "absolute",
    color: "var(--Slider-track-color)",
    backgroundColor: ownerState.track === "inverted" ? "var(--Slider-rail-background)" : "var(--Slider-track-background)",
    transition: "left 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, width 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, bottom 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, height 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"
  }, ownerState.orientation === "horizontal" && {
    height: "var(--Slider-track-size)",
    top: "50%",
    transform: "translateY(-50%)",
    borderRadius: "var(--Slider-track-radius) 0 0 var(--Slider-track-radius)"
  }, ownerState.orientation === "vertical" && {
    width: "var(--Slider-track-size)",
    left: "50%",
    transform: "translateX(-50%)",
    borderRadius: "0 0 var(--Slider-track-radius) var(--Slider-track-radius)"
  }, ownerState.track === false && {
    display: "none"
  })];
});
var SliderThumb = styled_default("span", {
  name: "JoySlider",
  slot: "Thumb",
  overridesResolver: (props, styles2) => styles2.thumb
})(({
  ownerState,
  theme
}) => _extends({
  position: "absolute",
  boxSizing: "border-box",
  outline: 0,
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  width: "var(--Slider-thumb-width)",
  height: "var(--Slider-thumb-size)",
  borderRadius: "var(--Slider-thumb-radius)",
  boxShadow: "var(--Slider-thumb-shadow)",
  border: "2px solid",
  borderColor: "var(--Slider-thumb-color)",
  color: "var(--Slider-thumb-color)",
  backgroundColor: "var(--Slider-thumb-background)",
  transition: "box-shadow 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,left 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,bottom 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
  [theme.focus.selector]: theme.focus.default
}, ownerState.orientation === "horizontal" && {
  top: "50%",
  transform: "translate(-50%, -50%)"
}, ownerState.orientation === "vertical" && {
  left: "50%",
  transform: "translate(-50%, 50%)"
}));
var SliderMark = styled_default("span", {
  name: "JoySlider",
  slot: "Mark",
  overridesResolver: (props, styles2) => styles2.mark
})(({
  ownerState
}) => {
  return _extends({
    position: "absolute",
    width: "var(--Slider-mark-size)",
    height: "var(--Slider-mark-size)",
    borderRadius: "var(--Slider-mark-size)",
    backgroundColor: "var(--Slider-mark-background)"
  }, ownerState.orientation === "horizontal" && _extends({
    top: "50%",
    transform: `translate(calc(var(--Slider-mark-size) / -2), -50%)`
  }, ownerState.percent === 0 && {
    transform: `translate(min(var(--Slider-mark-size), 3px), -50%)`
  }, ownerState.percent === 100 && {
    transform: `translate(calc(var(--Slider-mark-size) * -1 - min(var(--Slider-mark-size), 3px)), -50%)`
  }), ownerState.orientation === "vertical" && _extends({
    left: "50%",
    transform: "translate(-50%, calc(var(--Slider-mark-size) / 2))"
  }, ownerState.percent === 0 && {
    transform: `translate(-50%, calc(min(var(--Slider-mark-size), 3px) * -1))`
  }, ownerState.percent === 100 && {
    transform: `translate(-50%, calc(var(--Slider-mark-size) * 1 + min(var(--Slider-mark-size), 3px)))`
  }));
});
var SliderValueLabel = styled_default("span", {
  name: "JoySlider",
  slot: "ValueLabel",
  overridesResolver: (props, styles2) => styles2.valueLabel
})(({
  theme,
  ownerState
}) => _extends({}, ownerState.size === "sm" && {
  fontSize: theme.fontSize.xs,
  lineHeight: theme.lineHeight.md,
  paddingInline: "0.25rem",
  minWidth: "20px"
}, ownerState.size === "md" && {
  fontSize: theme.fontSize.sm,
  lineHeight: theme.lineHeight.md,
  paddingInline: "0.375rem",
  minWidth: "24px"
}, ownerState.size === "lg" && {
  fontSize: theme.fontSize.md,
  lineHeight: theme.lineHeight.md,
  paddingInline: "0.5rem",
  minWidth: "28px"
}, {
  zIndex: 1,
  display: "flex",
  alignItems: "center",
  justifyContent: "center",
  whiteSpace: "nowrap",
  fontFamily: theme.vars.fontFamily.body,
  fontWeight: theme.vars.fontWeight.md,
  bottom: 0,
  transformOrigin: "bottom center",
  transform: "translateY(calc((var(--Slider-thumb-size) + var(--Slider-valueLabel-arrowSize)) * -1)) scale(0)",
  position: "absolute",
  backgroundColor: theme.vars.palette.background.tooltip,
  boxShadow: theme.vars.shadow.sm,
  borderRadius: theme.vars.radius.xs,
  color: "#fff",
  "&::before": {
    display: "var(--Slider-valueLabel-arrowDisplay)",
    position: "absolute",
    content: '""',
    color: theme.vars.palette.background.tooltip,
    bottom: 0,
    border: "calc(var(--Slider-valueLabel-arrowSize) / 2) solid",
    borderColor: "currentColor",
    borderRightColor: "transparent",
    borderBottomColor: "transparent",
    borderLeftColor: "transparent",
    left: "50%",
    transform: "translate(-50%, 100%)",
    backgroundColor: "transparent"
  },
  [`&.${sliderClasses_default.valueLabelOpen}`]: {
    transform: "translateY(calc((var(--Slider-thumb-size) + var(--Slider-valueLabel-arrowSize)) * -1)) scale(1)"
  }
}));
var SliderMarkLabel = styled_default("span", {
  name: "JoySlider",
  slot: "MarkLabel",
  overridesResolver: (props, styles2) => styles2.markLabel
})(({
  theme,
  ownerState
}) => _extends({
  fontFamily: theme.vars.fontFamily.body
}, ownerState.size === "sm" && {
  fontSize: theme.vars.fontSize.xs
}, ownerState.size === "md" && {
  fontSize: theme.vars.fontSize.sm
}, ownerState.size === "lg" && {
  fontSize: theme.vars.fontSize.md
}, {
  color: theme.palette.text.tertiary,
  position: "absolute",
  whiteSpace: "nowrap"
}, ownerState.orientation === "horizontal" && {
  top: "calc(50% + 4px + (max(var(--Slider-track-size), var(--Slider-thumb-size)) / 2))",
  transform: "translateX(-50%)"
}, ownerState.orientation === "vertical" && {
  left: "calc(50% + 8px + (max(var(--Slider-track-size), var(--Slider-thumb-size)) / 2))",
  transform: "translateY(50%)"
}));
var SliderInput = styled_default("input", {
  name: "JoySlider",
  slot: "Input",
  overridesResolver: (props, styles2) => styles2.input
})({});
var Slider = React107.forwardRef(function Slider2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoySlider"
  });
  const {
    "aria-label": ariaLabel,
    "aria-valuetext": ariaValuetext,
    component,
    componentsProps = {},
    classes: classesProp,
    disableSwap = false,
    disabled = false,
    defaultValue,
    getAriaLabel,
    getAriaValueText,
    marks: marksProp = false,
    max = 100,
    min = 0,
    orientation = "horizontal",
    scale = Identity3,
    step = 1,
    track = "normal",
    valueLabelDisplay = "off",
    valueLabelFormat = Identity3,
    isRtl = false,
    color = "primary",
    size = "md"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded70);
  const ownerState = _extends({}, props, {
    marks: marksProp,
    classes: classesProp,
    disabled,
    defaultValue,
    isRtl,
    max,
    min,
    orientation,
    scale,
    step,
    track,
    valueLabelDisplay,
    valueLabelFormat,
    color,
    size
  });
  const {
    axisProps: axisProps2,
    getRootProps,
    getHiddenInputProps,
    getThumbProps,
    open,
    active,
    axis,
    focusedThumbIndex,
    range,
    dragging,
    marks,
    values,
    trackOffset,
    trackLeap
  } = useSlider(_extends({}, ownerState, {
    ref
  }));
  ownerState.marked = marks.length > 0 && marks.some((mark) => mark.label);
  ownerState.dragging = dragging;
  const trackStyle = _extends({}, axisProps2[axis].offset(trackOffset), axisProps2[axis].leap(trackLeap));
  const classes = useUtilityClasses57(ownerState);
  const rootProps = useSlotProps({
    elementType: SliderRoot,
    getSlotProps: getRootProps,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      as: component
    },
    ownerState,
    className: classes.root
  });
  const railProps = useSlotProps({
    elementType: SliderRail,
    externalSlotProps: componentsProps.rail,
    ownerState,
    className: classes.rail
  });
  const trackProps = useSlotProps({
    elementType: SliderTrack,
    externalSlotProps: componentsProps.track,
    additionalProps: {
      style: trackStyle
    },
    ownerState,
    className: classes.track
  });
  const markProps = useSlotProps({
    elementType: SliderMark,
    externalSlotProps: componentsProps.mark,
    ownerState,
    className: classes.mark
  });
  const markLabelProps = useSlotProps({
    elementType: SliderMarkLabel,
    externalSlotProps: componentsProps.markLabel,
    ownerState,
    className: classes.markLabel
  });
  const thumbProps = useSlotProps({
    elementType: SliderThumb,
    getSlotProps: getThumbProps,
    externalSlotProps: componentsProps.thumb,
    ownerState,
    className: classes.thumb
  });
  const inputProps = useSlotProps({
    elementType: SliderInput,
    getSlotProps: getHiddenInputProps,
    externalSlotProps: componentsProps.input,
    ownerState
  });
  const valueLabelProps = useSlotProps({
    elementType: SliderValueLabel,
    externalSlotProps: componentsProps.valueLabel,
    ownerState,
    className: classes.valueLabel
  });
  return (0, import_jsx_runtime103.jsxs)(SliderRoot, _extends({}, rootProps, {
    children: [(0, import_jsx_runtime102.jsx)(SliderRail, _extends({}, railProps)), (0, import_jsx_runtime102.jsx)(SliderTrack, _extends({}, trackProps)), marks.filter((mark) => mark.value >= min && mark.value <= max).map((mark, index) => {
      const percent = valueToPercent2(mark.value, min, max);
      const style = axisProps2[axis].offset(percent);
      let markActive;
      if (track === false) {
        markActive = values.indexOf(mark.value) !== -1;
      } else {
        markActive = track === "normal" && (range ? mark.value >= values[0] && mark.value <= values[values.length - 1] : mark.value <= values[0]) || track === "inverted" && (range ? mark.value <= values[0] || mark.value >= values[values.length - 1] : mark.value >= values[0]);
      }
      return (0, import_jsx_runtime103.jsxs)(React107.Fragment, {
        children: [(0, import_jsx_runtime102.jsx)(SliderMark, _extends({
          "data-index": index
        }, markProps, {
          style: _extends({}, style, markProps.style),
          ownerState: _extends({}, ownerState, {
            percent
          }),
          className: clsx_m_default(markProps.className, markActive && classes.markActive)
        })), mark.label != null ? (0, import_jsx_runtime102.jsx)(SliderMarkLabel, _extends({
          "aria-hidden": true,
          "data-index": index
        }, markLabelProps, {
          ownerState,
          style: _extends({}, style, markLabelProps.style),
          className: clsx_m_default(classes.markLabel, markLabelProps.className, markActive && classes.markLabelActive),
          children: mark.label
        })) : null]
      }, mark.value);
    }), values.map((value, index) => {
      const percent = valueToPercent2(value, min, max);
      const style = axisProps2[axis].offset(percent);
      return (0, import_jsx_runtime103.jsxs)(SliderThumb, _extends({
        "data-index": index
      }, thumbProps, {
        className: clsx_m_default(thumbProps.className, active === index && classes.active, focusedThumbIndex === index && classes.focusVisible),
        style: _extends({}, style, {
          pointerEvents: disableSwap && active !== index ? "none" : void 0
        }, thumbProps.style),
        children: [(0, import_jsx_runtime102.jsx)(SliderInput, _extends({
          "data-index": index,
          "aria-label": getAriaLabel ? getAriaLabel(index) : ariaLabel,
          "aria-valuenow": scale(value),
          "aria-valuetext": getAriaValueText ? getAriaValueText(scale(value), index) : ariaValuetext,
          value: values[index]
        }, inputProps)), valueLabelDisplay !== "off" ? (0, import_jsx_runtime102.jsx)(SliderValueLabel, _extends({}, valueLabelProps, {
          className: clsx_m_default(valueLabelProps.className, (open === index || active === index || valueLabelDisplay === "on") && classes.valueLabelOpen),
          children: value
        })) : null]
      }), index);
    })]
  }));
});
true ? Slider.propTypes = {
  "aria-label": import_prop_types69.default.string,
  "aria-valuetext": import_prop_types69.default.string,
  children: import_prop_types69.default.node,
  classes: import_prop_types69.default.object,
  color: import_prop_types69.default.oneOfType([import_prop_types69.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types69.default.string]),
  component: import_prop_types69.default.elementType,
  componentsProps: import_prop_types69.default.shape({
    input: import_prop_types69.default.oneOfType([import_prop_types69.default.func, import_prop_types69.default.object]),
    mark: import_prop_types69.default.oneOfType([import_prop_types69.default.func, import_prop_types69.default.object]),
    markLabel: import_prop_types69.default.oneOfType([import_prop_types69.default.func, import_prop_types69.default.object]),
    rail: import_prop_types69.default.oneOfType([import_prop_types69.default.func, import_prop_types69.default.object]),
    root: import_prop_types69.default.oneOfType([import_prop_types69.default.func, import_prop_types69.default.object]),
    thumb: import_prop_types69.default.oneOfType([import_prop_types69.default.func, import_prop_types69.default.object]),
    track: import_prop_types69.default.oneOfType([import_prop_types69.default.func, import_prop_types69.default.object]),
    valueLabel: import_prop_types69.default.oneOfType([import_prop_types69.default.func, import_prop_types69.default.object])
  }),
  defaultValue: import_prop_types69.default.oneOfType([import_prop_types69.default.arrayOf(import_prop_types69.default.number), import_prop_types69.default.number]),
  disabled: import_prop_types69.default.bool,
  disableSwap: import_prop_types69.default.bool,
  getAriaLabel: import_prop_types69.default.func,
  getAriaValueText: import_prop_types69.default.func,
  isRtl: import_prop_types69.default.bool,
  marks: import_prop_types69.default.oneOfType([import_prop_types69.default.arrayOf(import_prop_types69.default.shape({
    label: import_prop_types69.default.node,
    value: import_prop_types69.default.number.isRequired
  })), import_prop_types69.default.bool]),
  max: import_prop_types69.default.number,
  min: import_prop_types69.default.number,
  name: import_prop_types69.default.string,
  onChange: import_prop_types69.default.func,
  onChangeCommitted: import_prop_types69.default.func,
  onMouseDown: import_prop_types69.default.func,
  orientation: import_prop_types69.default.oneOf(["horizontal", "vertical"]),
  scale: import_prop_types69.default.func,
  size: import_prop_types69.default.oneOfType([import_prop_types69.default.oneOf(["sm", "md", "lg"]), import_prop_types69.default.string]),
  step: import_prop_types69.default.number,
  sx: import_prop_types69.default.oneOfType([import_prop_types69.default.arrayOf(import_prop_types69.default.oneOfType([import_prop_types69.default.func, import_prop_types69.default.object, import_prop_types69.default.bool])), import_prop_types69.default.func, import_prop_types69.default.object]),
  tabIndex: import_prop_types69.default.number,
  track: import_prop_types69.default.oneOf(["inverted", "normal", false]),
  value: import_prop_types69.default.oneOfType([import_prop_types69.default.arrayOf(import_prop_types69.default.number), import_prop_types69.default.number]),
  valueLabelDisplay: import_prop_types69.default.oneOf(["auto", "off", "on"]),
  valueLabelFormat: import_prop_types69.default.oneOfType([import_prop_types69.default.func, import_prop_types69.default.string])
} : void 0;
var Slider_default = Slider;

// node_modules/@mui/joy/Stack/Stack.js
init_esm2();
var import_prop_types70 = __toESM(require_prop_types());
var Stack = createStack({
  componentName: "JoyStack",
  createStyledComponent: styled_default("div", {
    name: "JoyStack",
    slot: "Root",
    overridesResolver: (props, styles2) => styles2.root
  }),
  useThemeProps: (inProps) => useThemeProps2({
    props: inProps,
    name: "JoyStack"
  })
});
true ? Stack.propTypes = {
  children: import_prop_types70.default.node,
  direction: import_prop_types70.default.oneOfType([import_prop_types70.default.oneOf(["column-reverse", "column", "row-reverse", "row"]), import_prop_types70.default.arrayOf(import_prop_types70.default.oneOf(["column-reverse", "column", "row-reverse", "row"])), import_prop_types70.default.object]),
  divider: import_prop_types70.default.node,
  spacing: import_prop_types70.default.oneOfType([import_prop_types70.default.arrayOf(import_prop_types70.default.oneOfType([import_prop_types70.default.number, import_prop_types70.default.string])), import_prop_types70.default.number, import_prop_types70.default.object, import_prop_types70.default.string]),
  sx: import_prop_types70.default.oneOfType([import_prop_types70.default.arrayOf(import_prop_types70.default.oneOfType([import_prop_types70.default.func, import_prop_types70.default.object, import_prop_types70.default.bool])), import_prop_types70.default.func, import_prop_types70.default.object])
} : void 0;
var Stack_default = Stack;

// node_modules/@mui/joy/Stack/stackClasses.js
function getStackUtilityClass(slot) {
  return generateUtilityClass2("JoyStack", slot);
}
var stackClasses = generateUtilityClasses2("JoyStack", ["root"]);
var stackClasses_default = stackClasses;

// node_modules/@mui/joy/Switch/Switch.js
init_objectWithoutPropertiesLoose();
init_extends();
var React108 = __toESM(require_react());
var import_prop_types71 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Switch/switchClasses.js
function getSwitchUtilityClass(slot) {
  return generateUtilityClass2("JoySwitch", slot);
}
var switchClasses = generateUtilityClasses2("JoySwitch", ["root", "checked", "disabled", "action", "input", "thumb", "track", "focusVisible", "readOnly", "colorPrimary", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantOutlined", "variantSoft", "variantSolid"]);
var switchClasses_default = switchClasses;

// node_modules/@mui/joy/Switch/Switch.js
var import_jsx_runtime104 = __toESM(require_jsx_runtime());
var import_jsx_runtime105 = __toESM(require_jsx_runtime());
var _excluded71 = ["checked", "component", "componentsProps", "defaultChecked", "disabled", "onBlur", "onChange", "onFocus", "onFocusVisible", "readOnly", "required", "id", "color", "variant", "size", "startDecorator", "endDecorator"];
var useUtilityClasses58 = (ownerState) => {
  const {
    checked,
    disabled,
    focusVisible,
    readOnly,
    color,
    variant
  } = ownerState;
  const slots = {
    root: ["root", checked && "checked", disabled && "disabled", focusVisible && "focusVisible", readOnly && "readOnly", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`],
    thumb: ["thumb", checked && "checked"],
    track: ["track", checked && "checked"],
    action: ["action", focusVisible && "focusVisible"],
    input: ["input"],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  return composeClasses(slots, getSwitchUtilityClass, {});
};
var switchColorVariables = ({
  theme,
  ownerState
}) => (data = {}) => {
  var _theme$vars$palette, _theme$vars$palette2, _theme$vars$palette3, _theme$vars$palette4, _theme$vars$palette5;
  const variant = ownerState.variant;
  const color = ownerState.color;
  return {
    "--Switch-track-background": (_theme$vars$palette = theme.vars.palette[color]) == null ? void 0 : _theme$vars$palette[`${variant}${data.state || ""}Bg`],
    "--Switch-track-color": (_theme$vars$palette2 = theme.vars.palette[color]) == null ? void 0 : _theme$vars$palette2[`${variant}Color`],
    "--Switch-track-borderColor": variant === "outlined" ? (_theme$vars$palette3 = theme.vars.palette[color]) == null ? void 0 : _theme$vars$palette3[`${variant}${data.state || ""}Border`] : "currentColor",
    "--Switch-thumb-background": (_theme$vars$palette4 = theme.vars.palette[color]) == null ? void 0 : _theme$vars$palette4[`${variant}${data.state || ""}Color`],
    "--Switch-thumb-color": (_theme$vars$palette5 = theme.vars.palette[color]) == null ? void 0 : _theme$vars$palette5[`${variant}Bg`]
  };
};
var SwitchRoot = styled_default("div", {
  name: "JoySwitch",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$variants2;
  const getColorVariables = switchColorVariables({
    theme,
    ownerState
  });
  return _extends({
    "--variant-borderWidth": (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : (_theme$variants2 = _theme$variants[ownerState.color]) == null ? void 0 : _theme$variants2["--variant-borderWidth"],
    "--Switch-track-radius": theme.vars.radius.lg,
    "--Switch-thumb-shadow": ownerState.variant === "soft" ? "none" : "0 0 0 1px var(--Switch-track-background)"
  }, ownerState.size === "sm" && {
    "--Switch-track-width": "40px",
    "--Switch-track-height": "20px",
    "--Switch-thumb-size": "12px",
    "--Switch-gap": "6px",
    fontSize: theme.vars.fontSize.sm
  }, ownerState.size === "md" && {
    "--Switch-track-width": "48px",
    "--Switch-track-height": "24px",
    "--Switch-thumb-size": "16px",
    "--Switch-gap": "8px",
    fontSize: theme.vars.fontSize.md
  }, ownerState.size === "lg" && {
    "--Switch-track-width": "64px",
    "--Switch-track-height": "32px",
    "--Switch-thumb-size": "24px",
    "--Switch-gap": "12px"
  }, {
    "--internal-paddingBlock": `max((var(--Switch-track-height) - 2 * var(--variant-borderWidth) - var(--Switch-thumb-size)) / 2, 0px)`,
    "--Switch-thumb-radius": `max((var(--Switch-track-radius) - var(--variant-borderWidth)) - var(--internal-paddingBlock), min(var(--internal-paddingBlock) / 2, (var(--Switch-track-radius) - var(--variant-borderWidth)) / 2))`,
    "--Switch-thumb-width": "var(--Switch-thumb-size)",
    "--Switch-thumb-offset": `max((var(--Switch-track-height) - var(--Switch-thumb-size)) / 2, 0px)`
  }, getColorVariables(), {
    "&:hover": _extends({}, getColorVariables({
      state: "Hover"
    })),
    [`&.${switchClasses_default.checked}`]: _extends({}, getColorVariables(), {
      "&:hover": _extends({}, getColorVariables({
        state: "Hover"
      }))
    }),
    [`&.${switchClasses_default.disabled}`]: _extends({
      pointerEvents: "none",
      color: theme.vars.palette.text.tertiary
    }, getColorVariables({
      state: "Disabled"
    })),
    display: "inline-flex",
    alignItems: "center",
    alignSelf: "center",
    fontFamily: theme.vars.fontFamily.body,
    position: "relative",
    padding: "calc((var(--Switch-thumb-size) / 2) - (var(--Switch-track-height) / 2)) calc(-1 * var(--Switch-thumb-offset))",
    backgroundColor: "initial",
    border: "none"
  });
});
var SwitchAction = styled_default("div", {
  name: "JoySwitch",
  slot: "Action",
  overridesResolver: (props, styles2) => styles2.action
})(({
  theme
}) => ({
  borderRadius: "var(--Switch-track-radius)",
  position: "absolute",
  top: 0,
  left: 0,
  bottom: 0,
  right: 0,
  [theme.focus.selector]: theme.focus.default
}));
var SwitchInput = styled_default("input", {
  name: "JoySwitch",
  slot: "Input",
  overridesResolver: (props, styles2) => styles2.input
})({
  margin: 0,
  height: "100%",
  width: "100%",
  opacity: 0,
  position: "absolute",
  cursor: "pointer"
});
var SwitchTrack = styled_default("span", {
  name: "JoySwitch",
  slot: "Track",
  overridesResolver: (props, styles2) => styles2.track
})(({
  theme,
  ownerState
}) => _extends({
  position: "relative",
  color: "var(--Switch-track-color)",
  height: "var(--Switch-track-height)",
  width: "var(--Switch-track-width)",
  display: "flex",
  flexShrink: 0,
  justifyContent: "space-between",
  alignItems: "center",
  boxSizing: "border-box",
  border: "var(--variant-borderWidth) solid",
  borderColor: "var(--Switch-track-borderColor)",
  backgroundColor: "var(--Switch-track-background)",
  borderRadius: "var(--Switch-track-radius)",
  fontFamily: theme.vars.fontFamily.body
}, ownerState.size === "sm" && {
  fontSize: theme.vars.fontSize.xs
}, ownerState.size === "md" && {
  fontSize: theme.vars.fontSize.sm
}, ownerState.size === "lg" && {
  fontSize: theme.vars.fontSize.md
}));
var SwitchThumb = styled_default("span", {
  name: "JoySwitch",
  slot: "Thumb",
  overridesResolver: (props, styles2) => styles2.thumb
})({
  "--Icon-fontSize": "calc(var(--Switch-thumb-size) * 0.75)",
  transition: "left 0.2s",
  display: "inline-flex",
  justifyContent: "center",
  alignItems: "center",
  position: "absolute",
  top: "50%",
  left: "calc(50% - var(--Switch-track-width) / 2 + var(--Switch-thumb-width) / 2 + var(--Switch-thumb-offset))",
  transform: "translate(-50%, -50%)",
  width: "var(--Switch-thumb-width)",
  height: "var(--Switch-thumb-size)",
  borderRadius: "var(--Switch-thumb-radius)",
  boxShadow: "var(--Switch-thumb-shadow)",
  color: "var(--Switch-thumb-color)",
  backgroundColor: "var(--Switch-thumb-background)",
  [`&.${switchClasses_default.checked}`]: {
    left: "calc(50% + var(--Switch-track-width) / 2 - var(--Switch-thumb-width) / 2 - var(--Switch-thumb-offset))"
  }
});
var SwitchStartDecorator = styled_default("span", {
  name: "JoySwitch",
  slot: "StartDecorator",
  overridesResolver: (props, styles2) => styles2.startDecorator
})({
  display: "inline-flex",
  marginInlineEnd: "var(--Switch-gap)"
});
var SwitchEndDecorator = styled_default("span", {
  name: "JoySwitch",
  slot: "EndDecorator",
  overridesResolver: (props, styles2) => styles2.endDecorator
})({
  display: "inline-flex",
  marginInlineStart: "var(--Switch-gap)"
});
var Switch = React108.forwardRef(function Switch2(inProps, ref) {
  var _ref, _inProps$disabled, _ref2, _inProps$size, _ref3, _inProps$color;
  const props = useThemeProps2({
    props: inProps,
    name: "JoySwitch"
  });
  const {
    checked: checkedProp,
    component = "div",
    componentsProps = {},
    defaultChecked,
    disabled: disabledExternalProp,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible,
    readOnly: readOnlyProp,
    id,
    color: colorProp,
    variant = "solid",
    size: sizeProp = "md",
    startDecorator,
    endDecorator
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded71);
  const formControl = React108.useContext(FormControlContext_default);
  if (true) {
    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;
    React108.useEffect(() => {
      if (registerEffect) {
        return registerEffect();
      }
      return void 0;
    }, [registerEffect]);
  }
  const disabledProp = (_ref = (_inProps$disabled = inProps.disabled) != null ? _inProps$disabled : formControl == null ? void 0 : formControl.disabled) != null ? _ref : disabledExternalProp;
  const size = (_ref2 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref2 : sizeProp;
  const color = formControl != null && formControl.error ? "danger" : (_ref3 = (_inProps$color = inProps.color) != null ? _inProps$color : formControl == null ? void 0 : formControl.color) != null ? _ref3 : colorProp;
  const useSwitchProps = {
    checked: checkedProp,
    defaultChecked,
    disabled: disabledProp,
    onBlur,
    onChange,
    onFocus,
    onFocusVisible,
    readOnly: readOnlyProp
  };
  const {
    getInputProps,
    checked,
    disabled,
    focusVisible,
    readOnly
  } = useSwitch(useSwitchProps);
  const ownerState = _extends({}, props, {
    id,
    checked,
    disabled,
    focusVisible,
    readOnly,
    color: checked ? color || "primary" : color || "neutral",
    variant,
    size
  });
  const classes = useUtilityClasses58(ownerState);
  const rootProps = useSlotProps({
    elementType: SwitchRoot,
    externalSlotProps: componentsProps.root,
    ownerState,
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    className: classes.root
  });
  const startDecoratorProps = useSlotProps({
    elementType: SwitchStartDecorator,
    externalSlotProps: componentsProps.startDecorator,
    ownerState,
    additionalProps: {
      "aria-hidden": true
    },
    className: classes.startDecorator
  });
  const endDecoratorProps = useSlotProps({
    elementType: SwitchEndDecorator,
    externalSlotProps: componentsProps.endDecorator,
    ownerState,
    additionalProps: {
      "aria-hidden": true
    },
    className: classes.endDecorator
  });
  const trackProps = useSlotProps({
    elementType: SwitchTrack,
    externalSlotProps: componentsProps.track,
    ownerState,
    className: classes.track
  });
  const thumbProps = useSlotProps({
    elementType: SwitchThumb,
    externalSlotProps: componentsProps.thumb,
    ownerState,
    className: classes.thumb
  });
  const actionProps = useSlotProps({
    elementType: SwitchAction,
    externalSlotProps: componentsProps.action,
    ownerState,
    className: classes.action
  });
  const inputProps = useSlotProps({
    elementType: SwitchInput,
    getSlotProps: getInputProps,
    externalSlotProps: componentsProps.input,
    ownerState,
    additionalProps: {
      id: id != null ? id : formControl == null ? void 0 : formControl.htmlFor,
      "aria-describedby": formControl == null ? void 0 : formControl["aria-describedby"]
    },
    className: classes.input
  });
  return (0, import_jsx_runtime105.jsxs)(SwitchRoot, _extends({}, rootProps, {
    children: [startDecorator && (0, import_jsx_runtime104.jsx)(SwitchStartDecorator, _extends({}, startDecoratorProps, {
      children: typeof startDecorator === "function" ? startDecorator(ownerState) : startDecorator
    })), (0, import_jsx_runtime105.jsxs)(SwitchTrack, _extends({}, trackProps, {
      children: [trackProps == null ? void 0 : trackProps.children, (0, import_jsx_runtime104.jsx)(SwitchThumb, _extends({}, thumbProps))]
    })), (0, import_jsx_runtime104.jsx)(SwitchAction, _extends({}, actionProps, {
      children: (0, import_jsx_runtime104.jsx)(SwitchInput, _extends({}, inputProps))
    })), endDecorator && (0, import_jsx_runtime104.jsx)(SwitchEndDecorator, _extends({}, endDecoratorProps, {
      children: typeof endDecorator === "function" ? endDecorator(ownerState) : endDecorator
    }))]
  }));
});
true ? Switch.propTypes = {
  checked: import_prop_types71.default.bool,
  children: import_prop_types71.default.node,
  color: import_prop_types71.default.oneOfType([import_prop_types71.default.oneOf(["danger", "info", "primary", "success", "warning"]), import_prop_types71.default.string]),
  component: import_prop_types71.default.elementType,
  componentsProps: import_prop_types71.default.shape({
    action: import_prop_types71.default.oneOfType([import_prop_types71.default.func, import_prop_types71.default.object]),
    endDecorator: import_prop_types71.default.oneOfType([import_prop_types71.default.func, import_prop_types71.default.object]),
    input: import_prop_types71.default.oneOfType([import_prop_types71.default.func, import_prop_types71.default.object]),
    root: import_prop_types71.default.oneOfType([import_prop_types71.default.func, import_prop_types71.default.object]),
    startDecorator: import_prop_types71.default.oneOfType([import_prop_types71.default.func, import_prop_types71.default.object]),
    thumb: import_prop_types71.default.oneOfType([import_prop_types71.default.func, import_prop_types71.default.object]),
    track: import_prop_types71.default.oneOfType([import_prop_types71.default.func, import_prop_types71.default.object])
  }),
  defaultChecked: import_prop_types71.default.bool,
  disabled: import_prop_types71.default.bool,
  endDecorator: import_prop_types71.default.oneOfType([import_prop_types71.default.node, import_prop_types71.default.func]),
  id: import_prop_types71.default.string,
  onBlur: import_prop_types71.default.func,
  onChange: import_prop_types71.default.func,
  onFocus: import_prop_types71.default.func,
  onFocusVisible: import_prop_types71.default.func,
  readOnly: import_prop_types71.default.bool,
  required: import_prop_types71.default.bool,
  size: import_prop_types71.default.oneOfType([import_prop_types71.default.oneOf(["sm", "md", "lg"]), import_prop_types71.default.string]),
  startDecorator: import_prop_types71.default.oneOfType([import_prop_types71.default.node, import_prop_types71.default.func]),
  sx: import_prop_types71.default.oneOfType([import_prop_types71.default.arrayOf(import_prop_types71.default.oneOfType([import_prop_types71.default.func, import_prop_types71.default.object, import_prop_types71.default.bool])), import_prop_types71.default.func, import_prop_types71.default.object]),
  variant: import_prop_types71.default.oneOfType([import_prop_types71.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types71.default.string])
} : void 0;
var Switch_default = Switch;

// node_modules/@mui/joy/Tab/Tab.js
init_objectWithoutPropertiesLoose();
init_extends();
var React109 = __toESM(require_react());
var import_prop_types72 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Tab/tabClasses.js
function getTabUtilityClass(slot) {
  return generateUtilityClass2("JoyTab", slot);
}
var tabListClasses = generateUtilityClasses2("JoyTab", ["root", "disabled", "focusVisible", "selected", "horizontal", "vertical", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid"]);
var tabClasses_default = tabListClasses;

// node_modules/@mui/joy/Tab/Tab.js
var import_jsx_runtime106 = __toESM(require_jsx_runtime());
var _excluded72 = ["action", "children", "value", "disabled", "onChange", "onClick", "onFocus", "component", "orientation", "variant", "color"];
var useUtilityClasses59 = (ownerState) => {
  const {
    selected,
    disabled,
    focusVisible,
    variant,
    color,
    orientation
  } = ownerState;
  const slots = {
    root: ["root", orientation, disabled && "disabled", focusVisible && "focusVisible", selected && "selected", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]
  };
  return composeClasses(slots, getTabUtilityClass, {});
};
var TabRoot = styled_default(ListItemButtonRoot, {
  name: "JoyTab",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants;
  const variantStyle = (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color];
  return _extends({
    justifyContent: "center",
    flexGrow: 1
  }, ownerState.selected && _extends({
    boxShadow: theme.vars.shadow.sm,
    fontWeight: "initial"
  }, !variantStyle.backgroundColor && {
    backgroundColor: theme.vars.palette.background.body,
    "&:hover": {
      backgroundColor: theme.vars.palette.background.body
    }
  }));
});
var Tab = React109.forwardRef(function Tab2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyTab"
  });
  const row = React109.useContext(RowListContext_default);
  const {
    action,
    children,
    disabled = false,
    component = "button",
    orientation = "horizontal",
    variant = "plain",
    color = "neutral"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded72);
  const tabRef = React109.useRef();
  const handleRef = useForkRef(tabRef, ref);
  const {
    active,
    focusVisible,
    setFocusVisible,
    selected,
    getRootProps
  } = useTab_default(_extends({}, props, {
    ref: handleRef
  }));
  React109.useImperativeHandle(action, () => ({
    focusVisible: () => {
      setFocusVisible(true);
      tabRef.current.focus();
    }
  }), [setFocusVisible]);
  const ownerState = _extends({}, props, {
    orientation,
    row,
    active,
    focusVisible,
    disabled,
    selected,
    variant,
    color
  });
  const classes = useUtilityClasses59(ownerState);
  const tabRootProps = useSlotProps({
    elementType: TabRoot,
    getSlotProps: getRootProps,
    externalSlotProps: {},
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    ownerState,
    className: classes.root
  });
  return (0, import_jsx_runtime106.jsx)(ListItemButtonOrientationContext_default.Provider, {
    value: orientation,
    children: (0, import_jsx_runtime106.jsx)(TabRoot, _extends({}, tabRootProps, {
      children
    }))
  });
});
true ? Tab.propTypes = {
  action: import_prop_types72.default.oneOfType([import_prop_types72.default.func, import_prop_types72.default.shape({
    current: import_prop_types72.default.shape({
      focusVisible: import_prop_types72.default.func.isRequired
    })
  })]),
  children: import_prop_types72.default.node,
  color: import_prop_types72.default.oneOfType([import_prop_types72.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types72.default.string]),
  component: import_prop_types72.default.elementType,
  disabled: import_prop_types72.default.bool,
  onChange: import_prop_types72.default.func,
  onClick: import_prop_types72.default.func,
  onFocus: import_prop_types72.default.func,
  orientation: import_prop_types72.default.oneOf(["horizontal", "vertical"]),
  sx: import_prop_types72.default.oneOfType([import_prop_types72.default.arrayOf(import_prop_types72.default.oneOfType([import_prop_types72.default.func, import_prop_types72.default.object, import_prop_types72.default.bool])), import_prop_types72.default.func, import_prop_types72.default.object]),
  value: import_prop_types72.default.oneOfType([import_prop_types72.default.number, import_prop_types72.default.string]),
  variant: import_prop_types72.default.oneOfType([import_prop_types72.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types72.default.string])
} : void 0;
var Tab_default = Tab;

// node_modules/@mui/joy/TabList/TabList.js
init_objectWithoutPropertiesLoose();
init_extends();
var React111 = __toESM(require_react());
var import_prop_types73 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Tabs/SizeTabsContext.js
var React110 = __toESM(require_react());
var SizeTabsContext = React110.createContext("md");
var SizeTabsContext_default = SizeTabsContext;

// node_modules/@mui/joy/TabList/tabListClasses.js
function getTabListUtilityClass(slot) {
  return generateUtilityClass2("JoyTabList", slot);
}
var tabListClasses2 = generateUtilityClasses2("JoyTabList", ["root", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg"]);
var tabListClasses_default = tabListClasses2;

// node_modules/@mui/joy/TabList/TabList.js
var import_jsx_runtime107 = __toESM(require_jsx_runtime());
var _excluded73 = ["component", "children", "variant", "color", "size"];
var useUtilityClasses60 = (ownerState) => {
  const {
    orientation,
    size,
    variant,
    color
  } = ownerState;
  const slots = {
    root: ["root", orientation, variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getTabListUtilityClass, {});
};
var TabListRoot = styled_default(ListRoot, {
  name: "JoyTabList",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(_extends({
  flexGrow: "initial",
  "--List-gap": "var(--Tabs-gap)",
  "--List-padding": "var(--Tabs-gap)",
  "--List-divider-gap": "0px"
}, scopedVariables));
var TabList = React111.forwardRef(function TabList2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyTabList"
  });
  const tabsSize = React111.useContext(SizeTabsContext_default);
  const {
    component = "div",
    variant = "soft",
    color = "neutral",
    size: sizeProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded73);
  const {
    isRtl,
    orientation,
    getRootProps,
    processChildren
  } = useTabsList_default(_extends({}, props, {
    ref
  }));
  const row = orientation === "horizontal";
  const size = sizeProp != null ? sizeProp : tabsSize;
  const ownerState = _extends({}, props, {
    isRtl,
    orientation,
    variant,
    color,
    size,
    row,
    nesting: false
  });
  const classes = useUtilityClasses60(ownerState);
  const tabsListRootProps = useSlotProps({
    elementType: TabListRoot,
    getSlotProps: getRootProps,
    externalSlotProps: {},
    externalForwardedProps: other,
    additionalProps: {
      as: component
    },
    ownerState,
    className: classes.root
  });
  const processedChildren = processChildren();
  return (0, import_jsx_runtime107.jsx)(TabListRoot, _extends({}, tabsListRootProps, {
    children: (0, import_jsx_runtime107.jsx)(ListProvider_default, {
      row,
      nested: true,
      children: processedChildren
    })
  }));
});
true ? TabList.propTypes = {
  children: import_prop_types73.default.node,
  color: import_prop_types73.default.oneOfType([import_prop_types73.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types73.default.string]),
  component: import_prop_types73.default.elementType,
  size: import_prop_types73.default.oneOfType([import_prop_types73.default.oneOf(["sm", "md", "lg"]), import_prop_types73.default.string]),
  sx: import_prop_types73.default.oneOfType([import_prop_types73.default.arrayOf(import_prop_types73.default.oneOfType([import_prop_types73.default.func, import_prop_types73.default.object, import_prop_types73.default.bool])), import_prop_types73.default.func, import_prop_types73.default.object]),
  variant: import_prop_types73.default.oneOfType([import_prop_types73.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types73.default.string])
} : void 0;
var TabList_default = TabList;

// node_modules/@mui/joy/TabPanel/TabPanel.js
init_objectWithoutPropertiesLoose();
init_extends();
var React112 = __toESM(require_react());
var import_prop_types74 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/TabPanel/tabPanelClasses.js
function getTabPanelUtilityClass(slot) {
  return generateUtilityClass2("JoyTabPanel", slot);
}
var tabListClasses3 = generateUtilityClasses2("JoyTabPanel", ["root", "hidden", "sizeSm", "sizeMd", "sizeLg"]);
var tabPanelClasses_default = tabListClasses3;

// node_modules/@mui/joy/TabPanel/TabPanel.js
var import_jsx_runtime108 = __toESM(require_jsx_runtime());
var _excluded74 = ["children", "value", "component", "size"];
var useUtilityClasses61 = (ownerState) => {
  const {
    hidden,
    size
  } = ownerState;
  const slots = {
    root: ["root", hidden && "hidden", size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getTabPanelUtilityClass, {});
};
var TabPanelRoot = styled_default("div", {
  name: "JoyTabPanel",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => _extends({
  display: ownerState.hidden ? "none" : "initial"
}, ownerState.orientation === "horizontal" && {
  paddingBlockStart: "var(--Tabs-gap)"
}, ownerState.orientation === "vertical" && {
  paddingInlineStart: "var(--Tabs-gap)"
}, ownerState.size === "sm" && {
  fontSize: theme.vars.fontSize.sm
}, ownerState.size === "md" && {
  fontSize: theme.vars.fontSize.md
}, ownerState.size === "lg" && {
  fontSize: theme.vars.fontSize.lg
}, {
  flexGrow: 1
}));
var TabPanel = React112.forwardRef(function TabPanel2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyTabPanel"
  });
  const {
    orientation
  } = useTabContext() || {
    orientation: "horizontal"
  };
  const tabsSize = React112.useContext(SizeTabsContext_default);
  const {
    children,
    component,
    size: sizeProp
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded74);
  const {
    hidden,
    getRootProps
  } = useTabPanel_default(props);
  const size = sizeProp != null ? sizeProp : tabsSize;
  const ownerState = _extends({}, props, {
    orientation,
    hidden,
    size
  });
  const classes = useUtilityClasses61(ownerState);
  const tabPanelRootProps = useSlotProps({
    elementType: TabPanelRoot,
    getSlotProps: getRootProps,
    externalSlotProps: {},
    externalForwardedProps: other,
    additionalProps: {
      role: "tabpanel",
      ref,
      as: component
    },
    ownerState,
    className: classes.root
  });
  return (0, import_jsx_runtime108.jsx)(TabPanelRoot, _extends({}, tabPanelRootProps, {
    children: !hidden && children
  }));
});
true ? TabPanel.propTypes = {
  children: import_prop_types74.default.node,
  component: import_prop_types74.default.elementType,
  size: import_prop_types74.default.oneOf(["sm", "md", "lg"]),
  sx: import_prop_types74.default.oneOfType([import_prop_types74.default.arrayOf(import_prop_types74.default.oneOfType([import_prop_types74.default.func, import_prop_types74.default.object, import_prop_types74.default.bool])), import_prop_types74.default.func, import_prop_types74.default.object]),
  value: import_prop_types74.default.oneOfType([import_prop_types74.default.number, import_prop_types74.default.string]).isRequired
} : void 0;
var TabPanel_default = TabPanel;

// node_modules/@mui/joy/Tabs/Tabs.js
init_objectWithoutPropertiesLoose();
init_extends();
var React113 = __toESM(require_react());
var import_prop_types75 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Tabs/tabsClasses.js
function getTabsUtilityClass(slot) {
  return generateUtilityClass2("JoyTabs", slot);
}
var tabListClasses4 = generateUtilityClasses2("JoyTabs", ["root", "horizontal", "vertical", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "variantPlain", "variantOutlined", "variantSoft", "variantSolid", "sizeSm", "sizeMd", "sizeLg"]);
var tabsClasses_default = tabListClasses4;

// node_modules/@mui/joy/Tabs/Tabs.js
var import_jsx_runtime109 = __toESM(require_jsx_runtime());
var _excluded75 = ["children", "value", "defaultValue", "orientation", "direction", "component", "onChange", "selectionFollowsFocus", "variant", "color", "size"];
var useUtilityClasses62 = (ownerState) => {
  const {
    orientation,
    variant,
    color,
    size
  } = ownerState;
  const slots = {
    root: ["root", orientation, variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`]
  };
  return composeClasses(slots, getTabsUtilityClass, {});
};
var TabsRoot = styled_default(SheetRoot, {
  name: "JoyTabs",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  ownerState,
  theme
}) => _extends({}, ownerState.size === "sm" && {
  "--Tabs-gap": "3px"
}, ownerState.size === "md" && {
  "--Tabs-gap": "4px"
}, ownerState.size === "lg" && {
  "--Tabs-gap": "0.5rem"
}, {
  "--List-radius": theme.vars.radius.md,
  display: "flex",
  flexDirection: "column"
}, ownerState.orientation === "vertical" && {
  flexDirection: "row"
}));
var Tabs = React113.forwardRef(function Tabs2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyTabs"
  });
  const {
    children,
    orientation = "horizontal",
    direction = "ltr",
    component,
    variant = "plain",
    color = "neutral",
    size = "md"
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded75);
  const {
    tabsContextValue
  } = useTabs_default(_extends({}, props, {
    orientation
  }));
  const ownerState = _extends({}, props, {
    orientation,
    direction,
    variant,
    color,
    size
  });
  const classes = useUtilityClasses62(ownerState);
  const tabsRootProps = useSlotProps({
    elementType: TabsRoot,
    externalSlotProps: {},
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    ownerState,
    className: classes.root
  });
  return (0, import_jsx_runtime109.jsx)(TabsRoot, _extends({}, tabsRootProps, {
    children: (0, import_jsx_runtime109.jsx)(TabsContext_default.Provider, {
      value: tabsContextValue,
      children: (0, import_jsx_runtime109.jsx)(SizeTabsContext_default.Provider, {
        value: size,
        children
      })
    })
  }));
});
true ? Tabs.propTypes = {
  children: import_prop_types75.default.node,
  color: import_prop_types75.default.oneOfType([import_prop_types75.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types75.default.string]),
  component: import_prop_types75.default.elementType,
  defaultValue: import_prop_types75.default.oneOfType([import_prop_types75.default.oneOf([false]), import_prop_types75.default.number, import_prop_types75.default.string]),
  direction: import_prop_types75.default.oneOf(["ltr", "rtl"]),
  onChange: import_prop_types75.default.func,
  orientation: import_prop_types75.default.oneOf(["horizontal", "vertical"]),
  selectionFollowsFocus: import_prop_types75.default.bool,
  size: import_prop_types75.default.oneOfType([import_prop_types75.default.oneOf(["sm", "md", "lg"]), import_prop_types75.default.string]),
  sx: import_prop_types75.default.oneOfType([import_prop_types75.default.arrayOf(import_prop_types75.default.oneOfType([import_prop_types75.default.func, import_prop_types75.default.object, import_prop_types75.default.bool])), import_prop_types75.default.func, import_prop_types75.default.object]),
  value: import_prop_types75.default.oneOfType([import_prop_types75.default.oneOf([false]), import_prop_types75.default.number, import_prop_types75.default.string]),
  variant: import_prop_types75.default.oneOfType([import_prop_types75.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types75.default.string])
} : void 0;
var Tabs_default = Tabs;

// node_modules/@mui/joy/TextField/TextField.js
init_objectWithoutPropertiesLoose();
init_extends();
var React114 = __toESM(require_react());
var import_prop_types76 = __toESM(require_prop_types());
init_clsx_m();
init_esm();

// node_modules/@mui/joy/TextField/textFieldClasses.js
function getTextFieldUtilityClass(slot) {
  return generateUtilityClass2("JoyTextField", slot);
}
var textFieldClasses = generateUtilityClasses2("JoyTextField", ["root", "disabled", "error", "focused", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantPlain", "variantOutlined", "variantSoft", "fullWidth"]);
var textFieldClasses_default = textFieldClasses;

// node_modules/@mui/joy/TextField/TextField.js
var import_jsx_runtime110 = __toESM(require_jsx_runtime());
var import_jsx_runtime111 = __toESM(require_jsx_runtime());
var _excluded76 = ["children", "className", "component", "components", "componentsProps", "label", "helperText", "id", "autoComplete", "autoFocus", "placeholder", "defaultValue", "value", "name", "onBlur", "onChange", "onFocus", "color", "disabled", "error", "required", "size", "variant", "fullWidth", "type", "startDecorator", "endDecorator"];
var useUtilityClasses63 = (ownerState) => {
  const {
    error,
    disabled,
    variant,
    size,
    color,
    fullWidth
  } = ownerState;
  const slots = {
    root: ["root", error && "error", disabled && "disabled", fullWidth && "fullWidth", variant && `variant${capitalize(variant)}`, size && `size${capitalize(size)}`, color && `color${capitalize(color)}`]
  };
  return composeClasses(slots, getTextFieldUtilityClass, {});
};
var TextFieldRoot = styled_default("div", {
  name: "JoyTextField",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette, _theme$vars$palette2, _theme$vars$palette3;
  return _extends({
    "--FormLabel-margin": "0 0 0.25rem 0",
    "--FormHelperText-margin": "0.25rem 0 0 0",
    "--FormLabel-asterisk-color": theme.vars.palette.danger[500],
    "--FormHelperText-color": (_theme$vars$palette = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette[500]
  }, ownerState.size === "sm" && {
    "--FormHelperText-fontSize": theme.vars.fontSize.xs,
    "--FormLabel-fontSize": theme.vars.fontSize.xs
  }, {
    [`&.${textFieldClasses_default.error}`]: {
      "--FormHelperText-color": theme.vars.palette.danger[500]
    },
    [`&.${textFieldClasses_default.disabled}`]: {
      "--FormLabel-color": (_theme$vars$palette2 = theme.vars.palette[ownerState.color || "neutral"]) == null ? void 0 : _theme$vars$palette2.plainDisabledColor,
      "--FormHelperText-color": (_theme$vars$palette3 = theme.vars.palette[ownerState.color || "neutral"]) == null ? void 0 : _theme$vars$palette3.plainDisabledColor
    },
    display: "flex",
    flexDirection: "column"
  }, ownerState.fullWidth && {
    width: "100%"
  });
});
var TextField = React114.forwardRef(function TextField2(inProps, ref) {
  const props = useThemeProps2({
    props: inProps,
    name: "JoyTextField"
  });
  const {
    className,
    component,
    components = {},
    componentsProps = {},
    label,
    helperText,
    id: idOverride,
    autoComplete,
    autoFocus,
    placeholder,
    defaultValue,
    value,
    name,
    onBlur,
    onChange,
    onFocus,
    color,
    disabled = false,
    error = false,
    required = false,
    size = "md",
    variant = "outlined",
    fullWidth = false,
    type = "text",
    startDecorator,
    endDecorator
  } = props, other = _objectWithoutPropertiesLoose(props, _excluded76);
  const id = useId(idOverride);
  const helperTextId = helperText && id ? `${id}-helper-text` : void 0;
  const formLabelId = label && id ? `${id}-label` : void 0;
  const ownerState = _extends({
    label,
    helperText,
    startDecorator,
    endDecorator,
    disabled,
    error,
    required,
    size,
    variant,
    fullWidth,
    type
  }, props);
  const classes = useUtilityClasses63(ownerState);
  const Input3 = components.Input || Input_default;
  return (0, import_jsx_runtime111.jsxs)(TextFieldRoot, _extends({
    ref,
    as: component,
    className: clsx_m_default(classes.root, className),
    ownerState
  }, other, {
    children: [label && (0, import_jsx_runtime110.jsx)(FormLabel_default, _extends({
      htmlFor: id,
      id: formLabelId,
      required
    }, componentsProps.label, components.Label && {
      component: components.Label
    }, {
      children: label
    })), (0, import_jsx_runtime110.jsx)(Input3, _extends({}, componentsProps.input, {
      id,
      name,
      type,
      "aria-describedby": helperTextId,
      autoComplete,
      autoFocus,
      placeholder,
      disabled,
      error,
      required,
      color,
      size,
      fullWidth,
      variant,
      defaultValue,
      value,
      onChange,
      onBlur,
      onFocus,
      startDecorator,
      endDecorator
    })), helperText && (0, import_jsx_runtime110.jsx)(FormHelperText_default, _extends({
      id: helperTextId
    }, componentsProps.helperText, components.HelperText && {
      component: components.HelperText
    }, {
      children: helperText
    }))]
  }));
});
true ? TextField.propTypes = {
  autoComplete: import_prop_types76.default.string,
  autoFocus: import_prop_types76.default.bool,
  children: import_prop_types76.default.node,
  className: import_prop_types76.default.string,
  color: import_prop_types76.default.oneOfType([import_prop_types76.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types76.default.string]),
  component: import_prop_types76.default.elementType,
  components: import_prop_types76.default.shape({
    HelperText: import_prop_types76.default.elementType,
    Input: import_prop_types76.default.elementType,
    Label: import_prop_types76.default.elementType,
    Root: import_prop_types76.default.elementType
  }),
  componentsProps: import_prop_types76.default.shape({
    helperText: import_prop_types76.default.object,
    input: import_prop_types76.default.object,
    label: import_prop_types76.default.object,
    root: import_prop_types76.default.object
  }),
  defaultValue: import_prop_types76.default.oneOfType([import_prop_types76.default.arrayOf(import_prop_types76.default.string), import_prop_types76.default.number, import_prop_types76.default.string]),
  disabled: import_prop_types76.default.bool,
  endDecorator: import_prop_types76.default.node,
  error: import_prop_types76.default.bool,
  fullWidth: import_prop_types76.default.bool,
  helperText: import_prop_types76.default.node,
  id: import_prop_types76.default.string,
  label: import_prop_types76.default.node,
  name: import_prop_types76.default.string,
  onBlur: import_prop_types76.default.func,
  onChange: import_prop_types76.default.func,
  onFocus: import_prop_types76.default.func,
  placeholder: import_prop_types76.default.string,
  required: import_prop_types76.default.bool,
  size: import_prop_types76.default.oneOfType([import_prop_types76.default.oneOf(["sm", "md", "lg"]), import_prop_types76.default.string]),
  startDecorator: import_prop_types76.default.node,
  type: import_prop_types76.default.oneOf(["button", "checkbox", "color", "date", "datetime-local", "email", "file", "hidden", "image", "month", "number", "password", "radio", "range", "reset", "search", "submit", "tel", "text", "time", "url", "week"]),
  value: import_prop_types76.default.oneOfType([import_prop_types76.default.arrayOf(import_prop_types76.default.string), import_prop_types76.default.number, import_prop_types76.default.string]),
  variant: import_prop_types76.default.oneOfType([import_prop_types76.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types76.default.string])
} : void 0;
var TextField_default = TextField;

// node_modules/@mui/joy/Textarea/Textarea.js
init_objectWithoutPropertiesLoose();
init_extends();
var React115 = __toESM(require_react());
var import_prop_types77 = __toESM(require_prop_types());
init_esm();

// node_modules/@mui/joy/Textarea/textareaClasses.js
function getTextareaUtilityClass(slot) {
  return generateUtilityClass2("JoyTextarea", slot);
}
var textareaClasses = generateUtilityClasses2("JoyTextarea", ["root", "textarea", "formControl", "disabled", "error", "focused", "colorPrimary", "colorNeutral", "colorDanger", "colorInfo", "colorSuccess", "colorWarning", "sizeSm", "sizeMd", "sizeLg", "variantPlain", "variantOutlined", "variantSoft"]);
var textareaClasses_default = textareaClasses;

// node_modules/@mui/joy/Textarea/Textarea.js
var import_jsx_runtime112 = __toESM(require_jsx_runtime());
var import_jsx_runtime113 = __toESM(require_jsx_runtime());
var _excluded77 = ["propsToForward", "rootStateClasses", "inputStateClasses", "getRootProps", "getInputProps", "component", "componentsProps", "formControl", "focused", "error", "disabled", "size", "color", "variant", "startDecorator", "endDecorator", "minRows", "maxRows"];
var useUtilityClasses64 = (ownerState) => {
  const {
    disabled,
    variant,
    color,
    size
  } = ownerState;
  const slots = {
    root: ["root", disabled && "disabled", variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`, size && `size${capitalize(size)}`],
    textarea: ["textarea"],
    startDecorator: ["startDecorator"],
    endDecorator: ["endDecorator"]
  };
  return composeClasses(slots, getTextareaUtilityClass, {});
};
var TextareaRoot = styled_default("div", {
  name: "JoyTextarea",
  slot: "Root",
  overridesResolver: (props, styles2) => styles2.root
})(({
  theme,
  ownerState
}) => {
  var _theme$variants, _theme$vars$palette, _variantStyle$backgro, _theme$variants2, _theme$variants3;
  const variantStyle = (_theme$variants = theme.variants[`${ownerState.variant}`]) == null ? void 0 : _theme$variants[ownerState.color];
  return [_extends({
    "--Textarea-radius": theme.vars.radius.sm,
    "--Textarea-gap": "0.5rem",
    "--Textarea-placeholderOpacity": 0.5,
    "--Textarea-focusedThickness": "2px",
    "--Textarea-focusedHighlight": (_theme$vars$palette = theme.vars.palette[ownerState.color === "neutral" ? "primary" : ownerState.color]) == null ? void 0 : _theme$vars$palette[500]
  }, ownerState.size === "sm" && {
    "--Textarea-minHeight": "2rem",
    "--Textarea-paddingBlock": "calc(0.5rem - var(--variant-borderWidth, 0px))",
    "--Textarea-paddingInline": "0.5rem",
    "--Textarea-decorator-childHeight": "min(1.5rem, var(--Textarea-minHeight))",
    "--Icon-fontSize": "1.25rem"
  }, ownerState.size === "md" && {
    "--Textarea-minHeight": "2.5rem",
    "--Textarea-paddingBlock": "calc(0.5rem - var(--variant-borderWidth, 0px))",
    "--Textarea-paddingInline": "0.75rem",
    "--Textarea-decorator-childHeight": "min(2rem, var(--Textarea-minHeight))",
    "--Icon-fontSize": "1.5rem"
  }, ownerState.size === "lg" && {
    "--Textarea-minHeight": "3rem",
    "--Textarea-paddingBlock": "calc(0.75rem - var(--variant-borderWidth, 0px))",
    "--Textarea-paddingInline": "1rem",
    "--Textarea-gap": "0.75rem",
    "--Textarea-decorator-childHeight": "min(2.375rem, var(--Textarea-minHeight))",
    "--Icon-fontSize": "1.75rem"
  }, {
    "--internal-paddingBlock": "max((var(--Textarea-minHeight) - 2 * var(--variant-borderWidth) - var(--Textarea-decorator-childHeight)) / 2, 0px)",
    "--Textarea-decorator-childRadius": "max((var(--Textarea-radius) - var(--variant-borderWidth)) - var(--internal-paddingBlock), min(var(--internal-paddingBlock) / 2, (var(--Textarea-radius) - var(--variant-borderWidth)) / 2))",
    "--Button-minHeight": "var(--Textarea-decorator-childHeight)",
    "--IconButton-size": "var(--Textarea-decorator-childHeight)",
    "--Button-radius": "var(--Textarea-decorator-childRadius)",
    "--IconButton-radius": "var(--Textarea-decorator-childRadius)",
    boxSizing: "border-box",
    minWidth: 0,
    minHeight: "var(--Textarea-minHeight)",
    cursor: "text",
    position: "relative",
    display: "flex",
    flexDirection: "column",
    paddingInlineStart: `var(--Textarea-paddingInline)`,
    paddingBlock: "var(--Textarea-paddingBlock)",
    borderRadius: "var(--Textarea-radius)",
    fontFamily: theme.vars.fontFamily.body,
    fontSize: theme.vars.fontSize.md,
    lineHeight: theme.vars.lineHeight.md
  }, ownerState.size === "sm" && {
    fontSize: theme.vars.fontSize.sm,
    lineHeight: theme.vars.lineHeight.sm
  }, {
    transition: "border-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms, box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms",
    "&:before": {
      boxSizing: "border-box",
      content: '""',
      display: "block",
      position: "absolute",
      pointerEvents: "none",
      top: 0,
      left: 0,
      right: 0,
      bottom: 0,
      zIndex: 1,
      borderRadius: "inherit",
      margin: "calc(var(--variant-borderWidth) * -1)"
    }
  }), _extends({}, variantStyle, {
    backgroundColor: (_variantStyle$backgro = variantStyle == null ? void 0 : variantStyle.backgroundColor) != null ? _variantStyle$backgro : theme.vars.palette.background.surface,
    [`&:hover:not(.${textareaClasses_default.focused})`]: _extends({}, (_theme$variants2 = theme.variants[`${ownerState.variant}Hover`]) == null ? void 0 : _theme$variants2[ownerState.color], {
      backgroundColor: null,
      cursor: "text"
    }),
    [`&.${textareaClasses_default.disabled}`]: (_theme$variants3 = theme.variants[`${ownerState.variant}Disabled`]) == null ? void 0 : _theme$variants3[ownerState.color],
    [`&.${textareaClasses_default.focused}`]: {
      "&:before": {
        boxShadow: `inset 0 0 0 var(--Textarea-focusedThickness) var(--Textarea-focusedHighlight)`
      }
    }
  })];
});
var TextareaInput = styled_default(TextareaAutosize_default, {
  name: "JoyTextarea",
  slot: "Textarea",
  overridesResolver: (props, styles2) => styles2.textarea
})(({
  theme,
  ownerState
}) => {
  var _theme$vars$palette2;
  return {
    resize: "none",
    border: "none",
    minWidth: 0,
    outline: 0,
    padding: 0,
    paddingInlineEnd: `var(--Textarea-paddingInline)`,
    flex: "auto",
    alignSelf: "stretch",
    color: "inherit",
    backgroundColor: "transparent",
    fontFamily: "inherit",
    fontSize: "inherit",
    fontStyle: "inherit",
    fontWeight: "inherit",
    lineHeight: "inherit",
    "&:-webkit-autofill": {
      WebkitBackgroundClip: "text",
      WebkitTextFillColor: (_theme$vars$palette2 = theme.vars.palette[ownerState.color]) == null ? void 0 : _theme$vars$palette2.overrideTextPrimary
    },
    "&::-webkit-input-placeholder": {
      opacity: "var(--Textarea-placeholderOpacity)",
      color: "inherit"
    },
    "&::-moz-placeholder": {
      opacity: "var(--Textarea-placeholderOpacity)",
      color: "inherit"
    },
    "&:-ms-input-placeholder": {
      opacity: "var(--Textarea-placeholderOpacity)",
      color: "inherit"
    },
    "&::-ms-input-placeholder": {
      opacity: "var(--Textarea-placeholderOpacity)",
      color: "inherit"
    }
  };
});
var TextareaStartDecorator = styled_default("div", {
  name: "JoyTextarea",
  slot: "StartDecorator",
  overridesResolver: (props, styles2) => styles2.startDecorator
})(({
  theme
}) => ({
  display: "flex",
  marginInlineStart: "calc(var(--Textarea-paddingBlock) - var(--Textarea-paddingInline))",
  marginInlineEnd: "var(--Textarea-paddingBlock)",
  marginBlockEnd: "var(--Textarea-gap)",
  color: theme.vars.palette.text.tertiary,
  cursor: "initial"
}));
var TextareaEndDecorator = styled_default("div", {
  name: "JoyTextarea",
  slot: "EndDecorator",
  overridesResolver: (props, styles2) => styles2.endDecorator
})(({
  theme
}) => ({
  display: "flex",
  marginInlineStart: "calc(var(--Textarea-paddingBlock) - var(--Textarea-paddingInline))",
  marginInlineEnd: "var(--Textarea-paddingBlock)",
  marginBlockStart: "var(--Textarea-gap)",
  color: theme.vars.palette.text.tertiary,
  cursor: "initial"
}));
var Textarea = React115.forwardRef(function Textarea2(inProps, ref) {
  var _ref, _inProps$disabled, _ref2, _inProps$error, _ref3, _inProps$size, _ref4, _inProps$color;
  const props = useThemeProps2({
    props: inProps,
    name: "JoyTextarea"
  });
  const _useForwardedInput = useForwardedInput(props, textareaClasses_default), {
    propsToForward,
    rootStateClasses,
    inputStateClasses,
    getRootProps,
    getInputProps,
    component,
    componentsProps = {},
    formControl,
    focused,
    error: errorProp = false,
    disabled: disabledProp = false,
    size: sizeProp = "md",
    color: colorProp = "neutral",
    variant = "outlined",
    startDecorator,
    endDecorator,
    minRows,
    maxRows
  } = _useForwardedInput, other = _objectWithoutPropertiesLoose(_useForwardedInput, _excluded77);
  if (true) {
    const registerEffect = formControl == null ? void 0 : formControl.registerEffect;
    React115.useEffect(() => {
      if (registerEffect) {
        return registerEffect();
      }
      return void 0;
    }, [registerEffect]);
  }
  const disabled = (_ref = (_inProps$disabled = inProps.disabled) != null ? _inProps$disabled : formControl == null ? void 0 : formControl.disabled) != null ? _ref : disabledProp;
  const error = (_ref2 = (_inProps$error = inProps.error) != null ? _inProps$error : formControl == null ? void 0 : formControl.error) != null ? _ref2 : errorProp;
  const size = (_ref3 = (_inProps$size = inProps.size) != null ? _inProps$size : formControl == null ? void 0 : formControl.size) != null ? _ref3 : sizeProp;
  const color = error ? "danger" : (_ref4 = (_inProps$color = inProps.color) != null ? _inProps$color : formControl == null ? void 0 : formControl.color) != null ? _ref4 : colorProp;
  const ownerState = _extends({}, props, {
    color,
    disabled,
    error,
    focused,
    size,
    variant
  });
  const classes = useUtilityClasses64(ownerState);
  const rootProps = useSlotProps({
    elementType: TextareaRoot,
    getSlotProps: getRootProps,
    externalSlotProps: componentsProps.root,
    externalForwardedProps: other,
    additionalProps: {
      ref,
      as: component
    },
    ownerState,
    className: [classes.root, rootStateClasses]
  });
  const textareaProps = useSlotProps({
    elementType: TextareaInput,
    getSlotProps: (otherHandlers) => getInputProps(_extends({}, otherHandlers, propsToForward)),
    externalSlotProps: _extends({
      minRows,
      maxRows
    }, componentsProps.textarea),
    additionalProps: {
      id: formControl == null ? void 0 : formControl.htmlFor,
      "aria-describedby": formControl == null ? void 0 : formControl["aria-describedby"]
    },
    ownerState,
    className: [classes.textarea, inputStateClasses]
  });
  return (0, import_jsx_runtime113.jsxs)(TextareaRoot, _extends({}, rootProps, {
    children: [startDecorator && (0, import_jsx_runtime112.jsx)(TextareaStartDecorator, {
      className: classes.startDecorator,
      ownerState,
      children: startDecorator
    }), (0, import_jsx_runtime112.jsx)(TextareaInput, _extends({}, textareaProps)), endDecorator && (0, import_jsx_runtime112.jsx)(TextareaEndDecorator, {
      className: classes.endDecorator,
      ownerState,
      children: endDecorator
    })]
  }));
});
true ? Textarea.propTypes = {
  children: import_prop_types77.default.node,
  color: import_prop_types77.default.oneOfType([import_prop_types77.default.oneOf(["danger", "info", "neutral", "primary", "success", "warning"]), import_prop_types77.default.string]),
  componentsProps: import_prop_types77.default.shape({
    endDecorator: import_prop_types77.default.oneOfType([import_prop_types77.default.func, import_prop_types77.default.object]),
    root: import_prop_types77.default.oneOfType([import_prop_types77.default.func, import_prop_types77.default.object]),
    startDecorator: import_prop_types77.default.oneOfType([import_prop_types77.default.func, import_prop_types77.default.object]),
    textarea: import_prop_types77.default.oneOfType([import_prop_types77.default.func, import_prop_types77.default.object])
  }),
  disabled: import_prop_types77.default.bool,
  endDecorator: import_prop_types77.default.node,
  error: import_prop_types77.default.bool,
  maxRows: import_prop_types77.default.oneOfType([import_prop_types77.default.number, import_prop_types77.default.string]),
  minRows: import_prop_types77.default.oneOfType([import_prop_types77.default.number, import_prop_types77.default.string]),
  size: import_prop_types77.default.oneOfType([import_prop_types77.default.oneOf(["sm", "md", "lg"]), import_prop_types77.default.string]),
  startDecorator: import_prop_types77.default.node,
  sx: import_prop_types77.default.oneOfType([import_prop_types77.default.arrayOf(import_prop_types77.default.oneOfType([import_prop_types77.default.func, import_prop_types77.default.object, import_prop_types77.default.bool])), import_prop_types77.default.func, import_prop_types77.default.object]),
  variant: import_prop_types77.default.oneOfType([import_prop_types77.default.oneOf(["outlined", "plain", "soft", "solid"]), import_prop_types77.default.string])
} : void 0;
var Textarea_default = Textarea;
export {
  Alert_default as Alert,
  AspectRatio_default as AspectRatio,
  Avatar_default as Avatar,
  AvatarGroup_default as AvatarGroup,
  Badge_default as Badge,
  Box_default as Box,
  Breadcrumbs_default as Breadcrumbs,
  Button_default as Button,
  Card_default as Card,
  CardContent_default as CardContent,
  CardCover_default as CardCover,
  CardOverflow_default as CardOverflow,
  Checkbox_default as Checkbox,
  Chip_default as Chip,
  ChipDelete_default as ChipDelete,
  CircularProgress_default as CircularProgress,
  Container_default as Container,
  CssVarsProvider,
  Divider_default as Divider,
  FormHelperText_default as FormHelperText,
  FormLabel_default as FormLabel,
  Grid_default as Grid,
  IconButton_default as IconButton,
  Input_default as Input,
  Link_default as Link,
  List_default as List,
  ListDivider_default as ListDivider,
  ListItem_default as ListItem,
  ListItemButton_default as ListItemButton,
  ListItemContent_default as ListItemContent,
  ListItemDecorator_default as ListItemDecorator,
  Menu_default as Menu,
  MenuItem_default as MenuItem,
  MenuList_default as MenuList,
  Modal_default as Modal,
  ModalClose_default as ModalClose,
  ModalDialog_default as ModalDialog,
  Option_default as Option,
  Radio_default as Radio,
  RadioGroup_default as RadioGroup,
  Select_default as Select,
  Sheet_default as Sheet,
  Slider_default as Slider,
  Stack_default as Stack,
  StyledEngineProvider,
  SvgIcon_default as SvgIcon,
  Switch_default as Switch,
  Tab_default as Tab,
  TabList_default as TabList,
  TabPanel_default as TabPanel,
  Tabs_default as Tabs,
  TextField_default as TextField,
  Textarea_default as Textarea,
  ThemeProvider,
  Typography_default as Typography,
  alertClasses_default as alertClasses,
  aspectRatioClasses_default as aspectRatioClasses,
  avatarClasses_default as avatarClasses,
  avatarGroupClasses_default as avatarGroupClasses,
  badgeClasses_default as badgeClasses,
  breadcrumbsClasses_default as breadcrumbsClasses,
  buttonClasses_default as buttonClasses,
  cardClasses_default as cardClasses,
  cardContentClasses_default as cardContentClasses,
  cardCoverClasses_default as cardCoverClasses,
  cardOverflowClasses_default as cardOverflowClasses,
  checkboxClasses_default as checkboxClasses,
  chipClasses_default as chipClasses,
  chipDeleteClasses_default as chipDeleteClasses,
  circularProgressClasses_default as circularProgressClasses,
  colors_default as colors,
  containerClasses_default as containerClasses,
  createGetCssVar2 as createGetCssVar,
  dividerClasses_default as dividerClasses,
  sx as experimental_sx,
  extendTheme,
  formHelperTextClasses_default as formHelperTextClasses,
  formLabelClasses_default as formLabelClasses,
  getAlertUtilityClass,
  getAspectRatioUtilityClass,
  getAvatarGroupUtilityClass,
  getAvatarUtilityClass,
  getBadgeUtilityClass,
  getBreadcrumbsUtilityClass,
  getButtonUtilityClass,
  getCardContentUtilityClass,
  getCardCoverUtilityClass,
  getCardOverflowUtilityClass,
  getCardUtilityClass,
  getCheckboxUtilityClass,
  getChipDeleteUtilityClass,
  getChipUtilityClass,
  getCircularProgressUtilityClass,
  getContainerUtilityClass,
  getDividerUtilityClass,
  getFormHelperTextUtilityClass,
  getFormLabelUtilityClass,
  getGridUtilityClass,
  getIconButtonUtilityClass,
  getInitColorSchemeScript,
  getInputUtilityClass,
  getLinkUtilityClass,
  getListDividerUtilityClass,
  getListItemButtonUtilityClass,
  getListItemContentUtilityClass,
  getListItemDecoratorUtilityClass,
  getListItemUtilityClass,
  getListUtilityClass,
  getMenuItemUtilityClass,
  getMenuListUtilityClass,
  getMenuUtilityClass,
  getModalCloseUtilityClass,
  getModalDialogUtilityClass,
  getModalUtilityClass2 as getModalUtilityClass,
  getOptionUtilityClass,
  getRadioGroupUtilityClass,
  getRadioUtilityClass,
  getSelectUtilityClass,
  getSheetUtilityClass,
  getSliderUtilityClass2 as getSliderUtilityClass,
  getStackUtilityClass,
  getSvgIconUtilityClass,
  getSwitchUtilityClass,
  getTabListUtilityClass,
  getTabPanelUtilityClass,
  getTabUtilityClass,
  getTabsUtilityClass,
  getTextFieldUtilityClass,
  getTextareaUtilityClass,
  getTypographyUtilityClass,
  gridClasses_default as gridClasses,
  iconButtonClasses_default as iconButtonClasses,
  inputClasses_default as inputClasses,
  linkClasses_default as linkClasses,
  listClasses_default as listClasses,
  listDividerClasses_default as listDividerClasses,
  listItemButtonClasses_default as listItemButtonClasses,
  listItemClasses_default as listItemClasses,
  listItemContentClasses_default as listItemContentClasses,
  listItemDecoratorClasses_default as listItemDecoratorClasses,
  menuClasses_default as menuClasses,
  menuItemClasses_default as menuItemClasses,
  menuListClasses_default as menuListClasses,
  modalClasses_default as modalClasses,
  modalCloseClasses_default as modalCloseClasses,
  modalDialogClasses_default as modalDialogClasses,
  optionClasses_default as optionClasses,
  radioClasses_default as radioClasses,
  radioGroupClasses_default as radioGroupClasses,
  selectClasses_default as selectClasses,
  sheetClasses_default as sheetClasses,
  shouldSkipGeneratingVar,
  sliderClasses_default as sliderClasses,
  stackClasses_default as stackClasses,
  styled_default as styled,
  svgIconClasses_default as svgIconClasses,
  switchClasses_default as switchClasses,
  tabClasses_default as tabClasses,
  tabListClasses_default as tabListClasses,
  tabPanelClasses_default as tabPanelClasses,
  tabsClasses_default as tabsClasses,
  textFieldClasses_default as textFieldClasses,
  textareaClasses_default as textareaClasses,
  typographyClasses_default as typographyClasses,
  useColorScheme,
  useTheme,
  useThemeProps2 as useThemeProps
};
/**
 * @license React
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license MUI v5.0.0-alpha.47
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license MUI v5.0.0-alpha.99
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//# sourceMappingURL=@mui_joy.js.map
